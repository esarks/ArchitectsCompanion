C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\conf\ScriptImport.script:1: package <#[$jac:script:package]#>;
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\conf\ScriptImport.script:2: 
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\conf\ScriptImport.script:3: import com.esarks.jac.*;
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\conf\ScriptImport.script:4: import java.util.*;
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\conf\ScriptImport.script:5: import java.lang.reflect.*;
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\conf\ScriptImport.script:6: import java.io.*;
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\conf\ScriptImport.script:7: import java.util.*;
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\conf\ScriptImport.script:8: import java.text.*;
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\conf\ScriptImport.script:9: import java.net.*;
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\conf\ScriptImport.script:10: //import java.sql.*;
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\conf\ScriptImport.script:11: //import javax.servlet.*;
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\conf\ScriptImport.script:12: //import javax.servlet.http.*;
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\conf\ScriptImport.script:13: //import javax.servlet.jsp.*;
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\conf\ScriptImport.script:14: 
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\conf\ScriptPrefix.script:1: 
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\conf\ScriptPrefix.script:2: public class <#[$jac:script]#> <#[$jac:script:extends]#> <#[$jac:script:implements]#> {
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\conf\ScriptPrefix.script:3: 
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\conf\ScriptPrefix.script:4: <#var#>
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\conf\ScriptPrefix.script:5: 
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\conf\ScriptPrefix.script:6:   private String iScriptPackage = "<#[$jac:script:package]#>";
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\conf\ScriptPrefix.script:7:   private String iScriptName = "<#[$jac:script]#>";
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\conf\ScriptPrefix.script:8: 
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\conf\ScriptPrefix.script:9:   protected <#[$jac:script]#>() {
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\conf\ScriptPrefix.script:10:   }
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\conf\ScriptPrefix.script:11: 
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\conf\ScriptPrefix.script:12:   public <#[$jac:script]#>(Script aScript) {
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\conf\ScriptPrefix.script:13: 
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\conf\ScriptPrefix.script:14:     super(aScript);
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\conf\ScriptPrefix.script:15: 
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\conf\ScriptPrefix.script:16:   }
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\conf\ScriptPrefix.script:17: 
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\conf\ScriptPrefix.script:18:   public void execute() {
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\conf\ScriptPrefix.script:19:     
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\conf\ScriptPrefix.script:20: %>
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:1: // Begin: com.esarks.arm.scripts.EndMethod
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:2: <%
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:3:   if (<!$jac:script:xml:return!>!size() > 0) {
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:4:   }
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:5:   if (<!$jac:script:xml:normalReturn!>!size() == 0) {
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:6:   }
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:7: %>
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:8: 
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:9: <%
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:10:   if (<!$jac:script:xml:return!>!size() == 0 || <!$jac:script:xml:normalReturn!>!size() > 0) {
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:11: %>
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:12:     if (iMicLog.test(Log._APP)) {
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:13:       lMethodStopDate = new java.util.Date();
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:14:       iMicLog.println(Log._APP, "Exit " + iScriptFullName + ":" + lMethodSignature + "!Normal exit!Elapsed time = " + Long.toString(lMethodStopDate.getTime() - lMethodStartDate.getTime()));
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:15:     }
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:16: <%
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:17:   }
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:18:   if (<!$jac:script:xml:normalReturn!>!size() > 0) {
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:19: %>
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:20:     return <![$jac:script:xml:normalReturn]!>;
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:21: <%
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:22:   }
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:23: %>
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:24: 
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:25:   } catch (Throwable e) {
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:26:     setContext(iScript.getMasterScript());
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:27:     iPropertyHelper.setPropertyName(iSymbolTable.translateProperties("$jac:event")).set(e.getMessage());
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:28:     iPropertyHelper.setPropertyName(iSymbolTable.translateProperties("$jac:event:severity")).set("fatal");
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:29:     iPropertyHelper.setPropertyName(iSymbolTable.translateProperties("$jac:event:scriptPackage")).set(iScriptPackage);
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:30:     iPropertyHelper.setPropertyName(iSymbolTable.translateProperties("$jac:event:scriptName")).set(iScriptName);
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:31:     restoreContext();
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:32:     setExit();
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:33: 
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:34:     iScript.execMethod("com.esarks.arm.logging.ExceptionRptController", "execute", new Object[]{"", iScriptFullName, lMethodSignature, "fatal", lMethodLocation, e.getMessage(), "Unhandled exception.", "Review this exception to determine proper handling."});
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:35: 
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:36:     System.out.println("ExceptionRptController called..." + e.getMessage());
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:37: 
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:38:     com.esarks.arm.model.jeo.ServiceJeo lExceptionServiceJeo = new com.esarks.arm.model.jeo.ServiceJeo();
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:39:     com.esarks.arm.logging.ExceptionJeo lExceptionJeo = new com.esarks.arm.logging.ExceptionJeo("detail");
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:40:     lExceptionServiceJeo.addJeo(lExceptionJeo);
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:41:     java.sql.Timestamp lExceptionTimestamp = new java.sql.Timestamp(new java.util.Date().getTime());
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:42:     lExceptionJeo.setTime(lExceptionTimestamp);
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:43:     lExceptionJeo.setModule(iScriptFullName);
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:44:     lExceptionJeo.setMethod(lMethodSignature);
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:45:     lExceptionJeo.setSeverity("unknown");
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:46:     lExceptionJeo.setLocation(lMethodLocation);
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:47:     lExceptionJeo.setDescription(e.getMessage());
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:48:     lExceptionJeo.setAction("unknown");
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:49:     lExceptionJeo.setResolution("unknown");
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:50: 
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:51:     StackTraceElement[] lStackTraceElements = e.getStackTrace();
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:52:     for (int lTraceIdx=0; lTraceIdx < lStackTraceElements.length; lTraceIdx++) {
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:53:       com.esarks.arm.logging.ExceptionJeo lStackExceptionJeo = new com.esarks.arm.logging.ExceptionJeo("trace");
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:54:       lStackExceptionJeo.setDescription(lStackTraceElements[lTraceIdx].toString());
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:55:       lExceptionJeo.addJeo(lStackExceptionJeo);
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:56:     }
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:57: 
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:58:     iScript.execMethod("com.esarks.arm.logging.ExceptionRpt", "render", new Object[]{"logs.Exception", lExceptionServiceJeo});
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:59: 
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:60:     if (iMicLog.test(Log._APP)) {
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:61:       lMethodStopDate = new java.util.Date();
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:62:       iMicLog.println(Log._APP, "Exit " + iScriptFullName + ":" + lMethodSignature + "!Exception caught!" + e.getMessage() + "!Elapsed time = " + Long.toString(lMethodStopDate.getTime() - lMethodStartDate.getTime()));
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:63:     }
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:64: 
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:65:     return <![$jac:script:xml:return]!>;
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:66:   }
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:67:   }
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\source\scripts\com\esarks\arm\scripts\ExitMethod.script:68: // End: com.esarks.arm.scripts.EndMethod
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\conf\ScriptPostfix.script:1: <%
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\conf\ScriptPostfix.script:2:   }
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\conf\ScriptPostfix.script:3: }
C:\GitHub\ArchitectsCompanion\jac2020\jacBuild8\conf\ScriptPostfix.script:4: 
