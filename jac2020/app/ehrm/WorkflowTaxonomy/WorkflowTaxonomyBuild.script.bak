
public void execute() {

%>
<![$jac:path:scripts]!><!%path("ehrm.WorkflowTaxonomy.Workflowtaxonomy")!><!%".xml"!>
<![$jac:path:scripts]!><!%path("ehrm.WorkflowTaxonomy.WorkflowtaxonomyComments")!><!%".xml"!>
<%

  iSymbolTable.parseXml(<![$jac:path:scripts]!> + path("ehrm.WorkflowTaxonomy.Workflowtaxonomy") + ".xml");
  iSymbolTable.parseXml(<![$jac:path:scripts]!> + path("ehrm.WorkflowTaxonomy.WorkflowtaxonomyComments") + ".xml");

  <!business:wfDiagramsList:wfd!>!resetIterator();
  while (<!business:wfDiagramsList:wfd!>!next()) {

%>
*** <![business:wfDiagramsList:wfd:id]!> *** <![business:wfDiagramsList:wfd:name]!>
<%

  }
  
//  executeExtractComments();
//  executeWorkflowTaxonomyComments();
  executeWorkflowTaxonomyStatus();
//  executeWorkflowTaxonomyProducts();
//  executeWorkflowTaxonomy();

}
////////////////////////////////////////////////////////////////////////////////////////////////
/// executeExtractComments
////////////////////////////////////////////////////////////////////////////////////////////////

public void executeExtractComments() {

%>executeExtractComments v20191013a
<%

  String lCdata = "<" + "!" + "[CDATA[";
  String lLine = "";
  boolean lPrint = false;
  String lLastTag="";

  iOutputManager.openOutputFile(<![$jac:path:scripts]!> + path("ehrm.WorkflowTaxonomy.WorkflowtaxonomyComments") + ".xml", false);

%>
<comments>
<%
  try {

    <!business:wfDiagramsList:wfd!>!resetIterator();
    while (<!business:wfDiagramsList:wfd!>!next()) {

      String lFileName = <![business:pdfs:folder]!> + "\\" + <![business:pdfs:[business:wfDiagramsList:wfd:id]:name]!>;
      File lFile = new File(lFileName);
      FileReader lFr = new FileReader(lFile);
      BufferedReader lBr = new BufferedReader(lFr);
      Boolean lComments = false;
      <!report!>!remove();    
%>
<<![business:wfDiagramsList:wfd:id]!> name="<![business:pdfs:[business:wfDiagramsList:wfd:id]:name]!>">
<%

      while((lLine = lBr.readLine()) != null){

        if (lLine.startsWith("Future State:")) continue; 
        if (lLine.startsWith("Cerner Workflow ID")) continue;
        if (lLine.trim().length() == 0) continue;
        
        lLine = lLine.replace("\"", "'");              
        if ( lLine.startsWith("Comments:")) {
          lComments = true;
          <!report:line!>!set("\n");
          <!report:line!>!set(lLine);
          continue;
        } //if ( lLine.startsWith("Comments:"))

        if ( lLine.startsWith("©")) {
          lLine = lBr.readLine();
          lLine = lBr.readLine();
          lLine = lBr.readLine();
          lLine = lBr.readLine();
          lLine = lBr.readLine();
          lLine = lBr.readLine();
          continue;
        }

        if ( (!lComments) && (lLine.startsWith("Work Step") ||
             lLine.startsWith("System") ||
             lLine.startsWith("Decision") ||
             lLine.startsWith("Start/Stop") ||
             lLine.startsWith("Off Page Reference") ||
             lLine.startsWith("Document") ||
             lLine.startsWith("Swim Lane/Role"))) {
             
             <!report:line!>!reset(lLine);
             continue;
         } //if ( (!lComments) && (lLine.startsWith("Work Step") ||

        if ( (lComments) && (lLine.startsWith("Work Step") ||
             lLine.startsWith("System") ||
             lLine.startsWith("Decision") ||
             lLine.startsWith("Start/Stop") ||
             lLine.startsWith("Off Page Reference") ||
             lLine.startsWith("Document") ||
             lLine.startsWith("Swim Lane/Role"))) {

%>
<comment><!%lCdata!><%             
            <!report:line!>!resetIterator();
            while (<!report:line!>!next()) {
%>
<![report:line]!>
<%
            } //while (<!report:line!>!next())
%>]]></comment>
<%

             lComments = false;
             <!report:line!>!reset(lLine);
             continue;
         } //if ( (lComments) && (lLine.startsWith("Work Step") ||

        <!report:line!>!set(lLine);
        
      } //while((lLine = lBr.readLine()) != null)

      if (lComments) {
%>
<comment><!%lCdata!><%             
            <!report:line!>!resetIterator();
            while (<!report:line!>!next()) {
%>
<![report:line]!>
<%
            } //while (<!report:line!>!next())
%>]]></comment>
<%
      }

%>
</<![business:wfDiagramsList:wfd:id]!>>
<%

    } // While
  } catch (IOException lException) {
%>
<!%lException!>
<%

  }

%>
</comments>
<%
  iOutputManager.closeOutputFile();

}    

////////////////////////////////////////////////////////////////////////////////////////////////
/// executeWorkflowTaxonomyStatus
////////////////////////////////////////////////////////////////////////////////////////////////

public void executeWorkflowTaxonomyStatus() {

%>EHRM Hello World! v20190816a
<%

  iOutputManager.openOutputFile("C:\\GitHub\\ArchitectsCompanion\\jac2020\\app\\ehrm\\WorkflowTaxonomy\\WorkflowTaxonomyStatus.csv", false);

%>
Flow ID,Flow Name,Status,Council,"DCW<!%Character.toString((char) 10)!>Required   ","DCW<!%Character.toString((char) 10)!>Completed   ","DDM<!%Character.toString((char) 10)!>Required   ","DDM<!%Character.toString((char) 10)!>Completed   ","Build in 81930<!%Character.toString((char) 10)!>Completed   ",,,,heading
<%

  <!business:wfDiagramsList:wfd!>!resetIterator();
  while (<!business:wfDiagramsList:wfd!>!next()) {


%>
<![business:wfDiagramsList:wfd:id]!>,<![business:wfDiagramsNames:[business:wfDiagramsList:wfd:id]:name]!>,<![business:wfStates:[business:wfDiagramsList:wfd:id]:status]!>,<![business:wfStates:[business:wfDiagramsList:wfd:id]:council]!>,<![business:wfStates:[business:wfDiagramsList:wfd:id]:dcwRqd]!>,<![business:wfStates:[business:wfDiagramsList:wfd:id]:dcwCmp]!>,<![business:wfStates:[business:wfDiagramsList:wfd:id]:ddmRqd]!>,<![business:wfStates:[business:wfDiagramsList:wfd:id]:ddmCmp]!>,<![business:wfStates:[business:wfDiagramsList:wfd:id]:build]!>,,,,flow
<%

    <!business:wfSubflows:[business:wfDiagramsList:wfd:id]:subflow!>!resetIterator();
    while (<!business:wfSubflows:[business:wfDiagramsList:wfd:id]:subflow!>!next()) {     
%>
<![business:wfSubflows:[business:wfDiagramsList:wfd:id]:subflow:id]!>,<![business:wfDiagramNames:[business:wfSubflows:[business:wfDiagramsList:wfd:id]:subflow:id]:name]!>,,,,,,,,,,,subFlow
<%
    }
  }

  iOutputManager.closeOutputFile();

}

////////////////////////////////////////////////////////////////////////////////////////////////
/// executeWorkflowTaxonomyProducts
////////////////////////////////////////////////////////////////////////////////////////////////

public void executeWorkflowTaxonomyStatus2() {

%>EHRM Hello World! v20190816a
<%

  iOutputManager.openOutputFile("C:\\GitHub\\ArchitectsCompanion\\jac2020\\app\\ehrm\\WorkflowTaxonomy\\WorkflowTaxonomyStatus.csv", false);

%>
Flow ID,Flow Name,Status,Council,"DCW<!%Character.toString((char) 10)!>Required   ","DCW<!%Character.toString((char) 10)!>Completed   ","DDM<!%Character.toString((char) 10)!>Required   ","DDM<!%Character.toString((char) 10)!>Completed   ","Build in 81930<!%Character.toString((char) 10)!>Completed   ",,,,heading
<%

  <!business!>!resetIterator();
  while (<!business!>!next()) {

    <!business:wfDiagramsList:wfd!>!resetIterator();
    while (<!business:wfDiagramsList:wfd!>!next()) {

%>
<![business:wfDiagramsList:wfd:id]!>,<![business:wfDiagramsList:wfd:name]!>,<![business:wfStates:[business:wfDiagramsList:wfd:id]:status]!>,<![business:wfStates:[business:wfDiagramsList:wfd:id]:council]!>,<![business:wfStates:[business:wfDiagramsList:wfd:id]:dcwRqd]!>,<![business:wfStates:[business:wfDiagramsList:wfd:id]:dcwCmp]!>,<![business:wfStates:[business:wfDiagramsList:wfd:id]:ddmRqd]!>,<![business:wfStates:[business:wfDiagramsList:wfd:id]:ddmCmp]!>,<![business:wfStates:[business:wfDiagramsList:wfd:id]:build]!>,,,,flow
<%

      <!business:wfSubflows:[business:wfDiagramsList:wfd:id]:subflow!>!resetIterator();
      while (<!business:wfSubflows:[business:wfDiagramsList:wfd:id]:subflow!>!next()) {     
%>
<![business:wfSubflows:[business:wfDiagramsList:wfd:id]:subflow:id]!>,<![business:wfDiagramNames:[business:wfSubflows:[business:wfDiagramsList:wfd:id]:subflow:id]:name]!>,,,,,,,,,,,subFlow
<%
      }
    }
  }

  iOutputManager.closeOutputFile();

}

////////////////////////////////////////////////////////////////////////////////////////////////
/// executeWorkflowTaxonomyComments
////////////////////////////////////////////////////////////////////////////////////////////////

public void executeWorkflowTaxonomyComments() {

%>EHRM Hello World! v20190816a
<%

  iOutputManager.openOutputFile("C:\\GitHub\\ArchitectsCompanion\\jac2020\\app\\ehrm\\WorkflowTaxonomy\\WorkflowTaxonomyComments.csv", false);

  <!business!>!resetIterator();
  while (<!business!>!next()) {

    <!business:wfDiagramsList:wfd!>!resetIterator();
    while (<!business:wfDiagramsList:wfd!>!next()) {

%>
<![business:wfDiagramsList:wfd:id]!>,<![business:wfDiagramsList:wfd:name]!>
<%

      <!comments:[business:wfDiagramsList:wfd:id]:comment!>!resetIterator();
      while (<!comments:[business:wfDiagramsList:wfd:id]:comment!>!next()) {
      
%>
,"<![comments:[business:wfDiagramsList:wfd:id]:comment]!>"
<%

      }
    }
  }

  iOutputManager.closeOutputFile();

}

////////////////////////////////////////////////////////////////////////////////////////////////
/// executeWorkflowTaxonomy
////////////////////////////////////////////////////////////////////////////////////////////////

public void executeWorkflowTaxonomy() {

%>EHRM Hello World! v20190816a
<%

  iOutputManager.openOutputFile("C:\\GitHub\\ArchitectsCompanion\\jac2020\\app\\ehrm\\WorkflowTaxonomy\\WorkflowTaxonomy.csv", false);

  int lRow = 1;
  
  <!business:major!>!resetIterator();
  while (<!business:major!>!next()) {

%>
<![business:major:name]!>,,,,,,,,,group,<!%lRow++!>
<%

    <!business:major:workflow!>!resetIterator();
    while (<!business:major:workflow!>!next()) {

%>
<![business:major:name]!>,<![business:major:workflow:name]!>,,,,,<![business:major:workflow:date1]!>,<![business:major:workflow:date2]!>,,workflow,<!%lRow++!>
<%

      <!business:major:workflow:wfdesigner!>!resetIterator();
      while (<!business:major:workflow:wfdesigner!>!next()) {

%>
<![business:major:name]!>,,(<![business:major:workflow:wfdesigner:name]!>) <![business:wfDiagramNames:[business:major:workflow:wfdesigner:name]:name]!>,,,,,,,wfdesigner,<!%lRow!>
<%

      } // while (<!business:major:workflow:wfdesigner!>!next())
    } // while (<!business:major:workflow!>!next())
  } // while (<!business:major!>!next())

  iOutputManager.closeOutputFile();

}

