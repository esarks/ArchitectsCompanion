<$script>

<$reset $outputFile=[$tempDirectory][$backSlash]rules.wri>
<$kill [$outputFile]>
<$openoutput [$outputFile]>
<$println //$Section=buildSentence $Preserve=no>
<$println 	CP_AWD_DECN *searchObject;>
<$foreach decisionRules:decision>

  <$println 	// ##########################################################################>
  <$println 	// Decision Type: [decisionRules:decision:type]>
  <$println 	if (cp_awd_decn-\>isAWD_DECN_USEDEmpty() == TRUE && cp_awd_decn-\>getAWD_DECN_TYPEValue().compareTo("[decisionRules:decision:type]") == 0) {>
  <$if [decisionRules:decision:setused]=false>
  <$else>
    <$println 		cp_awd_decn-\>setAWD_DECN_USED("Y");>
  <$endif>
  <$println >
  <$unset Entity=>
  <$setxml [$scriptDirectory][$backSlash][decisionRules:decision:type].xml>
  <$find Entity:name=[decisionRules:decision:type]>
  <$notfound>
    <$debug Entity:name=[decisionRules:decision:type] NOT FOUND!>
  <$endfind>

  <$foreach decisionRules:decision:rules:rule>

    <$foreach decisionRules:decision:rules:rule:condition>

      <$println 	//[decisionRules:decision:rules:rule:condition:when]>

      <$if [decisionRules:decision:rules:rule:condition:search]=>
        <$if [decisionRules:decision:rules:rule:condition:field]=>
          <$println 		{>
        <$else>
        <$endif>
      <$endif>

      <$if [decisionRules:decision:rules:rule:condition:search]=>
      <$else>
        <$println 		for (unsigned int i=0; i < recordObjectCltn-\>entries(); i++) {>
        <$println 			searchObject = (CP_AWD_DECN*) recordObjectCltn-\>at(i);>
        <$print 			if (>
        <$unset indent>
        <$foreach decisionRules:decision:rules:rule:condition:search>
        <$last>
          <$println [indent][decisionRules:decision:rules:rule:condition:search]) {>
        <$every>
          <$println [indent][decisionRules:decision:rules:rule:condition:search]>
          <$set indent=				>
        <$endfor>
        <$println 				buildSentence(recordObjectCltn, cp_awd_decn, cp_awd_hist);>
        <$println 			}>
      <$endif>

      <$if [decisionRules:decision:rules:rule:condition:field]=>
      <$else>
        <$print 		if ( >
        <$unset indent>
        <$foreach decisionRules:decision:rules:rule:condition:field>
          <$unset openParen>
          <$unset closeParen>
          <$if [decisionRules:decision:rules:rule:condition:field:paren]=open>
            <$reset openParen=(>
            <$unset closeParen>
          <$endif>
          <$if [decisionRules:decision:rules:rule:condition:field:paren]=close>
            <$unset openParen>
            <$reset closeParen=)>
          <$endif>
          <$if [decisionRules:decision:rules:rule:condition:field:test]=isBlank>
            <$print [indent][openParen]cp_awd_decn-\>is[decisionRules:decision:rules:rule:condition:field]Empty() == TRUE[closeParen] >
          <$endif>
          <$if [decisionRules:decision:rules:rule:condition:field:test]=notBlank>
            <$print [indent][openParen]cp_awd_decn-\>is[decisionRules:decision:rules:rule:condition:field]Empty() == FALSE[closeParen] >
          <$endif>
          <$if [decisionRules:decision:rules:rule:condition:field:test]=gtEqZero>
            <$print [indent][openParen]cp_awd_decn-\>get[decisionRules:decision:rules:rule:condition:field]Value() >= 0[closeParen] >
          <$endif>
          <$if [decisionRules:decision:rules:rule:condition:field:test]=gtZero>
            <$print [indent][openParen]cp_awd_decn-\>get[decisionRules:decision:rules:rule:condition:field]Value() > 0[closeParen] >
          <$endif>
          <$if [decisionRules:decision:rules:rule:condition:field:test]=compareNotEquals>
            <$print [indent][openParen]cp_awd_decn-\>get[decisionRules:decision:rules:rule:condition:field]Value().compareTo("[decisionRules:decision:rules:rule:condition:field:value]") != 0[closeParen] >
          <$endif>
          <$if [decisionRules:decision:rules:rule:condition:field:test]=compareEquals>
            <$print [indent][openParen]cp_awd_decn-\>get[decisionRules:decision:rules:rule:condition:field]Value().compareTo("[decisionRules:decision:rules:rule:condition:field:value]") == 0[closeParen] >
          <$endif>
          <$if [decisionRules:decision:rules:rule:condition:field:connector]=>
            <$println>
          <$else>
            <$if [decisionRules:decision:rules:rule:condition:field:connector]=and>
              <$println &&>
              <$print 	>
            <$endif>
            <$if [decisionRules:decision:rules:rule:condition:field:connector]=or>
              <$println ||>
              <$print 	>
            <$endif>
          <$endif>
          <$set indent=		>
        <$endfor>
        <$println ) {>
      <$endif>

      <$if [decisionRules:decision:rules:rule:condition:phrase:text][decisionRules:decision:rules:rule:condition:phrase:field]=>
      <$else>
        <$print 			cp_awd_hist-\>setHIST_TXT( cp_awd_hist-\>getHIST_TXTValue() >
      <$endif>

      <$foreach decisionRules:decision:rules:rule:condition:phrase>

        <$if [decisionRules:decision:rules:rule:condition:phrase:text]=>
        <$else>
          <$println >
          <$print 				<< "[decisionRules:decision:rules:rule:condition:phrase:text]">
        <$endif>

        <$if [decisionRules:decision:rules:rule:condition:phrase:field]=>
        <$else>
          <$if [decisionRules:decision:rules:rule:condition:phrase:participant]=true>
            <$println >
            <$print 				<< insertFieldAsString(cp_awd_decn, "FULL_NM", "")>
          <$else>
            <$reset format="[decisionRules:decision:rules:rule:condition:phrase:format]">
            <$println >
            <$print 				<< insertFieldAsString(cp_awd_decn, "[decisionRules:decision:rules:rule:condition:phrase:field]", [format])>
          <$endif>
        <$endif>
      <$endfor>

      <$if [decisionRules:decision:rules:rule:condition:phrase:text][decisionRules:decision:rules:rule:condition:phrase:field]=>
      <$else>
        <$println );>
      <$endif>
      <$println 		}>
      <$println >

    <$endfor>
    <$println 	}>
    <$println >
    <$println >

  <$endfor>

<$endfor>

<$println //$Section=buildSentence $Preserve=no>
<$println //$Section=epilog $Preserve=yes>
<$println //$Section=epilog $Preserve=no>
<$close [$outputFile]>
<$merge C:\\vetsnet_cm\\tuxedo\\cp\\src\\awards\\Rules\\CPDetermineSentence.cpp=[$outputFile]>
