<$kill [$homeDirectory]\\com\\esarks\\ac\\scripts\\GenerateDocs.java>
<$kill [$homeDirectory]\\com\\esarks\\ac\\scripts\\GenerateDocs.class>
<$openoutput [$homeDirectory]\\com\\esarks\\ac\\scripts\\GenerateDocs.java>
package com.esarks.ac.scripts;

import com.esarks.ac.*;
import java.util.*;

public class GenerateDocs {

private ArrayList iArrayList = new ArrayList();
private Script iScript;

  private GenerateDocs(  ) {
  }

  public GenerateDocs(com.esarks.ac.Script aScript) {
    iScript = (Script) aScript;
  }

  public void addCppItem(String aItem, String aType, String aSize, String aOracleType, String aOracleSize, String aBaseType) {

    if (addItem(aItem) == true) {
      iScript.getSymbolTable().setLocalProperty("Items", aItem);
      iScript.getSymbolTable().setLocalProperty("Items:Type", aType);
      iScript.getSymbolTable().setLocalProperty("Items:Size", aSize);
      iScript.getSymbolTable().setLocalProperty("Items:OracleType", aOracleType);
      iScript.getSymbolTable().setLocalProperty("Items:OracleSize", aOracleSize);
      iScript.getSymbolTable().setLocalProperty("Items:BaseType", aBaseType);
    }

  }

  public boolean addItem(String aItem) {

    for(int i=0; i<iArrayList.size(); i++) {
      if (((String) iArrayList.get(i)).compareTo(aItem) == 0) return false;
      if (((String) iArrayList.get(i)).compareTo(aItem) > 0) {
        iArrayList.add(i, aItem);
//        System.out.println(">>" + aItem);
        return true;
      }
    }
    iArrayList.add(aItem);
//    System.out.println(">>" + aItem);
    return true;
  }

  public void xferItems(String toProperty) {
    for(int i=0; i<iArrayList.size(); i++) {
      iScript.getSymbolTable().setLocalProperty(toProperty, (String) iArrayList.get(i));
    }
    iArrayList = new ArrayList();
  }
}
<$close>
<$compile [$homeDirectory]\\com\\esarks\\ac\\scripts\\GenerateDocs.java>
<$load allFields=com.esarks.ac.scripts.GenerateDocs>
<$load oneFields=com.esarks.ac.scripts.GenerateDocs>
<$script>

<$reset $outputFile=[$tempDirectory][$backSlash]Sentences.wri>
<$kill [$outputFile]>
<$openoutput [$outputFile]>

<$foreach decisionRules:decision>

  <$println  >
  <$println ========================================================================================================>
  <$println Decision Type: [decisionRules:decision:type]>

  <$unset Entity=>
  <$setxml [$scriptDirectory][$backSlash][decisionRules:decision:type].xml>
  <$find Entity:name=[decisionRules:decision:type]>
  <$notfound>
    <$println Entity:name=[decisionRules:decision:type] NOT FOUND!>
  <$endfind>

  <$foreach decisionRules:decision:rules:rule>

    <$foreach decisionRules:decision:rules:rule:condition>

      <$println   [decisionRules:decision:rules:rule:condition:when]>

      <$foreach decisionRules:decision:rules:rule:condition:field>

          <$scan Entity:Field:fmlName=[decisionRules:decision:rules:rule:condition:field]>
          <$failscan>
            <$println Entity:Field:fmlName=[decisionRules:decision:rules:rule:condition:field] NOT FOUND!>
          <$endscan>

          <$print     Test: [decisionRules:decision:rules:rule:condition:field:test]>
          <$print  [decisionRules:decision:rules:rule:condition:field]>
          <$println  [decisionRules:decision:rules:rule:condition:field:connector]>

      <$endfor>

      <$set phrase=>
      <$foreach decisionRules:decision:rules:rule:condition:phrase>
        <$if [decisionRules:decision:rules:rule:condition:phrase:text]=>
        <$else>
          <$reset phrase=[phrase][decisionRules:decision:rules:rule:condition:phrase:text]>
        <$endif>
        <$if [decisionRules:decision:rules:rule:condition:phrase:field]=>
        <$else>
          <$reset phrase=[phrase][decisionRules:decision:rules:rule:condition:phrase:field]>
        <$endif>
        <$if [decisionRules:decision:rules:rule:condition:phrase:subfield]=>
        <$else>

            <$scan Entity:Field:fmlName=[decisionRules:decision:rules:rule:condition:phrase:subfield]>
            <$failscan>
              <$println Entity:Field:fmlName=[decisionRules:decision:rules:rule:condition:phrase:subfield] NOT FOUND!>
            <$endscan>

        <$endif>

        <$if [decisionRules:decision:rules:rule:condition:phrase:field]=>
        <$else>

            <$scan Entity:Field:fmlName=[decisionRules:decision:rules:rule:condition:phrase:field]>
            <$failscan>
              <$println Entity:Field:fmlName=[decisionRules:decision:rules:rule:condition:phrase:field] NOT FOUND!>
            <$endscan>

        <$endif>

      <$endfor>
      <$println  >
      <$println     [phrase]>
      <$println  >

    <$endfor>

  <$endfor>

  <$unset Fields>
  <$foreach decisionRules:decision:rules:rule>
    <$foreach decisionRules:decision:rules:rule:condition>

      <$foreach decisionRules:decision:rules:rule:condition:field>

        <$scan Entity:Field:fmlName=[decisionRules:decision:rules:rule:condition:field]>
        <$failscan>
        <$endscan>
        <$exec allFields!addCppItem([decisionRules:decision:rules:rule:condition:field],[Entity:Field:fmlType],[Entity:Field:size],[Entity:Field:oracleDataType],[Entity:Field:oracleSize],[Entity:Field:baseTypeId])>
        <$exec oneFields!addItem([decisionRules:decision:rules:rule:condition:field])>

      <$endfor>

      <$foreach decisionRules:decision:rules:rule:condition:phrase>
        <$if [decisionRules:decision:rules:rule:condition:phrase:subfield]=>
        <$else>

          <$scan Entity:Field:fmlName=[decisionRules:decision:rules:rule:condition:phrase:subfield]>
          <$failscan>
          <$endscan>
          <$exec allFields!addCppItem([decisionRules:decision:rules:rule:condition:phrase:subfield],[Entity:Field:fmlType],[Entity:Field:size],[Entity:Field:oracleDataType],[Entity:Field:oracleSize],[Entity:Field:baseTypeId])>
          <$exec oneFields!addItem([decisionRules:decision:rules:rule:condition:phrase:subfield])>

        <$endif>
        <$if [decisionRules:decision:rules:rule:condition:phrase:field]=>
        <$else>

          <$scan Entity:Field:fmlName=[decisionRules:decision:rules:rule:condition:phrase:field]>
          <$failscan>
          <$endscan>
          <$exec allFields!addCppItem([decisionRules:decision:rules:rule:condition:phrase:field],[Entity:Field:fmlType],[Entity:Field:size],[Entity:Field:oracleDataType],[Entity:Field:oracleSize],[Entity:Field:baseTypeId])>
          <$exec oneFields!addItem([decisionRules:decision:rules:rule:condition:phrase:field])>

        <$endif>
      <$endfor>
    <$endfor>
  <$endfor>
  <$exec oneFields!xferItems(Fields)>
  <$foreach Fields>
    <$scan Entity:Field:fmlName=[Fields]>
      <$println   [Entity:Field:fmlName], [Entity:Field:oracleTable], [Entity:Field:oracleTableColumn]>
    <$failscan>
      <$println * Entity:Field:fmlName=[decisionRules:decision:rules:rule:condition:field] NOT FOUND!>
    <$endscan>
  <$endfor>

<$endfor>
<$println **************************>
<$println **************************>
<$println **************************>
<$exec allFields!xferItems(CFields)>
<$foreach CFields>
  <$find Items=[CFields]>
  <$println  Field, [CFields], [Items:Type], [Items:Size], [CFields], [Items:OracleType], [Items:OracleSize], [Items:BaseType], [CFields], FALSE>
  <$notfound>
  <$endfind>
<$endfor>

