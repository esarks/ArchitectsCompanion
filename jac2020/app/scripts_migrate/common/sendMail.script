<%
}

private void sendMessage() {

  Socket lSMTPSocket = null;
  String lServerResponseLine;

  try {

    // Making the network connection.

    lSMTPSocket = new Socket (<![email:server]!>, 25);

    PrintStream lClientRequest = new PrintStream(lSMTPSocket.getOutputStream());

    DataInputStream lServerResponse = new DataInputStream(lSMTPSocket.getInputStream());

    // The SMTP dialog begins.

    // First we wait for the server to say "220"
    lServerResponseLine = lServerResponse.readLine();
//    checkServerResponse (SMTPServer, lServerResponseLine, "220");
    System.out.println("a>" + lServerResponseLine);

    // Then we say HELO
    lClientRequest.println ("HELO " + <![email:server]!>);
    lServerResponseLine = lServerResponse.readLine();
//    checkServerResponse (SMTPServer, lServerResponseLine, "250");
    System.out.println("b>" + lServerResponseLine);

    lClientRequest.println ("MAIL FROM: <" + <![email:from]!> + ">");
    lServerResponseLine = lServerResponse.readLine();
//    checkServerResponse (SMTPServer, lServerResponseLine, "250");
    System.out.println("c>" + lServerResponseLine);

//    lClientRequest.print ("RCPT TO: ");

    <!email:to!>!resetIterator();
    while (<!email:to!>!next()) {
      lClientRequest.println ("RCPT TO: <" + <![email:to]!> + ">");
      lServerResponseLine = lServerResponse.readLine();
//    checkServerResponse (SMTPServer, lServerResponseLine, "250");
      System.out.println("d>" + lServerResponseLine);
    }

    lClientRequest.println ("DATA");
    lServerResponseLine = lServerResponse.readLine();
//    checkServerResponse (SMTPServer, lServerResponseLine, "354");
    System.out.println("e>" + lServerResponseLine);

    // Sending Message Headers

    lClientRequest.println ( "From: " + <![email:from]!>);
    //lServerResponseLine = lServerResponse.readLine();
    System.out.println("f>");

    lClientRequest.println( "To: " + <![email:to]!>);
    System.out.println("g>");
  
    lClientRequest.println ( "Subject: " + <![email:subject]!>);
//    lServerResponseLine = lServerResponse.readLine();
    System.out.println("h>");
  
    // Followed by a blank line that separates headers from body.
    lClientRequest.println ("");

    // Sending Message Body Text
    <!email:message!>!resetIterator();
    while (<!email:message!>!next()) {
      lClientRequest.println(<![email:message]!>);
      System.out.println("i>");
    }
//    lClientRequest.println("\n");

    lClientRequest.println(".");
    lServerResponseLine = lServerResponse.readLine();
//    checkServerResponse (SMTPServer, lServerResponseLine, "250");
    System.out.println("j>" + lServerResponseLine);

    // Ending the SMTP session.

    lClientRequest.println ("QUIT");
    lServerResponseLine = lServerResponse.readLine();
//    checkServerResponse (SMTPServer, lServerResponseLine, "221");
    System.out.println("k>" + lServerResponseLine);


  } catch (Exception e) {

  } finally {
    try {
      lSMTPSocket.close();
    } catch (Exception e) { System.out.println("Exception caught: " + e); }
  }

}
}
