C:\ArchitectsCompanion\jac2017\conf\micImport.script:1: package <#[$jac:script:package]#>;
C:\ArchitectsCompanion\jac2017\conf\micImport.script:2: 
C:\ArchitectsCompanion\jac2017\conf\micImport.script:3: import com.esarks.jac.*;
C:\ArchitectsCompanion\jac2017\conf\micImport.script:4: 
C:\ArchitectsCompanion\jac2017\conf\micImport.script:5: import java.time.Duration;
C:\ArchitectsCompanion\jac2017\conf\micImport.script:6: import java.time.Instant;
C:\ArchitectsCompanion\jac2017\conf\micImport.script:7: import java.time.Period;
C:\ArchitectsCompanion\jac2017\conf\micImport.script:8: import java.time.ZoneId;
C:\ArchitectsCompanion\jac2017\conf\micImport.script:9: import java.time.LocalDate;
C:\ArchitectsCompanion\jac2017\conf\micImport.script:10: import java.time.LocalDateTime;
C:\ArchitectsCompanion\jac2017\conf\micImport.script:11: import java.time.LocalTime;
C:\ArchitectsCompanion\jac2017\conf\micImport.script:12: import java.time.format.DateTimeFormatter;
C:\ArchitectsCompanion\jac2017\conf\micImport.script:13: import java.time.format.FormatStyle;
C:\ArchitectsCompanion\jac2017\conf\micImport.script:14: 
C:\ArchitectsCompanion\jac2017\conf\micImport.script:15: import java.util.*;
C:\ArchitectsCompanion\jac2017\conf\micImport.script:16: import java.lang.reflect.*;
C:\ArchitectsCompanion\jac2017\conf\micImport.script:17: import java.io.*;
C:\ArchitectsCompanion\jac2017\conf\micImport.script:18: import java.text.*;
C:\ArchitectsCompanion\jac2017\conf\micImport.script:19: import java.net.*;
C:\ArchitectsCompanion\jac2017\conf\micImport.script:20: import javax.net.ssl.*;
C:\ArchitectsCompanion\jac2017\conf\micImport.script:21: import java.security.*;
C:\ArchitectsCompanion\jac2017\conf\micImport.script:22: import java.sql.*;
C:\ArchitectsCompanion\jac2017\conf\micImport.script:23: import javax.servlet.*;
C:\ArchitectsCompanion\jac2017\conf\micImport.script:24: import javax.servlet.http.*;
C:\ArchitectsCompanion\jac2017\conf\micImport.script:25: import java.awt.*;
C:\ArchitectsCompanion\jac2017\conf\micImport.script:26: import javax.swing.*;
C:\ArchitectsCompanion\jac2017\conf\micImport.script:27: import com.esarks.mic.*;
C:\ArchitectsCompanion\jac2017\conf\micImport.script:28: 
C:\ArchitectsCompanion\jac2017\conf\micImport.script:29: import java.nio.file.Files;
C:\ArchitectsCompanion\jac2017\conf\micImport.script:30: import java.nio.file.Paths;
C:\ArchitectsCompanion\jac2017\conf\micImport.script:31: 
C:\ArchitectsCompanion\jac2017\conf\micImport.script:32: import java.io.FileNotFoundException;
C:\ArchitectsCompanion\jac2017\conf\micImport.script:33: import java.io.FileReader;
C:\ArchitectsCompanion\jac2017\conf\micImport.script:34: import java.io.IOException;
C:\ArchitectsCompanion\jac2017\conf\micImport.script:35: import java.util.Iterator;
C:\ArchitectsCompanion\jac2017\conf\micImport.script:36: 
C:\ArchitectsCompanion\jac2017\conf\micImport.script:37: import org.json.simple.*;
C:\ArchitectsCompanion\jac2017\conf\micImport.script:38: import org.json.simple.parser.*;
C:\ArchitectsCompanion\jac2017\conf\micImport.script:39: 
C:\ArchitectsCompanion\jac2017\conf\micImport.script:40: <#import#>
C:\ArchitectsCompanion\jac2017\conf\micPrefix.script:1: public class <#[$jac:script]#> extends <#[$jac:script:extends]#> {
C:\ArchitectsCompanion\jac2017\conf\micPrefix.script:2: 
C:\ArchitectsCompanion\jac2017\conf\micPrefix.script:3:   protected <#[$jac:script]#>() {
C:\ArchitectsCompanion\jac2017\conf\micPrefix.script:4:   }
C:\ArchitectsCompanion\jac2017\conf\micPrefix.script:5: 
C:\ArchitectsCompanion\jac2017\conf\micPrefix.script:6:   public <#[$jac:script]#>(Script aScript) {
C:\ArchitectsCompanion\jac2017\conf\micPrefix.script:7: 
C:\ArchitectsCompanion\jac2017\conf\micPrefix.script:8:     super(aScript);
C:\ArchitectsCompanion\jac2017\conf\micPrefix.script:9: 
C:\ArchitectsCompanion\jac2017\conf\micPrefix.script:10:   }
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:1: context micScriptComponent
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:2: import javax.crypto.*
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:3: import javax.crypto.spec.*
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:4: import java.net.InetAddress
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:5: var private Script script;
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:6: var private SymbolTable iSymbolTable;
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:7: var private OutputManager outputManager;
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:8: var private PropertyHelper propertyHelper;
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:9: var private Log log;
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:10: var private int logClass = 0;
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:11: end
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:12: private Script script;
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:13: private SymbolTable iSymbolTable;
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:14: private OutputManager outputManager;
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:15: private PropertyHelper propertyHelper;
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:16: private Log log;
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:17: private int logClass = 0;
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:18: 
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:19:   public void execute(String scriptArguments[]) {
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:20: 
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:21:     iSymbolTable.parseXml( iSymbolTable.getWorkFilePath("jacLicense.") + "VBALicense.xml");
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:22: 
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:23:     PBEKeySpec lPBEKeySpec;
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:24:     PBEParameterSpec lPBEParamSpec;
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:25:     SecretKeyFactory lSecretKeyFactory;
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:26: 
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:27:     // Salt must be eight bytes long.
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:28:     String lSaltString = "ac500000";
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:29:     byte[] lSalt = lSaltString.getBytes();
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:30: 
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:31:     int lCount = 5;
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:32: 
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:33:     iSymbolTable.getPropertyCollection().replacePropertyValue("jacLicense:product", new PropertyValue("jac"));
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:34:     iSymbolTable.getPropertyCollection().replacePropertyValue("jacLicense:from", new PropertyValue(""));
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:35:     iSymbolTable.getPropertyCollection().replacePropertyValue("jacLicense:to", new PropertyValue("2004.12.31"));
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:36:     iSymbolTable.getPropertyCollection().replacePropertyValue("jacLicense:name", new PropertyValue("Veterans Benefits Administration"));
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:37:     iSymbolTable.getPropertyCollection().replacePropertyValue("jacLicense:email", new PropertyValue("vba.va.gov"));
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:38:     iSymbolTable.getPropertyCollection().replacePropertyValue("jacLicense:options", new PropertyValue(""));
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:39:     try {
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:40:       InetAddress address = InetAddress.getLocalHost();
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:41:       iSymbolTable.getPropertyCollection().replacePropertyValue("jacLicense:host", new PropertyValue(address.getHostName().toLowerCase()));
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:42:       if (!iSymbolTable.getPropertyCollection().getPropertyValue("jacLicense:host", 0).getValueString().startsWith("317")) {
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:43:           System.out.println("Invalid host name.");
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:44:           return;
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:45:       }
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:46:     } catch (Exception lException) {   System.out.println("Invalid host name exception.");
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:47:                                        return; }
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:48: 
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:49:     String lCheck =
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:50:         iSymbolTable.getPropertyCollection().getPropertyValue("jacLicense:from", 0).getValueString() +
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:51:         iSymbolTable.getPropertyCollection().getPropertyValue("jacLicense:to", 0).getValueString() +
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:52:         iSymbolTable.getPropertyCollection().getPropertyValue("jacLicense:options", 0).getValueString() +
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:53:         iSymbolTable.getPropertyCollection().getPropertyValue("jacLicense:host", 0).getValueString() +
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:54:         iSymbolTable.getPropertyCollection().getPropertyValue("jacLicense:email", 0).getValueString() +
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:55:         iSymbolTable.getPropertyCollection().getPropertyValue("jacLicense:name", 0).getValueString();
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:56:     char[] lCheckChar = new char[lCheck.length()];
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:57:     lCheck.getChars(0, lCheck.length(), lCheckChar, 0);
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:58: 
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:59:     try {
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:60:         lPBEParamSpec = new PBEParameterSpec(lSalt, lCount);
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:61:         lPBEKeySpec = new PBEKeySpec(lCheckChar);
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:62:         lSecretKeyFactory = SecretKeyFactory.getInstance("PBEWithMD5AndDES");
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:63:         SecretKey lSecretKey = lSecretKeyFactory.generateSecret(lPBEKeySpec);
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:64:         Cipher lCipher = Cipher.getInstance("PBEWithMD5AndDES");
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:65:         lCipher.init(Cipher.ENCRYPT_MODE, lSecretKey, lPBEParamSpec);
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:66:         byte[] lClearText = new String(lCheck).getBytes();
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:67:         byte[] lCipherText = lCipher.doFinal(lClearText);
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:68:         String lCipherString = new Long(lCipherText.length).toString();
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:69:         for (int l=0; l<lCipherText.length; l++) {
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:70:             lCipherString = lCipherString.concat(new Byte(lCipherText[l]).toString()) + new Long(l).toString();
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:71:         }
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:72:         <!jacLicense:key!>!reset(lCipherString);
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:73: 
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:74:         } catch (Exception lException) {
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:75:             System.err.println("***************** FAILED!");
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:76:             return;
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:77:         }
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:78: 
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:79:     <!$outputFile!>!reset(iSymbolTable.getWorkFilePath("jacLicense.") + "license.xml");
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:80:     script.delete(<![$outputFile]!>);
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:81: //    outputManager.openOutputFile(<![$outputFile]!>, true);
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:82: 
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:83: %>
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:84: <license>
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:85:   <<![jacLicense:product]!>>
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:86:     <from><![jacLicense:from]!></from>
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:87:     <to><![jacLicense:to]!></to>
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:88:     <options><![jacLicense:options]!></options>
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:89:     <host><![jacLicense:host]!></host>
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:90:     <email><![jacLicense:email]!></email>
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:91:     <name><![jacLicense:name]!></name>
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:92:     <key><![jacLicense:key]!></key>
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:93:   </<![jacLicense:product]!>>
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:94: </license>
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:95: <%
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:96: 
C:\ArchitectsCompanion\jac2017\app\jacLicense\makeLicense.script:97:   }
C:\ArchitectsCompanion\jac2017\conf\micPostfix.script:1: }
