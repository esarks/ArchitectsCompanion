context micScriptComponent
end

//////////////////////////////////////////////////////////////////////////////

<& com.esarks.arm.scripts.Method
   <method name="executePath" visibility="public" return="void" >
     <document></document>
     <argument type="String" name="aXmlPath"  document="" />
   </method>
&>

    execute(path(aXmlPath) + ".jrun");

<& com.esarks.arm.scripts.FinalReturnMethod 
  <return suppressExceptionReport="true"/>
&>

//////////////////////////////////////////////////////////////////////////////

<& com.esarks.arm.scripts.Method
   <method name="execute" visibility="public" return="void" >
     <document></document>
     <argument type="String" name="aXml"  document="" />
   </method>
&>

    try {
    System.out.println("Jrun");

    parseXmlPath(aXml);

    String lClasspath = "";
    <!jacrun:classpath:path!>!resetIterator();
    while (<!jacrun:classpath:path!>!next()) {
      lClasspath = lClasspath + path(<![jacrun:classpath:path]!>) + ";";
    }
    <!jacrun:classpath:workPath!>!resetIterator();
    while (<!jacrun:classpath:workPath!>!next()) {
      lClasspath = lClasspath + workPath(<![jacrun:classpath:workPath]!>) + ";";
    }
    <!jacrun:classpath:homePath!>!resetIterator();
    while (<!jacrun:classpath:homePath!>!next()) {
      lClasspath = lClasspath + homePath(<![jacrun:classpath:homePath]!>) + ";";
    }
    if (lClasspath.length() > 0) {
      System.setProperty("java.class.path", System.getProperty("java.class.path") + ";" + lClasspath);
      System.out.println("Classpath=" + System.getProperty("java.class.path"));
    }
//    System.out.println("Classpath=" + System.getProperty("java.class.path"));
    
    <!jacrun:script!>!resetIterator();
    while (<!jacrun:script!>!next()) {
      if (<!jacrun:script:name!>!size() > 0) {
        int lPause = <!jacrun:script:pause!>!size();
        if (lPause > 0) pause("At Jrun, before loadScript(" + <![jacrun:script:name]!> + ").  Press ENTER to continue...");
        Object lLoadObject = null;
        if (<!jacrun:script:noScript!>!size() > 0) {
          System.out.println("Jrun: noScript set");
          lLoadObject = iScript.loadScript(<![jacrun:script:name]!>, null);
        } else {
          lLoadObject = loadScript(<![jacrun:script:name]!>);
        }
        if (lLoadObject == null) {
          System.out.println("Jrun: !WARNING! Cannot open script " + <![jacrun:script:name]!>);
        }
        if (<!jacrun:script:args!>!size() > 0) {
          System.out.print("Jrun: " + <![jacrun:script:name]!> + "::" + <![jacrun:script:method]!> + "(");
          String lArgs[] = new String[<!jacrun:script:args:arg!>!size()];
          <!jacrun:script:args:arg!>& {
            lArgs[<!jacrun:script:args:arg!>!getIterator()-1] = argPath("", <![jacrun:script:args:arg]!>);
            System.out.print(" ^" + lArgs[<!jacrun:script:args:arg!>!getIterator()-1] + "^ ");
          }
          System.out.println(")");
          iScript.execMethod(lLoadObject, <![jacrun:script:method]!>, new Object[] {lArgs});
        } else {
          if (<!jacrun:script:argument!>!size() == 0) {
            System.out.println("Jrun: " + <![jacrun:script:name]!> + "::" + <![jacrun:script:method]!> + "()");
            iScript.execMethod(lLoadObject, <![jacrun:script:method]!>);
          } else {
            if (<![jacrun:script:argument]!>.equals("?this")) <!jacrun:script:argument!>!set(aXml);
            if (<![jacrun:script:argument2]!>.equals("?this")) <!jacrun:script:argument2!>!set(aXml);
            if (<!jacrun:script:argument2!>!size() == 0) {
              System.out.println("Jrun: " + <![jacrun:script:name]!> + "::" + <![jacrun:script:method]!> + "(" + <![jacrun:script:argument]!> + ")");
              iScript.execMethod(lLoadObject, <![jacrun:script:method]!>, new Object[]{<![jacrun:script:argument]!>});
            } else {
              System.out.println("Jrun: " + <![jacrun:script:name]!> + "::" + <![jacrun:script:method]!> + "(" + <![jacrun:script:argument]!> + ", " + <![jacrun:script:argument2]!> + ")");
              iScript.execMethod(lLoadObject, <![jacrun:script:method]!>, new Object[]{<![jacrun:script:argument]!>,<![jacrun:script:argument2]!>});
            }
          }
        }
        lLoadObject = null;
        if (lPause > 0) pause("At Jrun, before unloadScript(" + <![jacrun:script:name]!> + ").  Press ENTER to continue...");
        unloadScript(<![jacrun:script:name]!>);
        if (lPause > 0) pause("At Jrun, after unloadScript(" + <![jacrun:script:name]!> + ").  Press ENTER to continue...");
      } else {
        int lPause = <!jacrun:pause!>!size();
        if (lPause > 0) pause("At Jrun, before loadScript(" + <![jacrun:script]!> + ").  Press ENTER to continue...");
        Object lLoadObject = null;
        if (<!jacrun:noScript!>!size() > 0) {
          System.out.println("Jrun: noScript set");
          lLoadObject = iScript.loadScript(<![jacrun:script]!>, null);
        } else {
          lLoadObject = loadScript(<![jacrun:script]!>);
        }
        if (lLoadObject == null) {
          System.out.println("Jrun: !WARNING! Cannot open script " + <![jacrun:script]!>);
        }
        if (<!jacrun:args!>!size() > 0) {
          System.out.print("Jrun: " + <![jacrun:script]!> + "::" + <![jacrun:method]!> + "(");
          String lArgs[] = new String[<!jacrun:args:arg!>!size()];
          <!jacrun:args:arg!>& {
            lArgs[<!jacrun:args:arg!>!getIterator()-1] = argPath("", <![jacrun:args:arg]!>);
            System.out.print(" ^" + lArgs[<!jacrun:args:arg!>!getIterator()-1] + "^ ");
          }
          System.out.println(")");
          iScript.execMethod(lLoadObject, <![jacrun:method]!>, new Object[] {lArgs});
        } else {
          if (<!jacrun:argument!>!size() == 0) {
            System.out.println("Jrun: " + <![jacrun:script]!> + "::" + <![jacrun:method]!> + "()");
            iScript.execMethod(lLoadObject, <![jacrun:method]!>);
          } else {
            if (<![jacrun:argument]!>.equals("?this")) <!jacrun:argument!>!set(aXml);
            if (<![jacrun:argument2]!>.equals("?this")) <!jacrun:argument2!>!set(aXml);
            if (<!jacrun:argument2!>!size() == 0) {
              System.out.println("Jrun: " + <![jacrun:script]!> + "::" + <![jacrun:method]!> + "(" + <![jacrun:argument]!> + ")");
              iScript.execMethod(lLoadObject, <![jacrun:method]!>, new Object[]{<![jacrun:argument]!>});
            } else {
              System.out.println("Jrun: " + <![jacrun:script]!> + "::" + <![jacrun:method]!> + "(" + <![jacrun:argument]!> + ", " + <![jacrun:argument2]!> + ")");
              iScript.execMethod(lLoadObject, <![jacrun:method]!>, new Object[]{<![jacrun:argument]!>,<![jacrun:argument2]!>});
            }
          }
        }
        lLoadObject = null;
        if (lPause > 0) pause("At Jrun, before unloadScript(" + <![jacrun:script]!> + ").  Press ENTER to continue...");
        unloadScript(<![jacrun:script]!>);
        if (lPause > 0) pause("At Jrun, after unloadScript(" + <![jacrun:script]!> + ").  Press ENTER to continue...");
      }
    }

    } catch(Throwable e) {
      System.out.println(e);
    }

<& com.esarks.arm.scripts.FinalReturnMethod 
  <return suppressExceptionReport="true"/>
&>

//////////////////////////////////////////////////////////////////////////////

<& com.esarks.arm.scripts.Method
   <method name="pause" visibility="private" return="void" >
     <document></document>
     <argument type="String" name="aPrompt"  document="" />
   </method>
&>

  try {
      while (System.in.available() > 0) System.in.read();
      System.out.print(aPrompt);
      System.in.read();
      while (System.in.available() > 0) System.in.read();
  } catch (Throwable e) {}

<& com.esarks.arm.scripts.FinalReturnMethod 
  <return suppressExceptionReport="true"/>
&>

//////////////////////////////////////////////////////////////////////////////

<& com.esarks.arm.scripts.Method
   <method name="argPath" visibility="private" return="String" >
     <document></document>
     <argument type="String" name="aType"  document="" />
     <argument type="String" name="aString"  document="" />
   </method>
&>

  if (aType.equals("")) aString = argPath("path", aString);
  if (aType.equals("path")) aString = argPath("workPath", aString);
  if (aType.equals("workPath")) aString = argPath("homePath", aString);

  int lAt = 0;
  while ((lAt = aString.indexOf("$" + aType + "(")) != -1) {
    int lClose = aString.indexOf(")", lAt);
    if (lClose == -1) return aString;

    String lPath = aString.substring(lAt + aType.length() + 2, lClose);
    if (aType.equals("path")) lPath = path(lPath);
    if (aType.equals("homePath")) lPath = homePath(lPath);
    if (aType.equals("workPath")) lPath = workPath(lPath);

    if (lAt > 0) {
      aString = aString.substring(0, lAt) + lPath + aString.substring(lClose + 1);
    } else {
      aString = lPath + aString.substring(lClose + 1);
    }

  }

<& com.esarks.arm.scripts.FinalReturnMethod
  <return suppressExceptionReport="true">
    <normal>aString</normal>
    <error>""</error>
  </return>
&>
