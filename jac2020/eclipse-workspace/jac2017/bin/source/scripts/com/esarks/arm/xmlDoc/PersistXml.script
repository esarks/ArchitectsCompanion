var private int iControlSequence=0;
var private String iRevision="";
end

//////////////////////////////////////////////////////////////////////////////

<& com.esarks.arm.scripts.Method
   <method name="onLoad" visibility="public" return="void" >
     <document></document>
   </method>
&>

    XmlSchemaFactory lXmlSchemaFactory = iSymbolTable.getXmlSchemaFactory();
    if (lXmlSchemaFactory.getXmlSchemaElement("com.esarks.arm.schemas.dtables") == null) {
      loadXmlSchema("com.esarks.arm.schemas.dtables", path("com.esarks.arm.schemas.DtablesSchema") + ".xml");
    }

<& com.esarks.arm.scripts.FinalReturnMethod &>

//////////////////////////////////////////////////////////////////////////////

<& com.esarks.arm.scripts.Method
   <method name="execute" visibility="public" return="void" >
     <document></document>
   </method>
&>

    parseXmlSchema("com.hqsonline.hrm.model.indexing.Indexer_Dtable");
    openOutput(path("com.hqsonline.hrm.model.indexing.Indexer_Dtable1") + ".xml");

    XmlSchemaElement lXmlSchemaElement = <!dtables!>!getXmlSchemaElement();
    persistXmlElement(lXmlSchemaElement, "", "");

    closeOutput();

<& com.esarks.arm.scripts.FinalReturnMethod &>

//////////////////////////////////////////////////////////////////////////////

<& com.esarks.arm.scripts.Method
   <method name="persistXmlElement" visibility="private" return="void" >
     <document></document>
     <argument type="XmlSchemaElement" name="aXmlSchemaElement" />
     <argument type="String" name="aTagPrefix" />
     <argument type="String" name="aIndent" />
   </method>
&>

   String lCdataOpen = "<" + "!" + "[" + "CDATA" + "[";
   String lCdataClose = "]" + "]" + ">";
   String lValue = "";
      
   if (aTagPrefix.equals("")) {
     aTagPrefix = aXmlSchemaElement.getName();
   } else {
     aTagPrefix += ":" + aXmlSchemaElement.getName();
   }

   boolean lAttribute = aXmlSchemaElement.getAttribute();

   <!" + aTagPrefix + "!>& {

     boolean lCloseTag = false;
     
     ArrayList lArrayList = aXmlSchemaElement.getElementsList();

     if (lAttribute) {
       lValue = <![" + aTagPrefix + "]!>;
       if (aXmlSchemaElement.getTrim()) lValue = lValue.trim();
       if (aXmlSchemaElement.getPreserveEmpty() && lValue.equals("")) return;
       %><!%aXmlSchemaElement.getName()!>="<![" + aTagPrefix + "]!>" <%
     } else {
       lValue = <![" + aTagPrefix + "]!>;
       if (aXmlSchemaElement.getTrim()) lValue = lValue.trim();
       if (aXmlSchemaElement.getIsEmpty()) lValue = "";
       if (aXmlSchemaElement.getPreserveEmpty() && lValue.equals("") && lArrayList.size() == 0) return;
       %><!%aIndent!><<!%aXmlSchemaElement.getName()!> <%
     }
  
     if (lAttribute && lArrayList.size() > 0) {
       System.out.println("**ERROR** Attribute can't have children.");
       return;
     }
  
     for (int lIdx=0; lIdx < lArrayList.size(); lIdx++) {
       XmlSchemaElement lXmlSchemaElement = (XmlSchemaElement) lArrayList.get(lIdx);
  
       if (lXmlSchemaElement.getAttribute() == false && lCloseTag == false) {
         %>><!%lValue!><!%"\r\n"!><%
         lCloseTag = true;
       }
       persistXmlElement(lXmlSchemaElement, aTagPrefix, aIndent + "  ");
     }

     if (!lAttribute && lCloseTag == false) {
       if (aXmlSchemaElement.getIsEmpty()) {
         %>/><!%"\r\n"!><%
         return;
       } else {
         %>><%
         if (aXmlSchemaElement.getCdata()) {
           %><!%lCdataOpen!><!%lValue.trim()!><!%lCdataClose!><%
         } else {
           %><!%lValue!><%
         }
         %><!%"\r\n"!><%
       }
     }
     if (!lAttribute) {
       %><!%aIndent!></<!%aXmlSchemaElement.getName()!>><!%"\r\n"!><%
     }
   }

<& com.esarks.arm.scripts.FinalReturnMethod &>

