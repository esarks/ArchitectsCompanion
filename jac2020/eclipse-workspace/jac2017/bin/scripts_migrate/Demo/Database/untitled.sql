REMARK  ----------------------------------------------------------------------
REMARK  DDL generated by TOYS (version 1.0.17.0).
REMARK  Copyright (c) Impact Systems Pty. Ltd., 2002, 2003
REMARK  http://www.impacttoys.com/
REMARK  ----------------------------------------------------------------------
REMARK
REMARK    Database Name: ASDC
REMARK      Server Type: ORACLE
REMARK          Version: 8.1.6.0.0
REMARK     Extracted by: ASDC@ASDC
REMARK     Extract date: 2003-12-16 14:55:32 -05:00
REMARK    Creation date: 2003-12-16 14:57:19 -05:00
REMARK    Compatibility: Oracle 8i (8.1)
REMARK


SET escape \
SET escape OFF
SET define '&'
SET define OFF
SET concat .
SET concat ON
SET sqlblanklines ON


SET define ON
CONNECT ASDC/&&ASDC_PWD.&&AT_DSN.
SET define OFF

Create sequence "A1_PROJECT_ID_SEQ"
  minvalue 1
  maxvalue 9999999999
  increment by 1
  nocycle
  order
  cache 20;

Create sequence "ACV_CLTN_SEQ"
  minvalue 1
  maxvalue 9999999999
  increment by 1
  nocycle
  order
  cache 20;

Create sequence "ACV_PROPS_SEQ"
  minvalue 1
  maxvalue 9999999999
  increment by 1
  nocycle
  order
  cache 20;

Create sequence "CALENDAR_EVENT_SEQ"
  minvalue 1
  maxvalue 9999999999
  increment by 1
  nocycle
  noorder
  cache 20;

Create sequence "CALENDAR_ITEM_SEQ"
  minvalue 1
  maxvalue 9999999999
  increment by 1
  nocycle
  noorder
  cache 20;

Create sequence "EVENT_LOG_SEQ"
  minvalue 1
  maxvalue 9999999999
  increment by 1
  nocycle
  noorder
  cache 20;

Create sequence "GUEST_BOOK_ENTRY_SEQ"
  minvalue 1
  maxvalue 9999999999
  increment by 1
  nocycle
  order
  cache 20;

Create sequence "MAIL_LIST_ITEM_SEQ"
  minvalue 1
  maxvalue 9999999999
  increment by 1
  nocycle
  noorder
  cache 20;

Create sequence "POST_CFG_SEQ"
  minvalue 1
  maxvalue 9999999999
  increment by 1
  nocycle
  noorder
  cache 20;

Create sequence "POST_SEQ"
  minvalue 1
  maxvalue 9999999999
  increment by 1
  nocycle
  noorder
  cache 20;

Create sequence "POST_TITLE_SEQ"
  minvalue 1
  maxvalue 9999999999
  increment by 1
  nocycle
  noorder
  cache 20;

Create sequence "USER_LOGIN_SEQ"
  minvalue 1
  maxvalue 9999999999
  increment by 1
  nocycle
  order
  cache 20;

Create table "A1_PROJECT"
  ( "ID"              number (10)                         not null enable,
    "VERSION"         number (10)                         not null enable,
    "VERSION_LABEL"   varchar2 (32)                       null,
    "VERSION_DATE"    date                                null,
    "VERSION_LOCKED"  varchar2 (1)                        null,
    "NAME"            varchar2 (32)                       null,
    "DESCRIPTION"     varchar2 (256)                      null )
  logging;

Create unique index "A1_PROJECT_PK" on "A1_PROJECT"
  ( "ID",
    "VERSION" )
  logging;

Create unique index "A1_PROJECT_IDX1" on "A1_PROJECT"
  ( "NAME" )
  logging;

Alter table "A1_PROJECT"
  add constraint "A1_PROJECT_PK"
  primary key ( "ID", "VERSION" )
  using index
  enable;

Alter table "A1_PROJECT"
  add constraint "A1_PROJECT_IDX1"
  unique ( "NAME" )
  using index
  enable;

Create table "ACV_CLTN"
  ( "CLTN_ID"    number (10)                         not null enable,
    "CLTN_NAME"  varchar2 (128)                      null )
  logging;

Create unique index "ACV_CLTN_PK" on "ACV_CLTN"
  ( "CLTN_ID" )
  logging;

Alter table "ACV_CLTN"
  add constraint "ACV_CLTN_PK"
  primary key ( "CLTN_ID" )
  using index
  enable;

Create table "ACV_PROPS"
  ( "PROPS_ID"       number (10)                         not null enable,
    "PROPS_CLTN_ID"  number (10)                         not null enable,
    "PROPS_NAME"     varchar2 (128)                      not null enable )
  logging;

Create unique index "ACV_PROPS_PK" on "ACV_PROPS"
  ( "PROPS_ID" )
  logging;

Alter table "ACV_PROPS"
  add constraint "ACV_PROPS_PK"
  primary key ( "PROPS_ID" )
  using index
  enable;

Create table "ACV_VALUE"
  ( "VALUE_PROPS_ID"  number (10)                         not null enable,
    "VALUE_SEQ"       number (10)                         not null enable,
    "VALUE"           varchar2 (4000)                     not null enable,
    "VALUE_CLTN_ID"   number (10)                         null )
  logging;

Create unique index "ACV_VALUE_PK" on "ACV_VALUE"
  ( "VALUE_PROPS_ID",
    "VALUE_SEQ" )
  logging;

Alter table "ACV_VALUE"
  add constraint "ACV_VALUE_PK"
  primary key ( "VALUE_PROPS_ID", "VALUE_SEQ" )
  using index
  enable;

Create table "CALENDAR_EVENT"
  ( "EVENT_ID"    number (10)                         not null enable,
    "CREATE_ON"   varchar2 (16)                       null,
    "CREATE_BY"   number (10)                         null,
    "EVENT_DATE"  varchar2 (16)                       null,
    "MINUTES"     number (5)                          null,
    "SHORT_DESC"  varchar2 (32)                       null,
    "LONG_DESC"   varchar2 (2048)                     null )
  logging;

Create unique index "CALENDAR_EVENT_PK" on "CALENDAR_EVENT"
  ( "EVENT_ID" )
  logging;

Alter table "CALENDAR_EVENT"
  add constraint "CALENDAR_EVENT_PK"
  primary key ( "EVENT_ID" )
  using index
  enable;

Create table "CALENDAR_ITEM"
  ( "CALENDAR_ITEM_ID"  number (10)                         not null enable,
    "ON_DATE"           date                                not null enable,
    "START_TIME"        varchar2 (4)                        null,
    "END_TIME"          varchar2 (4)                        null,
    "SHORT_TITLE"       varchar2 (64)                       null,
    "DESCRIPTION"       varchar2 (4000)                     null,
    "LINK"              varchar2 (128)                      null,
    "ON_DATE_DESCR"     varchar2 (32)                       null,
    "TIME_DESCR"        varchar2 (256)                      null,
    "LOC_DESCR"         varchar2 (256)                      null,
    "SHOW_PUBLIC"       varchar2 (1)                        null,
    "IS_BLACKOUT"       varchar2 (1)                        null,
    "GROUP_CODE"        varchar2 (8)                        null,
    "IS_CALENDAR"       varchar2 (1)                        null,
    "IS_ANNOUNCE"       varchar2 (1)                        null )
  logging;

Create unique index "CALENDAR_ITEM_PK" on "CALENDAR_ITEM"
  ( "CALENDAR_ITEM_ID" )
  logging;

Alter table "CALENDAR_ITEM"
  add constraint "CALENDAR_ITEM_PK"
  primary key ( "CALENDAR_ITEM_ID" )
  using index
  enable;

Create table "EVENT_LOG"
  ( "EVENT_LOG_ID"   number (10)                         not null enable,
    "EVENT_TYPE"     varchar2 (32)                       not null enable,
    "CREATE_ON"      varchar2 (16)                       not null enable,
    "USER_LOGIN_ID"  number (10)                         null,
    "LOGGED_BY"      varchar2 (32)                       null,
    "DESCRIPTION"    varchar2 (128)                      null )
  logging;

Create unique index "EVENT_LOG_PK" on "EVENT_LOG"
  ( "EVENT_LOG_ID" )
  logging;

Alter table "EVENT_LOG"
  add constraint "EVENT_LOG_PK"
  primary key ( "EVENT_LOG_ID" )
  using index
  enable;

Create table "GROUP_CFG"
  ( "GROUP_NAME"  varchar2 (64)                       not null enable,
    "TITLE"       varchar2 (128)                      null,
    "URL"         varchar2 (128)                      null,
    "HOME_PAGE"   varchar2 (64)                       null,
    "ALIAS"       varchar2 (64)                       null )
  logging;

Create unique index "GROUP_CFG_PK" on "GROUP_CFG"
  ( "GROUP_NAME" )
  logging;

Alter table "GROUP_CFG"
  add constraint "GROUP_CFG_PK"
  primary key ( "GROUP_NAME" )
  using index
  enable;

Create table "GUEST_BOOK_ENTRY"
  ( "GUEST_BOOK_ENTRY_ID"  number (10)                         not null enable,
    "POSTED_DATE"          date                                not null enable,
    "POSTED_BY"            varchar2 (64)                       null,
    "TEXT"                 varchar2 (4000)                     null,
    "EMAIL"                varchar2 (128)                      null,
    "SHOW_EMAIL"           varchar2 (1)                        null,
    "SHOW_PUBLIC"          varchar2 (1)                        null,
    "GROUP_CODE"           varchar2 (8)                        null,
    "IP_ADDR"              varchar2 (16)                       null,
    "APPROVED"             varchar2 (1)                        null )
  logging;

Create unique index "GUEST_BOOK_ENTRY_PK" on "GUEST_BOOK_ENTRY"
  ( "GUEST_BOOK_ENTRY_ID" )
  logging;

Alter table "GUEST_BOOK_ENTRY"
  add constraint "GUEST_BOOK_ENTRY_PK"
  primary key ( "GUEST_BOOK_ENTRY_ID" )
  using index
  enable;

Create table "JIVEFILTER"
  ( "FILTEROBJECT"  blob                                null,
    "FORUMID"       integer                             not null enable,
    "FILTERINDEX"   integer                             not null enable )
  logging
  lob ( "FILTEROBJECT" ) store as
  ( 
    enable storage in row
    chunk 8192
    pctversion 10
    nocache
    logging
  );

Alter table "JIVEFILTER"
  add primary key ( "FORUMID", "FILTERINDEX" )
  using index
  enable;

Create index "FILTERINDEXIDX" on "JIVEFILTER"
  ( "FILTERINDEX" )
  logging;

Create table "JIVEFORUM"
  ( "FORUMID"       integer                             not null enable,
    "NAME"          varchar2 (255)                      null,
    "DESCRIPTION"   varchar2 (2000)                     null,
    "MODIFIEDDATE"  varchar2 (15)                       null,
    "CREATIONDATE"  varchar2 (15)                       null,
    "MODERATED"     integer                             not null enable )
  logging;

Alter table "JIVEFORUM"
  add primary key ( "FORUMID" )
  using index
  enable;

Create table "JIVEFORUMPROP"
  ( "FORUMID"    integer                             not null enable,
    "NAME"       varchar2 (30)                       not null enable,
    "PROPVALUE"  varchar2 (255)                      not null enable )
  logging;

Alter table "JIVEFORUMPROP"
  add primary key ( "FORUMID", "NAME" )
  using index
  enable;

Create table "JIVEGROUP"
  ( "GROUPID"      integer                             not null enable,
    "NAME"         varchar2 (50)                       not null enable,
    "DESCRIPTION"  varchar2 (255)                      null )
  logging;

Alter table "JIVEGROUP"
  add primary key ( "GROUPID" )
  using index
  enable;

Create table "JIVEGROUPPERM"
  ( "FORUMID"     integer                             not null enable,
    "GROUPID"     integer                             not null enable,
    "PERMISSION"  integer                             not null enable )
  logging;

Alter table "JIVEGROUPPERM"
  add primary key ( "FORUMID", "GROUPID", "PERMISSION" )
  using index
  enable;

Create index "GROUPGROUPIDX" on "JIVEGROUPPERM"
  ( "GROUPID" )
  logging;

Create table "JIVEGROUPUSER"
  ( "GROUPID"        integer                             not null enable,
    "USERID"         integer                             not null enable,
    "ADMINISTRATOR"  integer                             not null enable )
  logging;

Alter table "JIVEGROUPUSER"
  add primary key ( "GROUPID", "USERID" )
  using index
  enable;

Create index "GROUPIDX" on "JIVEGROUPUSER"
  ( "USERID" )
  logging;

Create table "JIVEMESSAGE"
  ( "MESSAGEID"     integer                             not null enable,
    "THREADID"      integer                             default -1 null,
    "SUBJECT"       varchar2 (255)                      null,
    "USERID"        integer                             not null enable,
    "BODY"          long                                null,
    "MODIFIEDDATE"  varchar2 (15)                       null,
    "CREATIONDATE"  varchar2 (15)                       null,
    "APPROVED"      integer                             not null enable )
  logging;

Alter table "JIVEMESSAGE"
  add primary key ( "MESSAGEID" )
  using index
  enable;

Create index "MESSAGEAPPROVEDIDX" on "JIVEMESSAGE"
  ( "APPROVED" )
  logging;

Create index "MESSAGETHREADIDIDX" on "JIVEMESSAGE"
  ( "THREADID" )
  logging;

Create table "JIVEMESSAGEPROP"
  ( "MESSAGEID"  integer                             not null enable,
    "NAME"       varchar2 (50)                       not null enable,
    "PROPVALUE"  varchar2 (255)                      not null enable )
  logging;

Alter table "JIVEMESSAGEPROP"
  add primary key ( "MESSAGEID", "NAME" )
  using index
  enable;

Create table "JIVEMESSAGETREE"
  ( "PARENTID"  integer                             not null enable,
    "CHILDID"   integer                             not null enable )
  logging;

Alter table "JIVEMESSAGETREE"
  add primary key ( "PARENTID", "CHILDID" )
  using index
  enable;

Create index "CHILDIDX" on "JIVEMESSAGETREE"
  ( "CHILDID" )
  logging;

Create table "JIVETHREAD"
  ( "THREADID"       integer                             not null enable,
    "FORUMID"        integer                             null,
    "ROOTMESSAGEID"  integer                             not null enable,
    "CREATIONDATE"   varchar2 (15)                       null,
    "MODIFIEDDATE"   varchar2 (15)                       null,
    "APPROVED"       integer                             not null enable )
  logging;

Alter table "JIVETHREAD"
  add primary key ( "THREADID" )
  using index
  enable;

Create table "JIVEUSER"
  ( "USERID"        integer                             not null enable,
    "NAME"          varchar2 (50)                       null,
    "USERNAME"      varchar2 (30)                       not null enable,
    "PASSWORDHASH"  varchar2 (32)                       not null enable,
    "EMAIL"         varchar2 (30)                       not null enable,
    "EMAILVISIBLE"  integer                             not null enable,
    "NAMEVISIBLE"   integer                             not null enable )
  logging;

Alter table "JIVEUSER"
  add primary key ( "USERID" )
  using index
  enable;

Create table "JIVEUSERPERM"
  ( "FORUMID"     integer                             not null enable,
    "USERID"      integer                             not null enable,
    "PERMISSION"  integer                             not null enable )
  logging;

Alter table "JIVEUSERPERM"
  add primary key ( "FORUMID", "USERID", "PERMISSION" )
  using index
  enable;

Create index "USERUSERIDX" on "JIVEUSERPERM"
  ( "USERID" )
  logging;

Create table "JIVEUSERPROP"
  ( "USERID"     integer                             not null enable,
    "NAME"       varchar2 (30)                       not null enable,
    "PROPVALUE"  varchar2 (255)                      not null enable )
  logging;

Alter table "JIVEUSERPROP"
  add primary key ( "USERID", "NAME" )
  using index
  enable;

Create table "MAIL_LIST_ITEM"
  ( "MAIL_LIST_ITEM_ID"  number (10)                         not null enable,
    "GROUP_CODE"         varchar2 (8)                        null,
    "EMAIL"              varchar2 (64)                       null,
    "IP_ADDR"            varchar2 (16)                       null,
    "REQUESTED_ON"       date                                null,
    "CONFIRMED_ON"       date                                null,
    "NAME"               varchar2 (32)                       null,
    "PRIVATE"            varchar2 (1)                        null )
  logging;

Create unique index "MAIL_LIST_ITEM_PK" on "MAIL_LIST_ITEM"
  ( "MAIL_LIST_ITEM_ID" )
  logging;

Create unique index "EMAIL_IDX" on "MAIL_LIST_ITEM"
  ( "GROUP_CODE",
    "EMAIL" )
  logging;

Alter table "MAIL_LIST_ITEM"
  add constraint "MAIL_LIST_ITEM_PK"
  primary key ( "MAIL_LIST_ITEM_ID" )
  using index
  enable;

Alter table "MAIL_LIST_ITEM"
  add constraint "EMAIL_IDX"
  unique ( "GROUP_CODE", "EMAIL" )
  using index
  enable;

Create table "POST"
  ( "POST_ID"        number (10)                         not null enable,
    "POST_TITLE_ID"  number (10)                         null,
    "PARENT_ID"      number (10)                         null,
    "POSTED_BY"      number (10)                         null,
    "CREATE_ON"      varchar2 (16)                       null,
    "TEXT"           varchar2 (4000)                     null,
    "NAME"           varchar2 (64)                       null,
    "EMAIL"          varchar2 (64)                       null )
  logging;

Create unique index "POST_PK" on "POST"
  ( "POST_ID" )
  logging;

Alter table "POST"
  add constraint "POST_PK"
  primary key ( "POST_ID" )
  using index
  enable;

Create table "POST_CFG"
  ( "POST_CFG_ID"       number (10)                         not null enable,
    "GROUP_NAME"        varchar2 (64)                       not null enable,
    "TITLE"             varchar2 (128)                      null,
    "TITLE_ROOT"        number (10)                         null,
    "BG_COLOR"          varchar2 (16)                       null,
    "BG_IMAGE"          varchar2 (32)                       null,
    "LINK_COLOR"        varchar2 (16)                       null,
    "TITLE_COLOR"       varchar2 (16)                       null,
    "TIME_STAMP_COLOR"  varchar2 (16)                       null,
    "BODY_COLOR"        varchar2 (16)                       null )
  logging;

Create unique index "POST_CFG_PK" on "POST_CFG"
  ( "POST_CFG_ID" )
  logging;

Alter table "POST_CFG"
  add constraint "POST_CFG_PK"
  primary key ( "POST_CFG_ID" )
  using index
  enable;

Create table "POST_TITLE"
  ( "POST_TITLE_ID"  number (10)                         not null enable,
    "PARENT_ID"      number (10)                         null,
    "CREATE_ON"      varchar2 (16)                       null,
    "TITLE"          varchar2 (1024)                     null )
  logging;

Create unique index "POST_TITLE_PK" on "POST_TITLE"
  ( "POST_TITLE_ID" )
  logging;

Alter table "POST_TITLE"
  add constraint "POST_TITLE_PK"
  primary key ( "POST_TITLE_ID" )
  using index
  enable;

Create table "ROLES"
  ( "ROLE_NAME"  varchar2 (12)                       not null enable )
  logging;

Create unique index "ROLES_PK" on "ROLES"
  ( "ROLE_NAME" )
  logging;

Alter table "ROLES"
  add constraint "ROLES_PK"
  primary key ( "ROLE_NAME" )
  using index
  enable;

Create table "USERS"
  ( "USER_NAME"  varchar2 (12)                       not null enable,
    "USER_PASS"  varchar2 (12)                       not null enable )
  logging;

Create unique index "USERS_PK" on "USERS"
  ( "USER_NAME" )
  logging;

Alter table "USERS"
  add constraint "USERS_PK"
  primary key ( "USER_NAME" )
  using index
  enable;

Create table "USERS_ROLES"
  ( "USER_NAME"  varchar2 (12)                       not null enable,
    "ROLE_NAME"  varchar2 (12)                       not null enable )
  logging;

Create unique index "USERS_ROLES_PK" on "USERS_ROLES"
  ( "USER_NAME",
    "ROLE_NAME" )
  logging;

Alter table "USERS_ROLES"
  add constraint "USERS_ROLES_PK"
  primary key ( "USER_NAME", "ROLE_NAME" )
  using index
  enable;

Create table "USER_ACL"
  ( "GROUP_NAME"     varchar2 (64)                       not null enable,
    "RESOURCE_TYPE"  varchar2 (64)                       not null enable,
    "RESOURCE_ID"    number (10)                         not null enable,
    "USER_LOGIN_ID"  number (10)                         not null enable )
  logging;

Create unique index "USER_ACL_PK" on "USER_ACL"
  ( "GROUP_NAME",
    "RESOURCE_TYPE",
    "RESOURCE_ID",
    "USER_LOGIN_ID" )
  logging;

Alter table "USER_ACL"
  add constraint "USER_ACL_PK"
  primary key ( "GROUP_NAME", "RESOURCE_TYPE", "RESOURCE_ID", "USER_LOGIN_ID" )
  using index
  enable;

Create table "USER_LOGIN"
  ( "USER_LOGIN_ID"     number (10)                         not null enable,
    "GROUP_CODE"        varchar2 (8)                        not null enable,
    "LOGIN_NAME"        varchar2 (64)                       not null enable,
    "PASSWORD"          varchar2 (64)                       null,
    "EMAIL"             varchar2 (64)                       null,
    "IP_ADDR"           varchar2 (16)                       null,
    "FIRST_NAME"        varchar2 (32)                       null,
    "LAST_NAME"         varchar2 (32)                       null,
    "ALT_NAME"          varchar2 (64)                       null,
    "FAILED_ATTEMPTS"   number (3)                          null,
    "REQUESTED_DATE"    date                                null,
    "CONFIRMED_DATE"    date                                null,
    "LOCKED_DATE"       date                                null,
    "LAST_LOGIN_DATE"   date                                null,
    "PASSWORD_CHANGED"  date                                null )
  logging;

Create unique index "USER_LOGIN_PK" on "USER_LOGIN"
  ( "USER_LOGIN_ID" )
  logging;

Create unique index "NAME_IDX" on "USER_LOGIN"
  ( "GROUP_CODE",
    "LOGIN_NAME" )
  logging;

Alter table "USER_LOGIN"
  add constraint "USER_LOGIN_PK"
  primary key ( "USER_LOGIN_ID" )
  using index
  enable;

Alter table "USER_LOGIN"
  add constraint "NAME_IDX"
  unique ( "GROUP_CODE", "LOGIN_NAME" )
  using index
  enable;

Create table "WLCS_BOOKMARKS"
  ( "URL"    varchar2 (100)                      not null enable,
    "NAME"   varchar2 (100)                      not null enable,
    "OWNER"  varchar2 (50)                       not null enable )
  logging;

Alter table "WLCS_BOOKMARKS"
  add primary key ( "NAME", "OWNER" )
  using index
  enable;

Create table "WLCS_CATEGORIES"
  ( "NID"             number (15)                         not null enable,
    "PORTAL_NID"      number (15)                         not null enable,
    "NAME"            varchar2 (100)                      not null enable,
    "ICON_URL"        varchar2 (100)                      null,
    "CATEGORY_ORDER"  number (5)                          not null enable )
  logging;

Alter table "WLCS_CATEGORIES"
  add primary key ( "NID" )
  using index
  enable;

Alter table "WLCS_CATEGORIES"
  add unique ( "PORTAL_NID", "NAME" )
  using index
  enable;

Create table "WLCS_CATEGORY"
  ( "CATEGORY_ID"         varchar2 (20)                       not null enable,
    "PARENT_ID"           varchar2 (20)                       null,
    "NAME"                varchar2 (50)                       null,
    "SOURCE"              varchar2 (30)                       null,
    "LANG"                varchar2 (30)                       null,
    "RELATION"            varchar2 (30)                       null,
    "COVERAGE"            varchar2 (30)                       null,
    "RIGHTS"              varchar2 (30)                       null,
    "CREATOR"             varchar2 (50)                       null,
    "PUBLISHER"           varchar2 (50)                       null,
    "CONTRIBUTOR"         varchar2 (50)                       null,
    "CREATION_DATE"       date                                null,
    "MODIFIED_DATE"       date                                null,
    "SMALL_IMG_TYPE"      number (3)                          null,
    "SMALL_IMG_LANG"      varchar2 (30)                       null,
    "SMALL_IMG_NAME"      varchar2 (50)                       null,
    "SMALL_IMG_URL"       varchar2 (255)                      null,
    "SMALL_IMG_ALT_TEXT"  varchar2 (255)                      null,
    "LARGE_IMG_TYPE"      number (3)                          null,
    "LARGE_IMG_LANG"      varchar2 (30)                       null,
    "LARGE_IMG_NAME"      varchar2 (50)                       null,
    "LARGE_IMG_URL"       varchar2 (255)                      null,
    "LARGE_IMG_ALT_TEXT"  varchar2 (255)                      null,
    "DISPLAY_JSP_URL"     varchar2 (255)                      null,
    "SHORT_DESC"          varchar2 (50)                       null,
    "LONG_DESC"           varchar2 (255)                      null )
  logging;

Alter table "WLCS_CATEGORY"
  add primary key ( "CATEGORY_ID" )
  using index
  enable;

Create index "XAK1WLCS_CATEGORY" on "WLCS_CATEGORY"
  ( "PARENT_ID" )
  logging;

Create table "WLCS_CAT_ENTITY_ID"
  ( "JNDI_HOME_NAME"  varchar2 (100)                      not null enable,
    "PK_STRING"       varchar2 (200)                      not null enable,
    "ENTITY_ID"       number (15)                         not null enable )
  logging;

Create unique index "PK_CAT_ENTITY" on "WLCS_CAT_ENTITY_ID"
  ( "JNDI_HOME_NAME",
    "PK_STRING" )
  logging;

Alter table "WLCS_CAT_ENTITY_ID"
  add constraint "PK_CAT_ENTITY"
  primary key ( "JNDI_HOME_NAME", "PK_STRING" )
  using index
  enable;

Create table "WLCS_CAT_PROP_BOOLEAN"
  ( "PROPERTY_ID"  number (15)                         not null enable,
    "VALUE"        number (3)                          null )
  logging;

Create index "WLCS_CAT_PROP_BOOLEAN_IDX" on "WLCS_CAT_PROP_BOOLEAN"
  ( "PROPERTY_ID" )
  logging;

Create table "WLCS_CAT_PROP_DATETIME"
  ( "PROPERTY_ID"  number (15)                         not null enable,
    "VALUE"        date                                null )
  logging;

Create index "WLCS_CAT_PROP_DATETIME_IDX" on "WLCS_CAT_PROP_DATETIME"
  ( "PROPERTY_ID" )
  logging;

Create table "WLCS_CAT_PROP_FLOAT"
  ( "PROPERTY_ID"  number (15)                         not null enable,
    "VALUE"        number                              null )
  logging;

Create index "WLCS_CAT_PROP_FLOAT_IDX" on "WLCS_CAT_PROP_FLOAT"
  ( "PROPERTY_ID" )
  logging;

Create table "WLCS_CAT_PROP_ID"
  ( "ENTITY_ID"              number (15)                         not null enable,
    "SCOPE_NAME"             varchar2 (100)                      null,
    "PROPERTY_NAME"          varchar2 (100)                      not null enable,
    "PROPERTY_TYPE"          number (3)                          null,
    "PROPERTY_META_DATA_ID"  number (15)                         null,
    "SCHEMA_HAS_CHANGED"     number (3)                          null,
    "PROPERTY_ID"            number (15)                         not null enable )
  logging;

Create index "WLCS_CAT_PROP_ID_IDX1" on "WLCS_CAT_PROP_ID"
  ( "SCOPE_NAME",
    "PROPERTY_NAME" )
  logging;

Create index "WLCS_CAT_PROP_ID_IDX2" on "WLCS_CAT_PROP_ID"
  ( "ENTITY_ID",
    "SCOPE_NAME",
    "PROPERTY_NAME" )
  logging;

Create table "WLCS_CAT_PROP_INTEGER"
  ( "PROPERTY_ID"  number (15)                         not null enable,
    "VALUE"        number (20)                         null )
  logging;

Create index "WLCS_CAT_PROP_INTEGER_IDX" on "WLCS_CAT_PROP_INTEGER"
  ( "PROPERTY_ID" )
  logging;

Create table "WLCS_CAT_PROP_TEXT"
  ( "PROPERTY_ID"  number (15)                         not null enable,
    "VALUE"        varchar2 (255)                      null )
  logging;

Create index "WLCS_CAT_PROP_TEXT_IDX" on "WLCS_CAT_PROP_TEXT"
  ( "PROPERTY_ID" )
  logging;

Create table "WLCS_CAT_PROP_USER_DEFINED"
  ( "PROPERTY_ID"  number (15)                         not null enable,
    "VALUE"        blob                                null )
  logging
  lob ( "VALUE" ) store as
  ( 
    enable storage in row
    chunk 8192
    pctversion 10
    nocache
    logging
  );

Create index "WLCS_CAT_PROP_USER_DEFINED_IDX" on "WLCS_CAT_PROP_USER_DEFINED"
  ( "PROPERTY_ID" )
  logging;

Create table "WLCS_COLUMN_INFORMATION"
  ( "PORTAL_NID"    number (15)                         not null enable,
    "CATEGORY_NID"  number (15)                         not null enable,
    "COLUMN_WIDTH"  number (5)                          null,
    "COLUMN_ORDER"  number (5)                          null )
  logging;

Alter table "WLCS_COLUMN_INFORMATION"
  add primary key ( "PORTAL_NID", "CATEGORY_NID", "COLUMN_ORDER" )
  using index
  enable;

Create table "WLCS_COUNTRY"
  ( "COUNTRY_ID"     varchar2 (3)                        not null enable,
    "COUNTRY_ABBR2"  varchar2 (2)                        not null enable,
    "CURRENCY_ID"    number (3)                          not null enable,
    "COUNTRY_NAME"   varchar2 (50)                       not null enable )
  logging;

Create unique index "PK_COUNTRY" on "WLCS_COUNTRY"
  ( "COUNTRY_ID" )
  logging;

Create unique index "AK1_COUNTRY" on "WLCS_COUNTRY"
  ( "COUNTRY_ABBR2" )
  logging;

Alter table "WLCS_COUNTRY"
  add constraint "PK_COUNTRY"
  primary key ( "COUNTRY_ID" )
  using index
  enable;

Alter table "WLCS_COUNTRY"
  add constraint "AK1_COUNTRY"
  unique ( "COUNTRY_ABBR2" )
  using index
  enable;

Create table "WLCS_CREDIT_CARD"
  ( "CREDIT_CARD_ID"            number (15)                         null,
    "CC_NUMBER"                 varchar2 (200)                      null,
    "CC_TYPE"                   varchar2 (20)                       null,
    "CC_EXP_DATE"               date                                null,
    "CC_NAME"                   varchar2 (50)                       null,
    "CC_DISPLAY_NUMBER"         varchar2 (20)                       null,
    "CC_COMPANY"                varchar2 (50)                       null,
    "BILLING_GEOCODE"           varchar2 (2)                        null,
    "BILLING_STREET1"           varchar2 (30)                       null,
    "BILLING_STREET2"           varchar2 (30)                       null,
    "BILLING_CITY"              varchar2 (30)                       null,
    "BILLING_STATE"             varchar2 (40)                       null,
    "BILLING_COUNTRY"           varchar2 (40)                       null,
    "BILLING_POBOX"             varchar2 (30)                       null,
    "BILLING_COUNTY"            varchar2 (50)                       null,
    "BILLING_POSTAL_CODE"       varchar2 (10)                       null,
    "BILLING_POSTAL_CODE_TYPE"  varchar2 (10)                       null,
    "CUSTOMER_ID"               varchar2 (20)                       null,
    "MAP_KEY"                   varchar2 (20)                       null )
  logging;

Alter table "WLCS_CREDIT_CARD"
  add primary key ( "CREDIT_CARD_ID" )
  using index
  enable;

Create table "WLCS_CURRENCY"
  ( "CURRENCY_ID"    number (3)                          not null enable,
    "CURRENCY_ABBR"  varchar2 (3)                        not null enable,
    "CURRENCY_NAME"  varchar2 (50)                       not null enable )
  logging;

Create unique index "PK_CURRENCY" on "WLCS_CURRENCY"
  ( "CURRENCY_ID" )
  logging;

Create unique index "AK1_CURRENCY" on "WLCS_CURRENCY"
  ( "CURRENCY_ABBR" )
  logging;

Alter table "WLCS_CURRENCY"
  add constraint "PK_CURRENCY"
  primary key ( "CURRENCY_ID" )
  using index
  enable;

Alter table "WLCS_CURRENCY"
  add constraint "AK1_CURRENCY"
  unique ( "CURRENCY_ABBR" )
  using index
  enable;

Create table "WLCS_CUSTOMER"
  ( "CUSTOMER_ID"               varchar2 (20)                       null,
    "CUSTOMER_TYPE"             varchar2 (255)                      null,
    "FIRST_NAME"                varchar2 (30)                       null,
    "LAST_NAME"                 varchar2 (30)                       null,
    "MIDDLE_NAME"               varchar2 (30)                       null,
    "TITLE"                     varchar2 (10)                       null,
    "SUFFIX"                    varchar2 (10)                       null,
    "EMAIL"                     varchar2 (80)                       null,
    "HOME_PHONE"                varchar2 (15)                       null,
    "BUSINESS_PHONE"            varchar2 (20)                       null,
    "FAX"                       varchar2 (15)                       null,
    "MAILING_GEOCODE"           varchar2 (2)                        null,
    "MAILING_STREET1"           varchar2 (30)                       null,
    "MAILING_STREET2"           varchar2 (30)                       null,
    "MAILING_CITY"              varchar2 (30)                       null,
    "MAILING_STATE"             varchar2 (40)                       null,
    "MAILING_COUNTRY"           varchar2 (40)                       null,
    "MAILING_POBOX"             varchar2 (30)                       null,
    "MAILING_COUNTY"            varchar2 (50)                       null,
    "MAILING_POSTAL_CODE"       varchar2 (10)                       null,
    "MAILING_POSTAL_CODE_TYPE"  varchar2 (10)                       null )
  logging;

Alter table "WLCS_CUSTOMER"
  add primary key ( "CUSTOMER_ID" )
  using index
  enable;

Create table "WLCS_DOCUMENT"
  ( "ID"             varchar2 (255)                      not null enable,
    "DOCUMENT_SIZE"  number (15)                         not null enable,
    "VERSION"        number (15)                         null,
    "AUTHOR"         varchar2 (50)                       null,
    "CREATION_DATE"  date                                null,
    "LOCKED_BY"      varchar2 (50)                       null,
    "MODIFIED_DATE"  date                                null,
    "MODIFIED_BY"    varchar2 (50)                       null,
    "DESCRIPTION"    varchar2 (2000)                     null,
    "COMMENTS"       varchar2 (2000)                     null,
    "MIME_TYPE"      varchar2 (100)                      not null enable )
  logging;

Create unique index "PK_DOCUMENT" on "WLCS_DOCUMENT"
  ( "ID" )
  logging;

Alter table "WLCS_DOCUMENT"
  add constraint "PK_DOCUMENT"
  primary key ( "ID" )
  using index
  enable;

Create index "AK1_DOCUMENT" on "WLCS_DOCUMENT"
  ( "DOCUMENT_SIZE" )
  logging;

Create index "AK2_DOCUMENT" on "WLCS_DOCUMENT"
  ( "MIME_TYPE" )
  logging;

Create index "AK3_DOCUMENT" on "WLCS_DOCUMENT"
  ( "MODIFIED_DATE" )
  logging;

Create table "WLCS_DOCUMENT_METADATA"
  ( "ID"     varchar2 (255)                      not null enable,
    "NAME"   varchar2 (240)                      not null enable,
    "VALUE"  varchar2 (2000)                     null,
    "STATE"  varchar2 (50)                       null )
  logging;

Create unique index "PK_DOCUMENT_MD" on "WLCS_DOCUMENT_METADATA"
  ( "ID",
    "NAME" )
  logging;

Alter table "WLCS_DOCUMENT_METADATA"
  add constraint "PK_DOCUMENT_MD"
  primary key ( "ID", "NAME" )
  using index
  enable;

Create index "AK1_DOCUMENT_MD" on "WLCS_DOCUMENT_METADATA"
  ( "ID" )
  logging;

Create index "AK2_DOCUMENT_MD" on "WLCS_DOCUMENT_METADATA"
  ( "NAME" )
  logging;

Create index "AK3_DOCUMENT_MD" on "WLCS_DOCUMENT_METADATA"
  ( "STATE" )
  logging;

Create table "WLCS_ENTITY_ID"
  ( "JNDI_HOME_NAME"  varchar2 (100)                      not null enable,
    "PK_STRING"       varchar2 (200)                      not null enable,
    "ENTITY_ID"       number (15)                         not null enable )
  logging;

Create unique index "ENTITY_ID_INDEX" on "WLCS_ENTITY_ID"
  ( "JNDI_HOME_NAME",
    "PK_STRING" )
  logging;

Alter table "WLCS_ENTITY_ID"
  add constraint "ENTITY_ID_INDEX"
  primary key ( "JNDI_HOME_NAME", "PK_STRING" )
  using index
  enable;

Create table "WLCS_GROUP"
  ( "IDENTIFIER"  varchar2 (50)                       not null enable )
  logging;

Create unique index "WLCS_GROUP_INDEX" on "WLCS_GROUP"
  ( "IDENTIFIER" )
  logging;

Alter table "WLCS_GROUP"
  add constraint "WLCS_GROUP_INDEX"
  primary key ( "IDENTIFIER" )
  using index
  enable;

Create table "WLCS_GROUP_HIERARCHY"
  ( "PARENT_ID"  number (15)                         not null enable,
    "CHILD_ID"   number (15)                         not null enable )
  logging;

Create index "GROUP_HIERARCHY_INDEX" on "WLCS_GROUP_HIERARCHY"
  ( "PARENT_ID",
    "CHILD_ID" )
  logging;

Create table "WLCS_GROUP_PERSONALIZATION"
  ( "PORTAL_NID"    number (15)                         not null enable,
    "CATEGORY_NID"  number (15)                         not null enable,
    "PORTLET_NID"   number (15)                         not null enable,
    "GROUP_NID"     number (15)                         not null enable,
    "AVAILABLE"     number (5)                          null,
    "MANDATORY"     number (5)                          null,
    "EDITABLE"      number (5)                          null,
    "MOVEABLE"      number (5)                          null,
    "MINIMIZEABLE"  number (5)                          null,
    "MAXIMIZEABLE"  number (5)                          null,
    "FLOATABLE"     number (5)                          null,
    "VISIBLE"       number (5)                          null,
    "X"             number (5)                          null,
    "Y"             number (5)                          null,
    "MINIMIZED"     number (5)                          null )
  logging;

Alter table "WLCS_GROUP_PERSONALIZATION"
  add primary key ( "PORTAL_NID", "CATEGORY_NID", "PORTLET_NID", "GROUP_NID" )
  using index
  enable;

Create table "WLCS_IS_ALIVE"
  ( "NAME"  varchar2 (100)                      not null enable )
  logging;

Create table "WLCS_LDAP_CONFIG"
  ( "LDAP_PROPERTY"  varchar2 (100)                      null,
    "LDAP_VALUE"     varchar2 (255)                      null )
  logging;

Create table "WLCS_ORDER"
  ( "ORDER_ID"                   varchar2 (20)                       null,
    "CUSTOMER_ID"                varchar2 (20)                       null,
    "TRANSACTION_ID"             varchar2 (25)                       null,
    "STATUS"                     varchar2 (20)                       null,
    "ORDER_DATE"                 date                                null,
    "SHIPPING_METHOD"            varchar2 (40)                       null,
    "SHIPPING_AMOUNT"            number (16,4)                       null,
    "SHIPPING_CURRENCY"          varchar2 (10)                       null,
    "PRICE_AMOUNT"               number (16,4)                       null,
    "PRICE_CURRENCY"             varchar2 (10)                       null,
    "SHIPPING_GEOCODE"           varchar2 (2)                        null,
    "SHIPPING_STREET1"           varchar2 (30)                       null,
    "SHIPPING_STREET2"           varchar2 (30)                       null,
    "SHIPPING_CITY"              varchar2 (30)                       null,
    "SHIPPING_STATE"             varchar2 (40)                       null,
    "SHIPPING_COUNTRY"           varchar2 (40)                       null,
    "SHIPPING_POBOX"             varchar2 (30)                       null,
    "SHIPPING_COUNTY"            varchar2 (50)                       null,
    "SHIPPING_POSTAL_CODE"       varchar2 (10)                       null,
    "SHIPPING_POSTAL_CODE_TYPE"  varchar2 (10)                       null,
    "SPECIAL_INSTRUCTIONS"       varchar2 (255)                      null,
    "SPLITTING_PREFERENCE"       varchar2 (255)                      null )
  logging;

Alter table "WLCS_ORDER"
  add primary key ( "ORDER_ID" )
  using index
  enable;

Create table "WLCS_ORDER_LINE"
  ( "ORDER_LINE_ID"        number (15)                         null,
    "QUANTITY"             number (16,4)                       null,
    "PRODUCT_ID"           varchar2 (40)                       null,
    "TAX_AMOUNT"           number (16,4)                       null,
    "TAX_CURRENCY"         varchar2 (10)                       null,
    "SHIPPING_AMOUNT"      number (16,4)                       null,
    "SHIPPING_CURRENCY"    varchar2 (10)                       null,
    "UNIT_PRICE_AMOUNT"    number (16,4)                       null,
    "UNIT_PRICE_CURRENCY"  varchar2 (10)                       null,
    "MSRP_AMOUNT"          number (16,4)                       null,
    "MSRP_CURRENCY"        varchar2 (10)                       null,
    "DESCRIPTION"          varchar2 (255)                      null,
    "ORDER_ID"             varchar2 (20)                       null )
  logging;

Alter table "WLCS_ORDER_LINE"
  add primary key ( "ORDER_LINE_ID" )
  using index
  enable;

Create table "WLCS_PORTAL_DEFINITION"
  ( "NID"                   number (15)                         not null enable,
    "NAME"                  varchar2 (500)                      not null enable,
    "HEADER_URL"            varchar2 (500)                      null,
    "CONTENT_URL"           varchar2 (500)                      not null enable,
    "FOOTER_URL"            varchar2 (500)                      null,
    "CONTENT_COLUMN_COUNT"  number (5)                          null,
    "SUSPENDED"             number (5)                          null,
    "SUSPENDED_URL"         varchar2 (500)                      null )
  logging;

Alter table "WLCS_PORTAL_DEFINITION"
  add primary key ( "NID" )
  using index
  enable;

Alter table "WLCS_PORTAL_DEFINITION"
  add unique ( "NAME" )
  using index
  enable;

Create table "WLCS_PORTAL_GROUP_HIERARCHY"
  ( "PORTAL_NID"  number (15)                         not null enable,
    "GROUP_NID"   number (15)                         not null enable )
  logging;

Alter table "WLCS_PORTAL_GROUP_HIERARCHY"
  add primary key ( "PORTAL_NID", "GROUP_NID" )
  using index
  enable;

Create table "WLCS_PORTAL_HIERARCHY"
  ( "PORTAL_NID"   number (15)                         not null enable,
    "PORTLET_NID"  number (15)                         not null enable )
  logging;

Alter table "WLCS_PORTAL_HIERARCHY"
  add primary key ( "PORTAL_NID", "PORTLET_NID" )
  using index
  enable;

Create table "WLCS_PORTAL_PERSONALIZATION"
  ( "PORTAL_NID"    number (15)                         not null enable,
    "CATEGORY_NID"  number (15)                         not null enable,
    "PORTLET_NID"   number (15)                         not null enable,
    "AVAILABLE"     number (5)                          null,
    "MANDATORY"     number (5)                          null,
    "EDITABLE"      number (5)                          null,
    "MOVEABLE"      number (5)                          null,
    "MINIMIZEABLE"  number (5)                          null,
    "MAXIMIZEABLE"  number (5)                          null,
    "FLOATABLE"     number (5)                          null,
    "VISIBLE"       number (5)                          null,
    "X"             number (5)                          null,
    "Y"             number (5)                          null,
    "MINIMIZED"     number (5)                          null )
  logging;

Alter table "WLCS_PORTAL_PERSONALIZATION"
  add primary key ( "PORTAL_NID", "CATEGORY_NID", "PORTLET_NID" )
  using index
  enable;

Create table "WLCS_PORTLET_DEFINITION"
  ( "NID"                   number (15)                         not null enable,
    "NAME"                  varchar2 (500)                      not null enable,
    "HEADER_URL"            varchar2 (500)                      null,
    "FOOTER_URL"            varchar2 (500)                      null,
    "CONTENT_URL"           varchar2 (500)                      not null enable,
    "BANNER_URL"            varchar2 (500)                      null,
    "ALTERNATE_HEADER_URL"  varchar2 (500)                      null,
    "ALTERNATE_FOOTER_URL"  varchar2 (500)                      null,
    "TITLEBAR_URL"          varchar2 (500)                      null,
    "EDIT_URL"              varchar2 (500)                      null,
    "HELP_URL"              varchar2 (500)                      null,
    "ICON_URL"              varchar2 (500)                      null,
    "HELP"                  number (5)                          null,
    "MAXIMIZED_URL"         varchar2 (500)                      null,
    "MANDATORY"             number (5)                          null,
    "EDITABLE"              number (5)                          null,
    "MOVEABLE"              number (5)                          null,
    "LOGIN_REQUIRED"        number (5)                          null,
    "MINIMIZEABLE"          number (5)                          null,
    "MAXIMIZEABLE"          number (5)                          null,
    "FLOATABLE"             number (5)                          null,
    "VISIBLE"               number (5)                          null,
    "X"                     number (5)                          null,
    "Y"                     number (5)                          null,
    "MINIMIZED"             number (5)                          null )
  logging;

Alter table "WLCS_PORTLET_DEFINITION"
  add primary key ( "NID" )
  using index
  enable;

Alter table "WLCS_PORTLET_DEFINITION"
  add unique ( "NAME" )
  using index
  enable;

Create table "WLCS_PRODUCT"
  ( "SKU"                  varchar2 (40)                       not null enable,
    "IN_STOCK"             varchar2 (1)                        null,
    "VISIBLE"              varchar2 (1)                        null,
    "TAX_CODE"             varchar2 (10)                       null,
    "SHIPPING_CODE"        varchar2 (10)                       null,
    "NAME"                 varchar2 (100)                      null,
    "SOURCE"               varchar2 (30)                       null,
    "LANG"                 varchar2 (30)                       null,
    "RELATION"             varchar2 (30)                       null,
    "COVERAGE"             varchar2 (30)                       null,
    "RIGHTS"               varchar2 (30)                       null,
    "FORMAT"               varchar2 (30)                       null,
    "TYPE"                 varchar2 (30)                       null,
    "MSRP_CURRENCY"        varchar2 (30)                       null,
    "MSRP_AMOUNT"          number (16,4)                       null,
    "PRICE_CURRENCY"       varchar2 (30)                       null,
    "PRICE_AMOUNT"         number (16,4)                       null,
    "ESTIMATE_SHIP_TIME"   varchar2 (100)                      null,
    "SPECIAL_NOTES"        varchar2 (100)                      null,
    "CREATOR"              varchar2 (50)                       null,
    "PUBLISHER"            varchar2 (50)                       null,
    "CONTRIBUTOR"          varchar2 (50)                       null,
    "CREATION_DATE"        date                                null,
    "MODIFIED_DATE"        date                                null,
    "SMALL_IMG_TYPE"       number (3)                          null,
    "SMALL_IMG_LANG"       varchar2 (30)                       null,
    "SMALL_IMG_NAME"       varchar2 (50)                       null,
    "SMALL_IMG_URL"        varchar2 (255)                      null,
    "SMALL_IMG_ALT_TEXT"   varchar2 (255)                      null,
    "LARGE_IMG_TYPE"       number (3)                          null,
    "LARGE_IMG_LANG"       varchar2 (30)                       null,
    "LARGE_IMG_NAME"       varchar2 (50)                       null,
    "LARGE_IMG_URL"        varchar2 (255)                      null,
    "LARGE_IMG_ALT_TEXT"   varchar2 (255)                      null,
    "SUM_DISPLAY_JSP_URL"  varchar2 (255)                      null,
    "DET_DISPLAY_JSP_URL"  varchar2 (255)                      null,
    "SHORT_DESC"           varchar2 (255)                      null,
    "LONG_DESC"            varchar2 (2000)                     null )
  logging;

Alter table "WLCS_PRODUCT"
  add primary key ( "SKU" )
  using index
  enable;

Create table "WLCS_PRODUCT_CATEGORY"
  ( "SKU"          varchar2 (40)                       not null enable,
    "CATEGORY_ID"  varchar2 (20)                       not null enable )
  logging;

Alter table "WLCS_PRODUCT_CATEGORY"
  add primary key ( "SKU", "CATEGORY_ID" )
  using index
  enable;

Create index "XAK1WLCS_PRODUCT_CATEGORY" on "WLCS_PRODUCT_CATEGORY"
  ( "CATEGORY_ID" )
  logging;

Create table "WLCS_PRODUCT_KEYWORD"
  ( "KEYWORD"  varchar2 (30)                       not null enable,
    "SKU"      varchar2 (40)                       not null enable )
  logging;

Alter table "WLCS_PRODUCT_KEYWORD"
  add primary key ( "KEYWORD", "SKU" )
  using index
  enable;

Create index "XAK1WLCS_PRODUCT_KEYWORD" on "WLCS_PRODUCT_KEYWORD"
  ( "SKU" )
  logging;

Create table "WLCS_PROP_BOOLEAN"
  ( "PROPERTY_ID"  number (15)                         not null enable,
    "VALUE"        number (3)                          null )
  logging;

Create index "PROPERTY_BOOLEAN_INDEX" on "WLCS_PROP_BOOLEAN"
  ( "PROPERTY_ID" )
  logging;

Create table "WLCS_PROP_DATETIME"
  ( "PROPERTY_ID"  number (15)                         not null enable,
    "VALUE"        date                                null )
  logging;

Create index "PROPERTY_DATETIME_INDEX" on "WLCS_PROP_DATETIME"
  ( "PROPERTY_ID" )
  logging;

Create table "WLCS_PROP_FLOAT"
  ( "PROPERTY_ID"  number (15)                         not null enable,
    "VALUE"        number                              null )
  logging;

Create index "PROPERTY_FLOAT_INDEX" on "WLCS_PROP_FLOAT"
  ( "PROPERTY_ID" )
  logging;

Create table "WLCS_PROP_ID"
  ( "ENTITY_ID"              number (15)                         not null enable,
    "SCOPE_NAME"             varchar2 (100)                      null,
    "PROPERTY_NAME"          varchar2 (100)                      not null enable,
    "PROPERTY_TYPE"          number (3)                          null,
    "PROPERTY_META_DATA_ID"  number (15)                         null,
    "SCHEMA_HAS_CHANGED"     number (3)                          null,
    "PROPERTY_ID"            number (15)                         not null enable )
  logging;

Create index "WLCS_PROP_ID_IDX1" on "WLCS_PROP_ID"
  ( "SCOPE_NAME",
    "PROPERTY_NAME" )
  logging;

Create index "WLCS_PROP_ID_IDX2" on "WLCS_PROP_ID"
  ( "ENTITY_ID",
    "SCOPE_NAME",
    "PROPERTY_NAME" )
  logging;

Create table "WLCS_PROP_INTEGER"
  ( "PROPERTY_ID"  number (15)                         not null enable,
    "VALUE"        number (20)                         null )
  logging;

Create index "PROPERTY_INTEGER_INDEX" on "WLCS_PROP_INTEGER"
  ( "PROPERTY_ID" )
  logging;

Create table "WLCS_PROP_MD"
  ( "SCHEMA_ID"              number (15)                         not null enable,
    "PROPERTY_NAME"          varchar2 (100)                      not null enable,
    "DESCRIPTION"            varchar2 (255)                      null,
    "IS_RESTRICTED"          number (3)                          null,
    "IS_EXPLICIT"            number (3)                          null,
    "IS_MULTIVALUED"         number (3)                          null,
    "PROPERTY_TYPE"          number (3)                          null,
    "PROPERTY_META_DATA_ID"  number (15)                         null )
  logging;

Create unique index "PROP_MD_INDEX" on "WLCS_PROP_MD"
  ( "SCHEMA_ID",
    "PROPERTY_NAME" )
  logging;

Alter table "WLCS_PROP_MD"
  add constraint "PROP_MD_INDEX"
  primary key ( "SCHEMA_ID", "PROPERTY_NAME" )
  using index
  enable;

Create index "PROP_MD_ID_INDEX" on "WLCS_PROP_MD"
  ( "PROPERTY_META_DATA_ID" )
  logging;

Create table "WLCS_PROP_MD_BOOLEAN"
  ( "PROPERTY_META_DATA_ID"  number (15)                         not null enable,
    "VALUE"                  number (3)                          null,
    "IS_DEFAULT"             number (3)                          null )
  logging;

Create index "PROP_MD_BOOLEAN_INDEX" on "WLCS_PROP_MD_BOOLEAN"
  ( "PROPERTY_META_DATA_ID" )
  logging;

Create table "WLCS_PROP_MD_DATETIME"
  ( "PROPERTY_META_DATA_ID"  number (15)                         not null enable,
    "VALUE"                  date                                null,
    "IS_DEFAULT"             number (3)                          null )
  logging;

Create index "PROP_MD_DATETIME_INDEX" on "WLCS_PROP_MD_DATETIME"
  ( "PROPERTY_META_DATA_ID" )
  logging;

Create table "WLCS_PROP_MD_FLOAT"
  ( "PROPERTY_META_DATA_ID"  number (15)                         not null enable,
    "VALUE"                  number                              null,
    "IS_DEFAULT"             number (3)                          null )
  logging;

Create index "PROP_MD_FLOAT_INDEX" on "WLCS_PROP_MD_FLOAT"
  ( "PROPERTY_META_DATA_ID" )
  logging;

Create table "WLCS_PROP_MD_INTEGER"
  ( "PROPERTY_META_DATA_ID"  number (15)                         not null enable,
    "VALUE"                  number (20)                         null,
    "IS_DEFAULT"             number (3)                          null )
  logging;

Create index "PROP_MD_INTEGER_INDEX" on "WLCS_PROP_MD_INTEGER"
  ( "PROPERTY_META_DATA_ID" )
  logging;

Create table "WLCS_PROP_MD_TEXT"
  ( "PROPERTY_META_DATA_ID"  number (15)                         not null enable,
    "VALUE"                  varchar2 (255)                      null,
    "IS_DEFAULT"             number (3)                          null )
  logging;

Create index "PROP_MD_TEXT_INDEX" on "WLCS_PROP_MD_TEXT"
  ( "PROPERTY_META_DATA_ID" )
  logging;

Create table "WLCS_PROP_MD_USER_DEFINED"
  ( "PROPERTY_META_DATA_ID"  number (15)                         not null enable,
    "VALUE"                  blob                                null,
    "IS_DEFAULT"             number (3)                          null )
  logging
  lob ( "VALUE" ) store as
  ( 
    enable storage in row
    chunk 8192
    pctversion 10
    nocache
    logging
  );

Create index "PROP_MD_USER_DEFINED_INDEX" on "WLCS_PROP_MD_USER_DEFINED"
  ( "PROPERTY_META_DATA_ID" )
  logging;

Create table "WLCS_PROP_TEXT"
  ( "PROPERTY_ID"  number (15)                         not null enable,
    "VALUE"        varchar2 (255)                      null )
  logging;

Create index "PROPERTY_TEXT_INDEX" on "WLCS_PROP_TEXT"
  ( "PROPERTY_ID" )
  logging;

Create table "WLCS_PROP_USER_DEFINED"
  ( "PROPERTY_ID"  number (15)                         not null enable,
    "VALUE"        blob                                null )
  logging
  lob ( "VALUE" ) store as
  ( 
    enable storage in row
    chunk 8192
    pctversion 10
    nocache
    logging
  );

Create index "PROPERTY_USER_DEFINED_INDEX" on "WLCS_PROP_USER_DEFINED"
  ( "PROPERTY_ID" )
  logging;

Create table "WLCS_RULESET_DEFINITION"
  ( "NAME"      varchar2 (50)                       not null enable,
    "DOCUMENT"  blob                                null )
  logging
  lob ( "DOCUMENT" ) store as
  ( 
    enable storage in row
    chunk 8192
    pctversion 10
    nocache
    logging
  );

Alter table "WLCS_RULESET_DEFINITION"
  add primary key ( "NAME" )
  using index
  enable;

Create table "WLCS_SAVED_ITEM_LIST"
  ( "CUSTOMER_ID"  varchar2 (20)                       null,
    "SKU"          varchar2 (40)                       null )
  logging;

Create table "WLCS_SCHEMA"
  ( "SCHEMA_GROUP_NAME"  varchar2 (100)                      not null enable,
    "SCOPE_NAME"         varchar2 (100)                      not null enable,
    "DESCRIPTION"        varchar2 (255)                      null,
    "SCHEMA_ID"          number (15)                         null )
  logging;

Create unique index "SCHEMA_INDEX" on "WLCS_SCHEMA"
  ( "SCHEMA_GROUP_NAME",
    "SCOPE_NAME" )
  logging;

Alter table "WLCS_SCHEMA"
  add constraint "SCHEMA_INDEX"
  primary key ( "SCHEMA_GROUP_NAME", "SCOPE_NAME" )
  using index
  enable;

Create table "WLCS_SECURITY"
  ( "ID"           number (5)                          null,
    "PUBLIC_KEY"   varchar2 (2000)                     null,
    "PRIVATE_KEY"  varchar2 (2000)                     null )
  logging;

Create table "WLCS_SEQUENCER"
  ( "SEQUENCE_NAME"  varchar2 (50)                       not null enable,
    "CURRENT_VALUE"  number (15)                         null )
  logging;

Create table "WLCS_SHIPPING_ADDRESS"
  ( "SHIPPING_ADDRESS_ID"        number (15)                         null,
    "MAP_KEY"                    varchar2 (30)                       null,
    "SHIPPING_GEOCODE"           varchar2 (2)                        null,
    "SHIPPING_STREET1"           varchar2 (30)                       null,
    "SHIPPING_STREET2"           varchar2 (30)                       null,
    "SHIPPING_CITY"              varchar2 (30)                       null,
    "SHIPPING_STATE"             varchar2 (40)                       null,
    "SHIPPING_COUNTRY"           varchar2 (40)                       null,
    "SHIPPING_POBOX"             varchar2 (30)                       null,
    "SHIPPING_COUNTY"            varchar2 (50)                       null,
    "SHIPPING_POSTAL_CODE"       varchar2 (10)                       null,
    "SHIPPING_POSTAL_CODE_TYPE"  varchar2 (10)                       null,
    "CUSTOMER_ID"                varchar2 (20)                       null )
  logging;

Alter table "WLCS_SHIPPING_ADDRESS"
  add primary key ( "SHIPPING_ADDRESS_ID" )
  using index
  enable;

Create table "WLCS_SHIPPING_METHOD"
  ( "PK_IDENTIFIER"           varchar2 (20)                       null,
    "CARRIER"                 varchar2 (40)                       null,
    "METHOD"                  varchar2 (40)                       null,
    "AVERAGE_SHIPPING_TIME"   number                              null,
    "PRICE_VALUE"             number (16,4)                       null,
    "PRICE_CURRENCY"          varchar2 (10)                       null,
    "WEIGHT_LIMIT"            number (16,4)                       null,
    "RESTRICTIONS"            varchar2 (255)                      null,
    "DESCRIPTION"             varchar2 (255)                      null,
    "PO_BOX_ALLOWED"          number                              null,
    "SIGNATURE_REQUIRED"      number                              null,
    "SATURDAY_DELIVERY"       number                              null,
    "INTERNATIONAL_DELIVERY"  number                              null,
    "SIZE_LIMIT"              number (16,4)                       null,
    "PACKAGING_TYPE"          varchar2 (50)                       null )
  logging;

Alter table "WLCS_SHIPPING_METHOD"
  add primary key ( "PK_IDENTIFIER" )
  using index
  enable;

Create table "WLCS_TODO"
  ( "ITEM"      varchar2 (50)                       not null enable,
    "DONE"      number (5)                          null,
    "PRIORITY"  number (5)                          null,
    "OWNER"     varchar2 (150)                      not null enable )
  logging;

Alter table "WLCS_TODO"
  add primary key ( "ITEM", "OWNER" )
  using index
  enable;

Create table "WLCS_TRANSACTION"
  ( "TRANSACTION_ID"     varchar2 (25)                       null,
    "BATCH_ID"           varchar2 (15)                       null,
    "TRAN_DATE"          date                                null,
    "TRAN_STATUS"        varchar2 (20)                       null,
    "TRAN_AMOUNT"        number (16,4)                       null,
    "TRAN_CURRENCY"      varchar2 (30)                       null,
    "CC_NUMBER"          varchar2 (200)                      null,
    "CC_TYPE"            varchar2 (20)                       null,
    "CC_EXP_DATE"        date                                null,
    "CC_NAME"            varchar2 (50)                       null,
    "CC_DISPLAY_NUMBER"  varchar2 (20)                       null,
    "CC_COMPANY"         varchar2 (50)                       null,
    "GEOCODE"            varchar2 (2)                        null,
    "STREET1"            varchar2 (30)                       null,
    "STREET2"            varchar2 (30)                       null,
    "CITY"               varchar2 (30)                       null,
    "STATE"              varchar2 (40)                       null,
    "COUNTRY"            varchar2 (40)                       null,
    "POBOX"              varchar2 (30)                       null,
    "DESCRIPTION"        varchar2 (30)                       null,
    "COUNTY"             varchar2 (50)                       null,
    "POSTAL_CODE"        varchar2 (10)                       null,
    "POSTAL_CODE_TYPE"   varchar2 (10)                       null )
  logging;

Alter table "WLCS_TRANSACTION"
  add primary key ( "TRANSACTION_ID" )
  using index
  enable;

Create table "WLCS_TRANSACTION_ENTRY"
  ( "TRANSACTION_ENTRY_ID"  number (25)                         null,
    "TRAN_ENTRY_SEQUENCE"   varchar2 (30)                       null,
    "TRAN_ENTRY_DATE"       date                                null,
    "TRAN_ENTRY_STATUS"     varchar2 (20)                       null,
    "TRAN_ENTRY_AMOUNT"     number (16,4)                       null,
    "TRAN_ENTRY_CURRENCY"   varchar2 (30)                       null,
    "TRANSACTION_ID"        varchar2 (25)                       null )
  logging;

Alter table "WLCS_TRANSACTION_ENTRY"
  add primary key ( "TRANSACTION_ENTRY_ID" )
  using index
  enable;

Create table "WLCS_UIDS"
  ( "SID"            varchar2 (100)                      not null enable,
    "NEXT_SEQUENCE"  number (15)                         not null enable )
  logging;

Alter table "WLCS_UIDS"
  add primary key ( "SID" )
  using index
  enable;

Create table "WLCS_UNIFIED_PROFILE_TYPE"
  ( "TYPE_NAME"   varchar2 (100)                      not null enable,
    "CLASS_NAME"  varchar2 (100)                      null,
    "HOME"        varchar2 (100)                      null,
    "PK"          varchar2 (100)                      null,
    "JNDI_NAME"   varchar2 (100)                      null,
    "SUCCESSOR"   varchar2 (100)                      null )
  logging;

Create table "WLCS_USER"
  ( "IDENTIFIER"    varchar2 (50)                       not null enable,
    "PASSWORD"      varchar2 (50)                       null,
    "IS_EXTERNAL"   number (3)                          not null enable,
    "PROFILE_TYPE"  varchar2 (100)                      null )
  logging;

Create unique index "WLCS_USER_INDEX" on "WLCS_USER"
  ( "IDENTIFIER" )
  logging;

Alter table "WLCS_USER"
  add constraint "WLCS_USER_INDEX"
  primary key ( "IDENTIFIER" )
  using index
  enable;

Create table "WLCS_USER_GROUP_CACHE"
  ( "USER_NAME"   varchar2 (100)                      not null enable,
    "GROUP_NAME"  varchar2 (100)                      not null enable )
  logging;

Create unique index "WLCS_USER_GROUP_CACHE_INDEX" on "WLCS_USER_GROUP_CACHE"
  ( "USER_NAME",
    "GROUP_NAME" )
  logging;

Alter table "WLCS_USER_GROUP_CACHE"
  add constraint "WLCS_USER_GROUP_CACHE_INDEX"
  primary key ( "USER_NAME", "GROUP_NAME" )
  using index
  enable;

Create table "WLCS_USER_GROUP_HIERARCHY"
  ( "USER_ID"   number (15)                         not null enable,
    "GROUP_ID"  number (15)                         not null enable )
  logging;

Create index "USER_GROUP_HIERARCHY_INDEX" on "WLCS_USER_GROUP_HIERARCHY"
  ( "USER_ID",
    "GROUP_ID" )
  logging;

Create table "WLCS_USER_PERSONALIZATION"
  ( "PORTAL_NID"    number (15)                         not null enable,
    "CATEGORY_NID"  number (15)                         not null enable,
    "GROUP_NID"     number (15)                         not null enable,
    "USER_NID"      number (15)                         not null enable,
    "PORTLET_NID"   number (15)                         not null enable,
    "VISIBLE"       number (5)                          null,
    "X"             number (5)                          null,
    "Y"             number (5)                          null,
    "MINIMIZED"     number (5)                          null )
  logging;

Alter table "WLCS_USER_PERSONALIZATION"
  add primary key
    ( "PORTAL_NID",
      "CATEGORY_NID",
      "GROUP_NID",
      "USER_NID",
      "PORTLET_NID" )
  using index
  enable;

Create table "WLCS_UUP_EXAMPLE"
  ( "NAME"    varchar2 (100)                      not null enable,
    "POINTS"  number (15)                         null )
  logging;

Create or replace force view "V_ORPHAN_ITEM"
  ( "SKU" ) as
SELECT I.SKU
     FROM WLCS_PRODUCT I
   MINUS
   SELECT M.SKU
     FROM WLCS_PRODUCT_CATEGORY M

/

Create or replace force view "V_ORPHAN_ITEM_ORDER"
  ( "ROW_NUM",
    "SKU" ) as
SELECT ROWNUM, SKU
     FROM V_ORPHAN_ITEM

/

Grant execute on "GET_POST_ID" to public;

Grant execute on "GET_POST_TITLE_ID" to public;

Alter table "USERS_ROLES"
  add constraint "ROLE_NAME_FK"
  foreign key
   ( "ROLE_NAME" )
  references "ROLES"
  enable;

Alter table "USERS_ROLES"
  add constraint "USER_NAME_FK"
  foreign key
   ( "USER_NAME" )
  references "USERS"
  enable;

Alter table "WLCS_CATEGORY"
  add constraint "FK1_CATEGORY_PARENT"
  foreign key
   ( "PARENT_ID" )
  references "WLCS_CATEGORY"
   ( "CATEGORY_ID" )
  on delete cascade
  enable;

Alter table "WLCS_COUNTRY"
  add constraint "FK1_CNTRY_CRNCY"
  foreign key
   ( "CURRENCY_ID" )
  references "WLCS_CURRENCY"
  enable;

Alter table "WLCS_CREDIT_CARD"
  add constraint "CUSTOMER_CREDIT_CARD_FK"
  foreign key
   ( "CUSTOMER_ID" )
  references "WLCS_CUSTOMER"
  on delete cascade
  enable;

Alter table "WLCS_DOCUMENT_METADATA"
  add constraint "WLCS_DOCUMENT_METADATA_FK"
  foreign key
   ( "ID" )
  references "WLCS_DOCUMENT"
  on delete cascade
  enable;

Alter table "WLCS_ORDER_LINE"
  add constraint "ORDER_FK"
  foreign key
   ( "ORDER_ID" )
  references "WLCS_ORDER"
  on delete cascade
  enable;

Alter table "WLCS_PRODUCT_CATEGORY"
  add foreign key
   ( "CATEGORY_ID" )
  references "WLCS_CATEGORY"
  on delete cascade
  enable;

Alter table "WLCS_PRODUCT_CATEGORY"
  add foreign key
   ( "SKU" )
  references "WLCS_PRODUCT"
  on delete cascade
  enable;

Alter table "WLCS_PRODUCT_KEYWORD"
  add foreign key
   ( "SKU" )
  references "WLCS_PRODUCT"
  on delete cascade
  enable;

Alter table "WLCS_SHIPPING_ADDRESS"
  add constraint "CUSTOMER_FK"
  foreign key
   ( "CUSTOMER_ID" )
  references "WLCS_CUSTOMER"
  on delete cascade
  enable;

Alter table "WLCS_TRANSACTION_ENTRY"
  add constraint "WLCS_TRANSACTION_FK"
  foreign key
   ( "TRANSACTION_ID" )
  references "WLCS_TRANSACTION"
  on delete cascade
  enable;

Create trigger "SET_A1_PROJECT_ID"
  before insert
  on "A1_PROJECT"
  referencing new as "NEW" old as "OLD"
  for each row
DECLARE
        next_id NUMBER;
    BEGIN
        SELECT a1_project_id_seq.NEXTVAL
        INTO next_id
        FROM dual;
        :new.id := next_id;
    END;
/

Create trigger "UPD_A1_PROJECT_ID"
  before update
  on "A1_PROJECT"
  referencing new as "NEW" old as "OLD"
  for each row
BEGIN
        RAISE_APPLICATION_ERROR ( - 20000,
            'UPD_A1_PROJECT_ID Trigger: Updates of the ID are not allowed.');
    END;
/

Create trigger "SET_ACV_CLTN"
  before insert
  on "ACV_CLTN"
  referencing new as "NEW" old as "OLD"
  for each row
DECLARE
        next_cltn_id NUMBER;
    BEGIN
        SELECT acv_cltn_seq.NEXTVAL
        INTO next_cltn_id
        FROM dual;
        :new.cltn_id := next_cltn_id;
    END;
/

Create trigger "UPD_ACV_CLTN"
  before update
  on "ACV_CLTN"
  referencing new as "NEW" old as "OLD"
  for each row
BEGIN
        RAISE_APPLICATION_ERROR ( - 20000,
            'UPD_ACV_CLTN Trigger: Updates of the cltn_id are not allowed.');
    END;
/

Create trigger "SET_ACV_PROPS"
  before insert
  on "ACV_PROPS"
  referencing new as "NEW" old as "OLD"
  for each row
DECLARE
        next_props_id NUMBER;
    BEGIN
        SELECT acv_props_seq.NEXTVAL
        INTO next_props_id
        FROM dual;
        :new.props_id := next_props_id;
    END;
/

Create trigger "UPD_ACV_PROPS1"
  before update
  on "ACV_PROPS"
  referencing new as "NEW" old as "OLD"
  for each row
BEGIN
        RAISE_APPLICATION_ERROR ( - 20000,
            'UPD_ACV_PROPS1 Trigger: Updates of the props_id are not allowed.');
    END;
/

Create trigger "UPD_ACV_PROPS2"
  before update
  on "ACV_PROPS"
  referencing new as "NEW" old as "OLD"
  for each row
BEGIN
        RAISE_APPLICATION_ERROR ( - 20000,
            'UPD_ACV_PROPS2 Trigger: Updates of the props_cltn_id are not allowed.');
    END;
/

Create trigger "SET_CALENDAR_EVENT_ID"
  before insert
  on "CALENDAR_EVENT"
  referencing new as "NEW" old as "OLD"
  for each row
DECLARE
        next_event_id NUMBER;
    BEGIN
        SELECT calendar_event_seq.NEXTVAL
        INTO next_event_id
        FROM dual;
        :new.event_id := next_event_id;
        :new.create_on := to_char(sysdate,'yyyymmddhh24miss');
    END;
/

Create trigger "UPD_CALENDAR_EVENT_ID"
  before update
  on "CALENDAR_EVENT"
  referencing new as "NEW" old as "OLD"
  for each row
BEGIN
        RAISE_APPLICATION_ERROR ( - 20000,
            'UPD_CALENDAR_EVENT_ID Trigger: Updates of the EVENT_ID are not allowed.');
    END;
/

Create trigger "SET_CALENDAR_ITEM_ID"
  before insert
  on "CALENDAR_ITEM"
  referencing new as "NEW" old as "OLD"
  for each row
DECLARE
          next_calendar_item_id NUMBER;
      BEGIN
          SELECT calendar_item_seq.NEXTVAL
          INTO next_calendar_item_id
          FROM dual;
          :new.calendar_item_id := next_calendar_item_id;
      END
/

Create trigger "UPD_CALENDAR_ITEM_ID"
  before update
  on "CALENDAR_ITEM"
  referencing new as "NEW" old as "OLD"
  for each row
BEGIN
          RAISE_APPLICATION_ERROR ( - 20000,
              'UPD_CALENDAR_ITEM_ID Trigger: Updates of the CALENDAR_ITEM_ID are not allowed.');
      END
/

Create trigger "SET_EVENT_LOG_ID"
  before insert
  on "EVENT_LOG"
  referencing new as "NEW" old as "OLD"
  for each row
DECLARE
        next_event_log_id NUMBER;
    BEGIN
        SELECT event_log_seq.NEXTVAL
        INTO next_event_log_id
        FROM dual;
        :new.event_log_id := next_event_log_id;
        :new.create_on := to_char(sysdate,'yyyymmddhh24miss');
    END;
/

Create trigger "UPD_EVENT_LOG_ID"
  before update
  on "EVENT_LOG"
  referencing new as "NEW" old as "OLD"
  for each row
BEGIN
        RAISE_APPLICATION_ERROR ( - 20000,
            'UPD_EVENT_LOG_ID Trigger: Updates of the EVENT_LOG_ID are not allowed.');
    END;
/

Create trigger "SET_GUEST_BOOK_ENTRY_ID"
  before insert
  on "GUEST_BOOK_ENTRY"
  referencing new as "NEW" old as "OLD"
  for each row
DECLARE
        next_guest_book_entry_id NUMBER;
    BEGIN
        SELECT guest_book_entry_seq.NEXTVAL
        INTO next_guest_book_entry_id
        FROM dual;
        :new.guest_book_entry_id := next_guest_book_entry_id;
    END;
/

Create trigger "UPD_GUEST_BOOK_ENTRY_ID"
  before update
  on "GUEST_BOOK_ENTRY"
  referencing new as "NEW" old as "OLD"
  for each row
BEGIN
        RAISE_APPLICATION_ERROR ( - 20000,
            'UPD_guest_book_entry_ID Trigger: Updates of the guest_book_entry_ID are not allowed.');
    END;
/

Create trigger "SET_MAIL_LIST_ITEM_ID"
  before insert
  on "MAIL_LIST_ITEM"
  referencing new as "NEW" old as "OLD"
  for each row
DECLARE
        next_mail_list_item_id NUMBER;
    BEGIN
        SELECT mail_list_item_seq.NEXTVAL
        INTO next_mail_list_item_id
        FROM dual;
        :new.mail_list_item_id := next_mail_list_item_id;
    END;
/

Create trigger "UPD_MAIL_LIST_ITEM_ID"
  before update
  on "MAIL_LIST_ITEM"
  referencing new as "NEW" old as "OLD"
  for each row
BEGIN
        RAISE_APPLICATION_ERROR ( - 20000,
            'UPD_mail_list_item_ID Trigger: Updates of the mail_list_item_ID are not allowed.');
    END;
/

Create trigger "SET_POST_ID"
  before insert
  on "POST"
  referencing new as "NEW" old as "OLD"
  for each row
DECLARE
        next_post_id NUMBER;
    BEGIN
        IF :new.post_id IS NULL THEN
            :new.post_id := get_post_id;
        END IF;
        :new.create_on := to_char(sysdate,'yyyymmddhh24miss');
    END;
/

Create trigger "UPD_POST_ID"
  before update
  on "POST"
  referencing new as "NEW" old as "OLD"
  for each row
BEGIN
        RAISE_APPLICATION_ERROR ( - 20000,
            'UPD_posts_id Trigger: Updates of the post_id are not allowed.');
    END;
/

Create trigger "SET_POST_CFG_ID"
  before insert
  on "POST_CFG"
  referencing new as "NEW" old as "OLD"
  for each row
DECLARE
        next_post_cfg_id NUMBER;
    BEGIN
        IF :new.post_cfg_id IS NULL THEN
            :new.post_cfg_id := get_post_cfg_id;
        END IF;
    END;
/

Create trigger "UPD_POST_CFG_ID"
  before update
  on "POST_CFG"
  referencing new as "NEW" old as "OLD"
  for each row
BEGIN
        RAISE_APPLICATION_ERROR ( - 20000,
            'UPD_posts_cfg_id Trigger: Updates of the post_cfg_id are not allowed.');
    END;
/

Create trigger "SET_POST_TITLE_ID"
  before insert
  on "POST_TITLE"
  referencing new as "NEW" old as "OLD"
  for each row
DECLARE
        next_post_title_id NUMBER;
    BEGIN
        IF :new.post_title_id IS NULL THEN
            :new.post_title_id := get_post_title_id;
        END IF;
        :new.create_on := to_char(sysdate,'yyyymmddhh24miss');
    END;
/

Create trigger "UPD_POST_TITLE_ID"
  before update
  on "POST_TITLE"
  referencing new as "NEW" old as "OLD"
  for each row
BEGIN
        RAISE_APPLICATION_ERROR ( - 20000,
            'UPD_post_title_id Trigger: Updates of the post_title_id are not allowed.');
    END;
/

Create trigger "SET_USER_LOGIN_ID"
  before insert
  on "USER_LOGIN"
  referencing new as "NEW" old as "OLD"
  for each row
DECLARE
        next_user_login_id NUMBER;
    BEGIN
        SELECT user_login_seq.NEXTVAL
        INTO next_user_login_id
        FROM dual;
        :new.user_login_id := next_user_login_id;
    END;
/

Create trigger "UPD_USER_LOGIN_ID"
  before update
  on "USER_LOGIN"
  referencing new as "NEW" old as "OLD"
  for each row
BEGIN
        RAISE_APPLICATION_ERROR ( - 20000,
            'UPD_user_login_id Trigger: Updates of the user_login_id are not allowed.');
    END;
/


REMARK  #### END OF GENERATED DDL ####
