REMARK  ----------------------------------------------------------------------
REMARK  DDL generated by TOYS (version 1.0.17.0).
REMARK  Copyright (c) Impact Systems Pty. Ltd., 2002, 2003
REMARK  http://www.impacttoys.com/
REMARK  ----------------------------------------------------------------------
REMARK
REMARK    Database Name: ASDC
REMARK      Server Type: ORACLE
REMARK          Version: 8.1.6.0.0
REMARK     Extracted by: ASDC@ASDC
REMARK     Extract date: 2003-12-16 14:55:32 -05:00
REMARK    Creation date: 2003-12-16 15:00:31 -05:00
REMARK    Compatibility: Oracle 8i (8.1)
REMARK


SET escape \
SET escape OFF
SET define '&'
SET define OFF
SET concat .
SET concat ON
SET sqlblanklines ON


SET define ON
CONNECT ASDC/&&ASDC_PWD.&&AT_DSN.
SET define OFF

Create unique index "A1_PROJECT_PK" on "A1_PROJECT"
  ( "ID",
    "VERSION" )
  logging;

Create unique index "A1_PROJECT_IDX1" on "A1_PROJECT"
  ( "NAME" )
  logging;

Alter table "A1_PROJECT"
  add constraint "A1_PROJECT_PK"
  primary key ( "ID", "VERSION" )
  using index
  enable;

Alter table "A1_PROJECT"
  add constraint "A1_PROJECT_IDX1"
  unique ( "NAME" )
  using index
  enable;

Create unique index "ACV_CLTN_PK" on "ACV_CLTN"
  ( "CLTN_ID" )
  logging;

Alter table "ACV_CLTN"
  add constraint "ACV_CLTN_PK"
  primary key ( "CLTN_ID" )
  using index
  enable;

Create unique index "ACV_PROPS_PK" on "ACV_PROPS"
  ( "PROPS_ID" )
  logging;

Alter table "ACV_PROPS"
  add constraint "ACV_PROPS_PK"
  primary key ( "PROPS_ID" )
  using index
  enable;

Create unique index "ACV_VALUE_PK" on "ACV_VALUE"
  ( "VALUE_PROPS_ID",
    "VALUE_SEQ" )
  logging;

Alter table "ACV_VALUE"
  add constraint "ACV_VALUE_PK"
  primary key ( "VALUE_PROPS_ID", "VALUE_SEQ" )
  using index
  enable;

Create unique index "CALENDAR_EVENT_PK" on "CALENDAR_EVENT"
  ( "EVENT_ID" )
  logging;

Alter table "CALENDAR_EVENT"
  add constraint "CALENDAR_EVENT_PK"
  primary key ( "EVENT_ID" )
  using index
  enable;

Create unique index "CALENDAR_ITEM_PK" on "CALENDAR_ITEM"
  ( "CALENDAR_ITEM_ID" )
  logging;

Alter table "CALENDAR_ITEM"
  add constraint "CALENDAR_ITEM_PK"
  primary key ( "CALENDAR_ITEM_ID" )
  using index
  enable;

Create unique index "EVENT_LOG_PK" on "EVENT_LOG"
  ( "EVENT_LOG_ID" )
  logging;

Alter table "EVENT_LOG"
  add constraint "EVENT_LOG_PK"
  primary key ( "EVENT_LOG_ID" )
  using index
  enable;

Create unique index "GROUP_CFG_PK" on "GROUP_CFG"
  ( "GROUP_NAME" )
  logging;

Alter table "GROUP_CFG"
  add constraint "GROUP_CFG_PK"
  primary key ( "GROUP_NAME" )
  using index
  enable;

Create unique index "GUEST_BOOK_ENTRY_PK" on "GUEST_BOOK_ENTRY"
  ( "GUEST_BOOK_ENTRY_ID" )
  logging;

Alter table "GUEST_BOOK_ENTRY"
  add constraint "GUEST_BOOK_ENTRY_PK"
  primary key ( "GUEST_BOOK_ENTRY_ID" )
  using index
  enable;

Alter table "JIVEFILTER"
  add primary key ( "FORUMID", "FILTERINDEX" )
  using index
  enable;

Create index "FILTERINDEXIDX" on "JIVEFILTER"
  ( "FILTERINDEX" )
  logging;

Alter table "JIVEFORUM"
  add primary key ( "FORUMID" )
  using index
  enable;

Alter table "JIVEFORUMPROP"
  add primary key ( "FORUMID", "NAME" )
  using index
  enable;

Alter table "JIVEGROUP"
  add primary key ( "GROUPID" )
  using index
  enable;

Alter table "JIVEGROUPPERM"
  add primary key ( "FORUMID", "GROUPID", "PERMISSION" )
  using index
  enable;

Create index "GROUPGROUPIDX" on "JIVEGROUPPERM"
  ( "GROUPID" )
  logging;

Alter table "JIVEGROUPUSER"
  add primary key ( "GROUPID", "USERID" )
  using index
  enable;

Create index "GROUPIDX" on "JIVEGROUPUSER"
  ( "USERID" )
  logging;

Alter table "JIVEMESSAGE"
  add primary key ( "MESSAGEID" )
  using index
  enable;

Create index "MESSAGEAPPROVEDIDX" on "JIVEMESSAGE"
  ( "APPROVED" )
  logging;

Create index "MESSAGETHREADIDIDX" on "JIVEMESSAGE"
  ( "THREADID" )
  logging;

Alter table "JIVEMESSAGEPROP"
  add primary key ( "MESSAGEID", "NAME" )
  using index
  enable;

Alter table "JIVEMESSAGETREE"
  add primary key ( "PARENTID", "CHILDID" )
  using index
  enable;

Create index "CHILDIDX" on "JIVEMESSAGETREE"
  ( "CHILDID" )
  logging;

Alter table "JIVETHREAD"
  add primary key ( "THREADID" )
  using index
  enable;

Alter table "JIVEUSER"
  add primary key ( "USERID" )
  using index
  enable;

Alter table "JIVEUSERPERM"
  add primary key ( "FORUMID", "USERID", "PERMISSION" )
  using index
  enable;

Create index "USERUSERIDX" on "JIVEUSERPERM"
  ( "USERID" )
  logging;

Alter table "JIVEUSERPROP"
  add primary key ( "USERID", "NAME" )
  using index
  enable;

Create unique index "MAIL_LIST_ITEM_PK" on "MAIL_LIST_ITEM"
  ( "MAIL_LIST_ITEM_ID" )
  logging;

Create unique index "EMAIL_IDX" on "MAIL_LIST_ITEM"
  ( "GROUP_CODE",
    "EMAIL" )
  logging;

Alter table "MAIL_LIST_ITEM"
  add constraint "MAIL_LIST_ITEM_PK"
  primary key ( "MAIL_LIST_ITEM_ID" )
  using index
  enable;

Alter table "MAIL_LIST_ITEM"
  add constraint "EMAIL_IDX"
  unique ( "GROUP_CODE", "EMAIL" )
  using index
  enable;

Create unique index "POST_PK" on "POST"
  ( "POST_ID" )
  logging;

Alter table "POST"
  add constraint "POST_PK"
  primary key ( "POST_ID" )
  using index
  enable;

Create unique index "POST_CFG_PK" on "POST_CFG"
  ( "POST_CFG_ID" )
  logging;

Alter table "POST_CFG"
  add constraint "POST_CFG_PK"
  primary key ( "POST_CFG_ID" )
  using index
  enable;

Create unique index "POST_TITLE_PK" on "POST_TITLE"
  ( "POST_TITLE_ID" )
  logging;

Alter table "POST_TITLE"
  add constraint "POST_TITLE_PK"
  primary key ( "POST_TITLE_ID" )
  using index
  enable;

Create unique index "ROLES_PK" on "ROLES"
  ( "ROLE_NAME" )
  logging;

Alter table "ROLES"
  add constraint "ROLES_PK"
  primary key ( "ROLE_NAME" )
  using index
  enable;

Create unique index "USERS_PK" on "USERS"
  ( "USER_NAME" )
  logging;

Alter table "USERS"
  add constraint "USERS_PK"
  primary key ( "USER_NAME" )
  using index
  enable;

Create unique index "USERS_ROLES_PK" on "USERS_ROLES"
  ( "USER_NAME",
    "ROLE_NAME" )
  logging;

Alter table "USERS_ROLES"
  add constraint "USERS_ROLES_PK"
  primary key ( "USER_NAME", "ROLE_NAME" )
  using index
  enable;

Create unique index "USER_ACL_PK" on "USER_ACL"
  ( "GROUP_NAME",
    "RESOURCE_TYPE",
    "RESOURCE_ID",
    "USER_LOGIN_ID" )
  logging;

Alter table "USER_ACL"
  add constraint "USER_ACL_PK"
  primary key ( "GROUP_NAME", "RESOURCE_TYPE", "RESOURCE_ID", "USER_LOGIN_ID" )
  using index
  enable;

Create unique index "USER_LOGIN_PK" on "USER_LOGIN"
  ( "USER_LOGIN_ID" )
  logging;

Create unique index "NAME_IDX" on "USER_LOGIN"
  ( "GROUP_CODE",
    "LOGIN_NAME" )
  logging;

Alter table "USER_LOGIN"
  add constraint "USER_LOGIN_PK"
  primary key ( "USER_LOGIN_ID" )
  using index
  enable;

Alter table "USER_LOGIN"
  add constraint "NAME_IDX"
  unique ( "GROUP_CODE", "LOGIN_NAME" )
  using index
  enable;

Alter table "WLCS_BOOKMARKS"
  add primary key ( "NAME", "OWNER" )
  using index
  enable;

Alter table "WLCS_CATEGORIES"
  add primary key ( "NID" )
  using index
  enable;

Alter table "WLCS_CATEGORIES"
  add unique ( "PORTAL_NID", "NAME" )
  using index
  enable;

Alter table "WLCS_CATEGORY"
  add primary key ( "CATEGORY_ID" )
  using index
  enable;

Create index "XAK1WLCS_CATEGORY" on "WLCS_CATEGORY"
  ( "PARENT_ID" )
  logging;

Create unique index "PK_CAT_ENTITY" on "WLCS_CAT_ENTITY_ID"
  ( "JNDI_HOME_NAME",
    "PK_STRING" )
  logging;

Alter table "WLCS_CAT_ENTITY_ID"
  add constraint "PK_CAT_ENTITY"
  primary key ( "JNDI_HOME_NAME", "PK_STRING" )
  using index
  enable;

Create index "WLCS_CAT_PROP_BOOLEAN_IDX" on "WLCS_CAT_PROP_BOOLEAN"
  ( "PROPERTY_ID" )
  logging;

Create index "WLCS_CAT_PROP_DATETIME_IDX" on "WLCS_CAT_PROP_DATETIME"
  ( "PROPERTY_ID" )
  logging;

Create index "WLCS_CAT_PROP_FLOAT_IDX" on "WLCS_CAT_PROP_FLOAT"
  ( "PROPERTY_ID" )
  logging;

Create index "WLCS_CAT_PROP_ID_IDX1" on "WLCS_CAT_PROP_ID"
  ( "SCOPE_NAME",
    "PROPERTY_NAME" )
  logging;

Create index "WLCS_CAT_PROP_ID_IDX2" on "WLCS_CAT_PROP_ID"
  ( "ENTITY_ID",
    "SCOPE_NAME",
    "PROPERTY_NAME" )
  logging;

Create index "WLCS_CAT_PROP_INTEGER_IDX" on "WLCS_CAT_PROP_INTEGER"
  ( "PROPERTY_ID" )
  logging;

Create index "WLCS_CAT_PROP_TEXT_IDX" on "WLCS_CAT_PROP_TEXT"
  ( "PROPERTY_ID" )
  logging;

Create index "WLCS_CAT_PROP_USER_DEFINED_IDX" on "WLCS_CAT_PROP_USER_DEFINED"
  ( "PROPERTY_ID" )
  logging;

Alter table "WLCS_COLUMN_INFORMATION"
  add primary key ( "PORTAL_NID", "CATEGORY_NID", "COLUMN_ORDER" )
  using index
  enable;

Create unique index "PK_COUNTRY" on "WLCS_COUNTRY"
  ( "COUNTRY_ID" )
  logging;

Create unique index "AK1_COUNTRY" on "WLCS_COUNTRY"
  ( "COUNTRY_ABBR2" )
  logging;

Alter table "WLCS_COUNTRY"
  add constraint "PK_COUNTRY"
  primary key ( "COUNTRY_ID" )
  using index
  enable;

Alter table "WLCS_COUNTRY"
  add constraint "AK1_COUNTRY"
  unique ( "COUNTRY_ABBR2" )
  using index
  enable;

Alter table "WLCS_CREDIT_CARD"
  add primary key ( "CREDIT_CARD_ID" )
  using index
  enable;

Create unique index "PK_CURRENCY" on "WLCS_CURRENCY"
  ( "CURRENCY_ID" )
  logging;

Create unique index "AK1_CURRENCY" on "WLCS_CURRENCY"
  ( "CURRENCY_ABBR" )
  logging;

Alter table "WLCS_CURRENCY"
  add constraint "PK_CURRENCY"
  primary key ( "CURRENCY_ID" )
  using index
  enable;

Alter table "WLCS_CURRENCY"
  add constraint "AK1_CURRENCY"
  unique ( "CURRENCY_ABBR" )
  using index
  enable;

Alter table "WLCS_CUSTOMER"
  add primary key ( "CUSTOMER_ID" )
  using index
  enable;

Create unique index "PK_DOCUMENT" on "WLCS_DOCUMENT"
  ( "ID" )
  logging;

Alter table "WLCS_DOCUMENT"
  add constraint "PK_DOCUMENT"
  primary key ( "ID" )
  using index
  enable;

Create index "AK1_DOCUMENT" on "WLCS_DOCUMENT"
  ( "DOCUMENT_SIZE" )
  logging;

Create index "AK2_DOCUMENT" on "WLCS_DOCUMENT"
  ( "MIME_TYPE" )
  logging;

Create index "AK3_DOCUMENT" on "WLCS_DOCUMENT"
  ( "MODIFIED_DATE" )
  logging;

Create unique index "PK_DOCUMENT_MD" on "WLCS_DOCUMENT_METADATA"
  ( "ID",
    "NAME" )
  logging;

Alter table "WLCS_DOCUMENT_METADATA"
  add constraint "PK_DOCUMENT_MD"
  primary key ( "ID", "NAME" )
  using index
  enable;

Create index "AK1_DOCUMENT_MD" on "WLCS_DOCUMENT_METADATA"
  ( "ID" )
  logging;

Create index "AK2_DOCUMENT_MD" on "WLCS_DOCUMENT_METADATA"
  ( "NAME" )
  logging;

Create index "AK3_DOCUMENT_MD" on "WLCS_DOCUMENT_METADATA"
  ( "STATE" )
  logging;

Create unique index "ENTITY_ID_INDEX" on "WLCS_ENTITY_ID"
  ( "JNDI_HOME_NAME",
    "PK_STRING" )
  logging;

Alter table "WLCS_ENTITY_ID"
  add constraint "ENTITY_ID_INDEX"
  primary key ( "JNDI_HOME_NAME", "PK_STRING" )
  using index
  enable;

Create unique index "WLCS_GROUP_INDEX" on "WLCS_GROUP"
  ( "IDENTIFIER" )
  logging;

Alter table "WLCS_GROUP"
  add constraint "WLCS_GROUP_INDEX"
  primary key ( "IDENTIFIER" )
  using index
  enable;

Create index "GROUP_HIERARCHY_INDEX" on "WLCS_GROUP_HIERARCHY"
  ( "PARENT_ID",
    "CHILD_ID" )
  logging;

Alter table "WLCS_GROUP_PERSONALIZATION"
  add primary key ( "PORTAL_NID", "CATEGORY_NID", "PORTLET_NID", "GROUP_NID" )
  using index
  enable;

Alter table "WLCS_ORDER"
  add primary key ( "ORDER_ID" )
  using index
  enable;

Alter table "WLCS_ORDER_LINE"
  add primary key ( "ORDER_LINE_ID" )
  using index
  enable;

Alter table "WLCS_PORTAL_DEFINITION"
  add primary key ( "NID" )
  using index
  enable;

Alter table "WLCS_PORTAL_DEFINITION"
  add unique ( "NAME" )
  using index
  enable;

Alter table "WLCS_PORTAL_GROUP_HIERARCHY"
  add primary key ( "PORTAL_NID", "GROUP_NID" )
  using index
  enable;

Alter table "WLCS_PORTAL_HIERARCHY"
  add primary key ( "PORTAL_NID", "PORTLET_NID" )
  using index
  enable;

Alter table "WLCS_PORTAL_PERSONALIZATION"
  add primary key ( "PORTAL_NID", "CATEGORY_NID", "PORTLET_NID" )
  using index
  enable;

Alter table "WLCS_PORTLET_DEFINITION"
  add primary key ( "NID" )
  using index
  enable;

Alter table "WLCS_PORTLET_DEFINITION"
  add unique ( "NAME" )
  using index
  enable;

Alter table "WLCS_PRODUCT"
  add primary key ( "SKU" )
  using index
  enable;

Alter table "WLCS_PRODUCT_CATEGORY"
  add primary key ( "SKU", "CATEGORY_ID" )
  using index
  enable;

Create index "XAK1WLCS_PRODUCT_CATEGORY" on "WLCS_PRODUCT_CATEGORY"
  ( "CATEGORY_ID" )
  logging;

Alter table "WLCS_PRODUCT_KEYWORD"
  add primary key ( "KEYWORD", "SKU" )
  using index
  enable;

Create index "XAK1WLCS_PRODUCT_KEYWORD" on "WLCS_PRODUCT_KEYWORD"
  ( "SKU" )
  logging;

Create index "PROPERTY_BOOLEAN_INDEX" on "WLCS_PROP_BOOLEAN"
  ( "PROPERTY_ID" )
  logging;

Create index "PROPERTY_DATETIME_INDEX" on "WLCS_PROP_DATETIME"
  ( "PROPERTY_ID" )
  logging;

Create index "PROPERTY_FLOAT_INDEX" on "WLCS_PROP_FLOAT"
  ( "PROPERTY_ID" )
  logging;

Create index "WLCS_PROP_ID_IDX1" on "WLCS_PROP_ID"
  ( "SCOPE_NAME",
    "PROPERTY_NAME" )
  logging;

Create index "WLCS_PROP_ID_IDX2" on "WLCS_PROP_ID"
  ( "ENTITY_ID",
    "SCOPE_NAME",
    "PROPERTY_NAME" )
  logging;

Create index "PROPERTY_INTEGER_INDEX" on "WLCS_PROP_INTEGER"
  ( "PROPERTY_ID" )
  logging;

Create unique index "PROP_MD_INDEX" on "WLCS_PROP_MD"
  ( "SCHEMA_ID",
    "PROPERTY_NAME" )
  logging;

Alter table "WLCS_PROP_MD"
  add constraint "PROP_MD_INDEX"
  primary key ( "SCHEMA_ID", "PROPERTY_NAME" )
  using index
  enable;

Create index "PROP_MD_ID_INDEX" on "WLCS_PROP_MD"
  ( "PROPERTY_META_DATA_ID" )
  logging;

Create index "PROP_MD_BOOLEAN_INDEX" on "WLCS_PROP_MD_BOOLEAN"
  ( "PROPERTY_META_DATA_ID" )
  logging;

Create index "PROP_MD_DATETIME_INDEX" on "WLCS_PROP_MD_DATETIME"
  ( "PROPERTY_META_DATA_ID" )
  logging;

Create index "PROP_MD_FLOAT_INDEX" on "WLCS_PROP_MD_FLOAT"
  ( "PROPERTY_META_DATA_ID" )
  logging;

Create index "PROP_MD_INTEGER_INDEX" on "WLCS_PROP_MD_INTEGER"
  ( "PROPERTY_META_DATA_ID" )
  logging;

Create index "PROP_MD_TEXT_INDEX" on "WLCS_PROP_MD_TEXT"
  ( "PROPERTY_META_DATA_ID" )
  logging;

Create index "PROP_MD_USER_DEFINED_INDEX" on "WLCS_PROP_MD_USER_DEFINED"
  ( "PROPERTY_META_DATA_ID" )
  logging;

Create index "PROPERTY_TEXT_INDEX" on "WLCS_PROP_TEXT"
  ( "PROPERTY_ID" )
  logging;

Create index "PROPERTY_USER_DEFINED_INDEX" on "WLCS_PROP_USER_DEFINED"
  ( "PROPERTY_ID" )
  logging;

Alter table "WLCS_RULESET_DEFINITION"
  add primary key ( "NAME" )
  using index
  enable;

Create unique index "SCHEMA_INDEX" on "WLCS_SCHEMA"
  ( "SCHEMA_GROUP_NAME",
    "SCOPE_NAME" )
  logging;

Alter table "WLCS_SCHEMA"
  add constraint "SCHEMA_INDEX"
  primary key ( "SCHEMA_GROUP_NAME", "SCOPE_NAME" )
  using index
  enable;

Alter table "WLCS_SHIPPING_ADDRESS"
  add primary key ( "SHIPPING_ADDRESS_ID" )
  using index
  enable;

Alter table "WLCS_SHIPPING_METHOD"
  add primary key ( "PK_IDENTIFIER" )
  using index
  enable;

Alter table "WLCS_TODO"
  add primary key ( "ITEM", "OWNER" )
  using index
  enable;

Alter table "WLCS_TRANSACTION"
  add primary key ( "TRANSACTION_ID" )
  using index
  enable;

Alter table "WLCS_TRANSACTION_ENTRY"
  add primary key ( "TRANSACTION_ENTRY_ID" )
  using index
  enable;

Alter table "WLCS_UIDS"
  add primary key ( "SID" )
  using index
  enable;

Create unique index "WLCS_USER_INDEX" on "WLCS_USER"
  ( "IDENTIFIER" )
  logging;

Alter table "WLCS_USER"
  add constraint "WLCS_USER_INDEX"
  primary key ( "IDENTIFIER" )
  using index
  enable;

Create unique index "WLCS_USER_GROUP_CACHE_INDEX" on "WLCS_USER_GROUP_CACHE"
  ( "USER_NAME",
    "GROUP_NAME" )
  logging;

Alter table "WLCS_USER_GROUP_CACHE"
  add constraint "WLCS_USER_GROUP_CACHE_INDEX"
  primary key ( "USER_NAME", "GROUP_NAME" )
  using index
  enable;

Create index "USER_GROUP_HIERARCHY_INDEX" on "WLCS_USER_GROUP_HIERARCHY"
  ( "USER_ID",
    "GROUP_ID" )
  logging;

Alter table "WLCS_USER_PERSONALIZATION"
  add primary key
    ( "PORTAL_NID",
      "CATEGORY_NID",
      "GROUP_NID",
      "USER_NID",
      "PORTLET_NID" )
  using index
  enable;

Alter table "USERS_ROLES"
  add constraint "ROLE_NAME_FK"
  foreign key
   ( "ROLE_NAME" )
  references "ROLES"
  enable;

Alter table "USERS_ROLES"
  add constraint "USER_NAME_FK"
  foreign key
   ( "USER_NAME" )
  references "USERS"
  enable;

Alter table "WLCS_CATEGORY"
  add constraint "FK1_CATEGORY_PARENT"
  foreign key
   ( "PARENT_ID" )
  references "WLCS_CATEGORY"
   ( "CATEGORY_ID" )
  on delete cascade
  enable;

Alter table "WLCS_COUNTRY"
  add constraint "FK1_CNTRY_CRNCY"
  foreign key
   ( "CURRENCY_ID" )
  references "WLCS_CURRENCY"
  enable;

Alter table "WLCS_CREDIT_CARD"
  add constraint "CUSTOMER_CREDIT_CARD_FK"
  foreign key
   ( "CUSTOMER_ID" )
  references "WLCS_CUSTOMER"
  on delete cascade
  enable;

Alter table "WLCS_DOCUMENT_METADATA"
  add constraint "WLCS_DOCUMENT_METADATA_FK"
  foreign key
   ( "ID" )
  references "WLCS_DOCUMENT"
  on delete cascade
  enable;

Alter table "WLCS_ORDER_LINE"
  add constraint "ORDER_FK"
  foreign key
   ( "ORDER_ID" )
  references "WLCS_ORDER"
  on delete cascade
  enable;

Alter table "WLCS_PRODUCT_CATEGORY"
  add foreign key
   ( "CATEGORY_ID" )
  references "WLCS_CATEGORY"
  on delete cascade
  enable;

Alter table "WLCS_PRODUCT_CATEGORY"
  add foreign key
   ( "SKU" )
  references "WLCS_PRODUCT"
  on delete cascade
  enable;

Alter table "WLCS_PRODUCT_KEYWORD"
  add foreign key
   ( "SKU" )
  references "WLCS_PRODUCT"
  on delete cascade
  enable;

Alter table "WLCS_SHIPPING_ADDRESS"
  add constraint "CUSTOMER_FK"
  foreign key
   ( "CUSTOMER_ID" )
  references "WLCS_CUSTOMER"
  on delete cascade
  enable;

Alter table "WLCS_TRANSACTION_ENTRY"
  add constraint "WLCS_TRANSACTION_FK"
  foreign key
   ( "TRANSACTION_ID" )
  references "WLCS_TRANSACTION"
  on delete cascade
  enable;

Create trigger "SET_A1_PROJECT_ID"
  before insert
  on "A1_PROJECT"
  referencing new as "NEW" old as "OLD"
  for each row
DECLARE
        next_id NUMBER;
    BEGIN
        SELECT a1_project_id_seq.NEXTVAL
        INTO next_id
        FROM dual;
        :new.id := next_id;
    END;
/

Create trigger "UPD_A1_PROJECT_ID"
  before update
  on "A1_PROJECT"
  referencing new as "NEW" old as "OLD"
  for each row
BEGIN
        RAISE_APPLICATION_ERROR ( - 20000,
            'UPD_A1_PROJECT_ID Trigger: Updates of the ID are not allowed.');
    END;
/

Create trigger "SET_ACV_CLTN"
  before insert
  on "ACV_CLTN"
  referencing new as "NEW" old as "OLD"
  for each row
DECLARE
        next_cltn_id NUMBER;
    BEGIN
        SELECT acv_cltn_seq.NEXTVAL
        INTO next_cltn_id
        FROM dual;
        :new.cltn_id := next_cltn_id;
    END;
/

Create trigger "UPD_ACV_CLTN"
  before update
  on "ACV_CLTN"
  referencing new as "NEW" old as "OLD"
  for each row
BEGIN
        RAISE_APPLICATION_ERROR ( - 20000,
            'UPD_ACV_CLTN Trigger: Updates of the cltn_id are not allowed.');
    END;
/

Create trigger "SET_ACV_PROPS"
  before insert
  on "ACV_PROPS"
  referencing new as "NEW" old as "OLD"
  for each row
DECLARE
        next_props_id NUMBER;
    BEGIN
        SELECT acv_props_seq.NEXTVAL
        INTO next_props_id
        FROM dual;
        :new.props_id := next_props_id;
    END;
/

Create trigger "UPD_ACV_PROPS1"
  before update
  on "ACV_PROPS"
  referencing new as "NEW" old as "OLD"
  for each row
BEGIN
        RAISE_APPLICATION_ERROR ( - 20000,
            'UPD_ACV_PROPS1 Trigger: Updates of the props_id are not allowed.');
    END;
/

Create trigger "UPD_ACV_PROPS2"
  before update
  on "ACV_PROPS"
  referencing new as "NEW" old as "OLD"
  for each row
BEGIN
        RAISE_APPLICATION_ERROR ( - 20000,
            'UPD_ACV_PROPS2 Trigger: Updates of the props_cltn_id are not allowed.');
    END;
/

Create trigger "SET_CALENDAR_EVENT_ID"
  before insert
  on "CALENDAR_EVENT"
  referencing new as "NEW" old as "OLD"
  for each row
DECLARE
        next_event_id NUMBER;
    BEGIN
        SELECT calendar_event_seq.NEXTVAL
        INTO next_event_id
        FROM dual;
        :new.event_id := next_event_id;
        :new.create_on := to_char(sysdate,'yyyymmddhh24miss');
    END;
/

Create trigger "UPD_CALENDAR_EVENT_ID"
  before update
  on "CALENDAR_EVENT"
  referencing new as "NEW" old as "OLD"
  for each row
BEGIN
        RAISE_APPLICATION_ERROR ( - 20000,
            'UPD_CALENDAR_EVENT_ID Trigger: Updates of the EVENT_ID are not allowed.');
    END;
/

Create trigger "SET_CALENDAR_ITEM_ID"
  before insert
  on "CALENDAR_ITEM"
  referencing new as "NEW" old as "OLD"
  for each row
DECLARE
          next_calendar_item_id NUMBER;
      BEGIN
          SELECT calendar_item_seq.NEXTVAL
          INTO next_calendar_item_id
          FROM dual;
          :new.calendar_item_id := next_calendar_item_id;
      END
/

Create trigger "UPD_CALENDAR_ITEM_ID"
  before update
  on "CALENDAR_ITEM"
  referencing new as "NEW" old as "OLD"
  for each row
BEGIN
          RAISE_APPLICATION_ERROR ( - 20000,
              'UPD_CALENDAR_ITEM_ID Trigger: Updates of the CALENDAR_ITEM_ID are not allowed.');
      END
/

Create trigger "SET_EVENT_LOG_ID"
  before insert
  on "EVENT_LOG"
  referencing new as "NEW" old as "OLD"
  for each row
DECLARE
        next_event_log_id NUMBER;
    BEGIN
        SELECT event_log_seq.NEXTVAL
        INTO next_event_log_id
        FROM dual;
        :new.event_log_id := next_event_log_id;
        :new.create_on := to_char(sysdate,'yyyymmddhh24miss');
    END;
/

Create trigger "UPD_EVENT_LOG_ID"
  before update
  on "EVENT_LOG"
  referencing new as "NEW" old as "OLD"
  for each row
BEGIN
        RAISE_APPLICATION_ERROR ( - 20000,
            'UPD_EVENT_LOG_ID Trigger: Updates of the EVENT_LOG_ID are not allowed.');
    END;
/

Create trigger "SET_GUEST_BOOK_ENTRY_ID"
  before insert
  on "GUEST_BOOK_ENTRY"
  referencing new as "NEW" old as "OLD"
  for each row
DECLARE
        next_guest_book_entry_id NUMBER;
    BEGIN
        SELECT guest_book_entry_seq.NEXTVAL
        INTO next_guest_book_entry_id
        FROM dual;
        :new.guest_book_entry_id := next_guest_book_entry_id;
    END;
/

Create trigger "UPD_GUEST_BOOK_ENTRY_ID"
  before update
  on "GUEST_BOOK_ENTRY"
  referencing new as "NEW" old as "OLD"
  for each row
BEGIN
        RAISE_APPLICATION_ERROR ( - 20000,
            'UPD_guest_book_entry_ID Trigger: Updates of the guest_book_entry_ID are not allowed.');
    END;
/

Create trigger "SET_MAIL_LIST_ITEM_ID"
  before insert
  on "MAIL_LIST_ITEM"
  referencing new as "NEW" old as "OLD"
  for each row
DECLARE
        next_mail_list_item_id NUMBER;
    BEGIN
        SELECT mail_list_item_seq.NEXTVAL
        INTO next_mail_list_item_id
        FROM dual;
        :new.mail_list_item_id := next_mail_list_item_id;
    END;
/

Create trigger "UPD_MAIL_LIST_ITEM_ID"
  before update
  on "MAIL_LIST_ITEM"
  referencing new as "NEW" old as "OLD"
  for each row
BEGIN
        RAISE_APPLICATION_ERROR ( - 20000,
            'UPD_mail_list_item_ID Trigger: Updates of the mail_list_item_ID are not allowed.');
    END;
/

Create trigger "SET_POST_ID"
  before insert
  on "POST"
  referencing new as "NEW" old as "OLD"
  for each row
DECLARE
        next_post_id NUMBER;
    BEGIN
        IF :new.post_id IS NULL THEN
            :new.post_id := get_post_id;
        END IF;
        :new.create_on := to_char(sysdate,'yyyymmddhh24miss');
    END;
/

Create trigger "UPD_POST_ID"
  before update
  on "POST"
  referencing new as "NEW" old as "OLD"
  for each row
BEGIN
        RAISE_APPLICATION_ERROR ( - 20000,
            'UPD_posts_id Trigger: Updates of the post_id are not allowed.');
    END;
/

Create trigger "SET_POST_CFG_ID"
  before insert
  on "POST_CFG"
  referencing new as "NEW" old as "OLD"
  for each row
DECLARE
        next_post_cfg_id NUMBER;
    BEGIN
        IF :new.post_cfg_id IS NULL THEN
            :new.post_cfg_id := get_post_cfg_id;
        END IF;
    END;
/

Create trigger "UPD_POST_CFG_ID"
  before update
  on "POST_CFG"
  referencing new as "NEW" old as "OLD"
  for each row
BEGIN
        RAISE_APPLICATION_ERROR ( - 20000,
            'UPD_posts_cfg_id Trigger: Updates of the post_cfg_id are not allowed.');
    END;
/

Create trigger "SET_POST_TITLE_ID"
  before insert
  on "POST_TITLE"
  referencing new as "NEW" old as "OLD"
  for each row
DECLARE
        next_post_title_id NUMBER;
    BEGIN
        IF :new.post_title_id IS NULL THEN
            :new.post_title_id := get_post_title_id;
        END IF;
        :new.create_on := to_char(sysdate,'yyyymmddhh24miss');
    END;
/

Create trigger "UPD_POST_TITLE_ID"
  before update
  on "POST_TITLE"
  referencing new as "NEW" old as "OLD"
  for each row
BEGIN
        RAISE_APPLICATION_ERROR ( - 20000,
            'UPD_post_title_id Trigger: Updates of the post_title_id are not allowed.');
    END;
/

Create trigger "SET_USER_LOGIN_ID"
  before insert
  on "USER_LOGIN"
  referencing new as "NEW" old as "OLD"
  for each row
DECLARE
        next_user_login_id NUMBER;
    BEGIN
        SELECT user_login_seq.NEXTVAL
        INTO next_user_login_id
        FROM dual;
        :new.user_login_id := next_user_login_id;
    END;
/

Create trigger "UPD_USER_LOGIN_ID"
  before update
  on "USER_LOGIN"
  referencing new as "NEW" old as "OLD"
  for each row
BEGIN
        RAISE_APPLICATION_ERROR ( - 20000,
            'UPD_user_login_id Trigger: Updates of the user_login_id are not allowed.');
    END;
/


REMARK  #### END OF GENERATED DDL ####
