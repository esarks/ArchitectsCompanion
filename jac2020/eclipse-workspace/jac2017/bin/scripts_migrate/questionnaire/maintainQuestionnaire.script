<%

  parseXmlPath(<![$jac:path:home]\\temp\\maintainQuestionnaire.xml!>);

  DbConnection lDbConnection = symbolTable.getDbConnection();
  lDbConnection.connect("oracle.jdbc.driver.OracleDriver", "jdbc:oracle:thin:@asdczd:1521:esarks", "system", "manager");

  int lArgNbr;
  CallableStatement lCallableStatement;

  <!maintain:questionnaireFile!>!resetIterator();
  while (<!maintain:questionnaireFile!>!next()) {

    <!questionnaire!>!remove();
    parseXmlPath(<![$jac:path:home]\\temp\\!> + <![maintain:questionnaireFile]!> + ".xml");

    if (<![questionnaire:sequence]!>.compareTo("1") == 0) {
      try {
        lCallableStatement = lDbConnection.getConnection().prepareCall(
          "BEGIN " +
          "INSERT INTO qstn (qstnId, qstnrCode, qstnrSequence) " +
          "VALUES (?,?,?); " +
          "END;" );
        lArgNbr = 1;
        lCallableStatement.setString(lArgNbr++, <![questionnaire:control]!>);
        lCallableStatement.setString(lArgNbr++, <![questionnaire:code]!>);
        lCallableStatement.setString(lArgNbr++, <![questionnaire:questionnaireSequence]!>);
%>
0
<%
        lCallableStatement.execute();
        lCallableStatement.close();
      }
      catch (Exception e)
      {
        System.out.println(e);
      }
    }
    
    try
    {
      lCallableStatement = lDbConnection.getConnection().prepareCall(
          "BEGIN " +
          "INSERT INTO qstnVersion (qstnId, qstnSequence) " +
          "VALUES (?,?); " +
          "END;" );
      lArgNbr = 1;
      lCallableStatement.setString(lArgNbr++, <![questionnaire:control]!>);
      lCallableStatement.setString(lArgNbr++, <![questionnaire:sequence]!>);
%>
1
<%
      lCallableStatement.execute();
      lCallableStatement.close();
    }
    catch (Exception e)
    {
      System.out.println(e);
    }

    <!questionnaire:question!>!resetIterator();
    while (<!questionnaire:question!>!next()) {

      if (<![questionnaire:sequence]!>.compareTo(<![questionnaire:question:sequence]!>) == 0) {

        try {
          lCallableStatement = lDbConnection.getConnection().prepareCall(
            "BEGIN " +
            "UPDATE qstnResponse set qstnResponseSequenceOut = ? WHERE qstnId = ? AND questCode = ? AND questInstance = ? AND responseCode = ? AND qstnResponseSequenceOut is Null; " +
            "END;" );
          lArgNbr = 1;
          lCallableStatement.setString(lArgNbr++, <![questionnaire:sequence]!>);
          lCallableStatement.setString(lArgNbr++, <![questionnaire:control]!>);
          lCallableStatement.setString(lArgNbr++, <![questionnaire:question:code]!>);
          lCallableStatement.setString(lArgNbr++, <![questionnaire:question:instance]!>);
          lCallableStatement.setString(lArgNbr++, <![questionnaire:question:response]!>);
%>
2
<%
          lCallableStatement.execute();
          lCallableStatement.close();
        }
        catch (Exception e) {
          System.out.println(e);
        }

        try {
          lCallableStatement = lDbConnection.getConnection().prepareCall(
            "BEGIN " +
            "INSERT INTO qstnResponse (qstnId,questCode,questInstance,responseCode,qstnResponseSequence,qstnResponseSequenceOut,responseValue) " +
            "VALUES (?,?,?,?,?,?,?); " +
            "END;" );
          lArgNbr = 1;
          lCallableStatement.setString(lArgNbr++, <![questionnaire:control]!>);
          lCallableStatement.setString(lArgNbr++, <![questionnaire:question:code]!>);
          lCallableStatement.setString(lArgNbr++, <![questionnaire:question:instance]!>);
          lCallableStatement.setString(lArgNbr++, <![questionnaire:question:response]!>);
          lCallableStatement.setString(lArgNbr++, <![questionnaire:question:sequence]!>);
          lCallableStatement.setString(lArgNbr++, <![questionnaire:question:sequenceOut]!>);
          lCallableStatement.setString(lArgNbr++, <![questionnaire:question:value]!>);
%>
3
<%
          lCallableStatement.execute();
          lCallableStatement.close();
        }
        catch (Exception e) {
          System.out.println(e);
        }
      } else {
        if (<![questionnaire:sequence]!>.compareTo(<![questionnaire:question:sequenceOut]!>) == 0) {
          try {
            lCallableStatement = lDbConnection.getConnection().prepareCall(
              "BEGIN " +
              "UPDATE qstnResponse set qstnResponseSequenceOut = ? WHERE qstnId = ? AND questCode = ? AND questInstance = ? AND responseCode = ? AND qstnResponseSequenceOut is Null; " +
              "END;" );
            lArgNbr = 1;
            lCallableStatement.setString(lArgNbr++, <![questionnaire:sequence]!>);
            lCallableStatement.setString(lArgNbr++, <![questionnaire:control]!>);
            lCallableStatement.setString(lArgNbr++, <![questionnaire:question:code]!>);
            lCallableStatement.setString(lArgNbr++, <![questionnaire:question:instance]!>);
            lCallableStatement.setString(lArgNbr++, <![questionnaire:question:response]!>);
%>
4
<%
            lCallableStatement.execute();
            lCallableStatement.close();
          }
          catch (Exception e) {
            System.out.println(e);
          }
        }
      }
    }
  }

%>
