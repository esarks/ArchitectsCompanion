
  public void sendMessage() {
  

      Socket SMTPSocket = null;
      String ServerResponseLine;

      try {

        SMTPSocket = new Socket (<![$mic:sendMessage:smtpMailServer]!>, 25);

        PrintStream ClientSays = new PrintStream( SMTPSocket.getOutputStream() );

        BufferedReader ServerResponds = new BufferedReader(new InputStreamReader(SMTPSocket.getInputStream()));

        // The SMTP dialog begins.

        // First we wait for the server to say "220"
        ServerResponseLine = ServerResponds.readLine();
//      checkServerResponse (SMTPServer, ServerResponseLine, "220");

        // Then we say HELO
        ClientSays.println ("HELO " + <![$mic:sendMessage:smtpMailServer]!>);
        ServerResponseLine = ServerResponds.readLine();
//      checkServerResponse (SMTPServer, ServerResponseLine, "250");

        ClientSays.println ("MAIL FROM: " + <![$mic:sendMessage:from]!>);
        ServerResponseLine = ServerResponds.readLine();
//      checkServerResponse (SMTPServer, ServerResponseLine, "250");

//      ClientSays.print ("RCPT TO: ");

        ClientSays.println ("RCPT TO: " + <![$mic:sendMessage:to]!>);
        ServerResponseLine = ServerResponds.readLine();
    
//      checkServerResponse (SMTPServer, ServerResponseLine, "250");

        ClientSays.println ("DATA");
        ServerResponseLine = ServerResponds.readLine();
//      checkServerResponse (SMTPServer, ServerResponseLine, "354");

        // Sending Message Headers

        //ClientSays.println ( "From: The Blue Wail <theband@thebluewail.com>\n" +
        //                     "To: The Blue Wail <theband@thebluewail.com>\n" +
        //           "Subject: Web Contact Message\n" );

        ClientSays.println ( "From: " + <![$mic:sendMessage:from]!>);
        //ServerResponseLine = ServerResponds.readLine();

        ClientSays.print ( "To: " + <![$mic:sendMessage:to]!>);
  
        ClientSays.println ( "");

        ClientSays.println ( "Subject: " + <![$mic:sendMessage:subject]!>);

        ClientSays.println ("MIME-Version: 1.0");
        ClientSays.println ("Content-Type: multipart/mixed; boundary=--esarks_boundary_000");
        ClientSays.println ("");
        ClientSays.println ("If you can see this, your mail reader does not support email");
        ClientSays.println ("messages in MIME format.");
        ClientSays.println ("");
        ClientSays.println ("----esarks_boundary_000");
        ClientSays.println ("Content-Type: multipart/alternative; boundary=--esarks_boundary_001");
        ClientSays.println ("");
        ClientSays.println ("");
        ClientSays.println ("----esarks_boundary_001");
        ClientSays.println ("Content-Type: text/plain; charset=us-ascii");
        ClientSays.println ("");
        
        // TEXT VERSION HERE //
  
        ClientSays.println ("----esarks_boundary_001");
        ClientSays.println ("Content-Type: text/html; charset=us-ascii");
        ClientSays.println ("");

// HTML VERSION
        ClientSays.println ("<HTML><BODY>");

        // Sending Message Body Text
        <!$mic:sendMessage:message!>!resetIterator();
        while (<!$mic:sendMessage:message!>!next()) {
          ClientSays.println (<![$mic:sendMessage:message]!>);
        }
   
        ClientSays.println ("</BODY></HTML>");
        ClientSays.println ("");
        ClientSays.println ("");
        ClientSays.println ("----esarks_boundary_001--");
        ClientSays.println ("----esarks_boundary_000--");
        ClientSays.println ("");

        // Sending a lone period (.) in a line.
        // This signifies the end of the body text.

        // TO DO: Earlier in the process check the body text
        // to make sure it does not contain a lone period in a line
        // by itself. Also fix lines that begin with a "From ".
        // Preferably, do these in the setBody(String) method.

        ClientSays.println (".");
        ServerResponseLine = ServerResponds.readLine();
//      checkServerResponse (SMTPServer, ServerResponseLine, "250");

        // Ending the SMTP session.

        ClientSays.println ("QUIT");
        ServerResponseLine = ServerResponds.readLine();
//      checkServerResponse (SMTPServer, ServerResponseLine, "221");


        } catch (Exception e) {

        System.err.println(e);

        } finally {
        try {
          SMTPSocket.close();
        } catch (Exception e) {return;}
        return;
        }

    }
  
