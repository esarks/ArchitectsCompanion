var int iFactName = 0;
var boolean iProcessRules = true;
var com.esarks.arm.owl.JeoOwlEngine iJeoOwlEngine = null;
var private boolean iWsChange = true;
end

public void execute() {
  if (<!mic.element:owl!>!size() > 0) {
    <!mic.element:owl!>!alias("owl");
    %>1<![mic.element:owl:title]!><!%"\r\n"!><%
    %>2<![owl:title]!><!%"\r\n"!><%
    executeRules(null);    
  }
}

public void execute(com.esarks.arm.owl.JeoOwlEngine aJeoOwlEngine, String aRulesXml) {
  iJeoOwlEngine = aJeoOwlEngine;
  execute(aRulesXml);
}

public void execute(String aRulesXml) {
  loadRules(aRulesXml);
  executeRules(null);
}

public void execute(Object aCallBack, String aRulesXml, ArrayList aArrayList, String aJeosName) {
  loadRules(aRulesXml);
  loadJeos(aArrayList, aJeosName);
  executeRules(aCallBack);
}

public com.esarks.arm.owl.JeoOwlEngine loadRules(String aRulesXml) {
%>>>>loadRules <!%aRulesXml + "\r\n"!><%

  if (<!owl!>!size() > 0) {
    java.util.Date lDate = new java.util.Date();
    com.esarks.arm.owl.JeoOwlEngine lJeoOwlEngine = (com.esarks.arm.owl.JeoOwlEngine) loadScript(com.esarks.arm.owl.JeoOwlEngine.class.getName(), lDate.toString());
    return lJeoOwlEngine.loadRules(aRulesXml);
  }
  
  <!owl!>!remove();
  parseXml(aRulesXml);

  <!owl:facts:fact!>!resetIterator();
  while (<!owl:facts:fact!>!next()) {
    <!owl:facts:fact:attribute!>!resetIterator();
    while (<!owl:facts:fact:attribute!>!next()) {
      String lFactName = <![owl:facts:fact:name]!>;
      if (<!owl:facts:fact:name!>!size() == 0) lFactName = Integer.toString(iFactName++);
      if (<!owl:facts:fact:attribute:type!>!size() > 0) {
        addFact(lFactName, <![owl:facts:fact:lid]!>, <![owl:facts:fact:attribute:name]!>, new PropertyValue(<![owl:facts:fact:attribute:type]!>, <![owl:facts:fact:attribute:value]!>));
      } else {
        addFact(lFactName, <![owl:facts:fact:lid]!>, <![owl:facts:fact:attribute:name]!>, new PropertyValue(<![owl:facts:fact:attribute:value]!>));
      }
    }
  }
  return this;
}


public void loadJeos(ArrayList aArrayList, String aJeosName) {
%>>>>loadJeos <!%aJeosName + " " + aArrayList.size() + " \r\n"!><%

  <!owl:jeos!>!resetIterator();
  <!owl!>!scan("jeos:name", aJeosName);

  <!owl:jeos:facts!>!resetIterator();
  while (<!owl:jeos:facts!>!next()) {
    removeFact(<![owl:jeos:facts]!>);  
  }
  <!owl:jeos:facts!>!remove();

  addFact(Integer.toString(++iFactName), "", aJeosName + " numberOfItems", new PropertyValue(aArrayList.size()));
  <!owl:jeos:facts!>!set(Integer.toString(iFactName));
  
  for (int lIdx=0; lIdx < aArrayList.size(); lIdx++) {

    com.esarks.jac.Jeo lJeo = (com.esarks.jac.Jeo) aArrayList.get(lIdx);   
    <!owl:jeos:jeo!>!resetIterator();
    if (<!owl:jeos!>!scan("jeo:instance", lJeo.getInstanceName())) {

      <!owl:jeos:jeo:attribute!>!resetIterator();
      while (<!owl:jeos:jeo:attribute!>!next()) {

        String lPropertyType = lJeo.getTypeByName(<![owl:jeos:jeo:attribute:name]!>);
        if (lPropertyType == null) continue;
        
        PropertyValue lLidPropertyValue = lJeo.getPropertyValueByName(<![owl:jeos:jeo:attribute:factId]!>);
        PropertyValue lPropertyValue = lJeo.getPropertyValueByName(<![owl:jeos:jeo:attribute:name]!>);
        PropertyValue lCompare = new PropertyValue(lPropertyType, <![owl:jeos:jeo:attribute:value]!>);
        String lOperation = <![owl:jeos:jeo:attribute:operation]!>.toLowerCase();

        if (lOperation.equals("equal") && lPropertyValue.getType() == lCompare.getType() && lPropertyValue.compareTo(lCompare) == 0) {
          String lFactType = <![owl:jeos:jeo:attribute:factType]!>;
          if (<!owl:jeos:jeo:attribute:factType!>!size() > 0) {
            addFact(Integer.toString(++iFactName), lLidPropertyValue.toString(), <![owl:jeos:jeo:attribute:factAttribute]!>, new PropertyValue(lFactType, <![owl:jeos:jeo:attribute:factValue]!>), lJeo);
          } else {
            addFact(Integer.toString(++iFactName), lLidPropertyValue.toString(), <![owl:jeos:jeo:attribute:factAttribute]!>, new PropertyValue(<![owl:jeos:jeo:attribute:factValue]!>), lJeo);
          }
          <!owl:jeos:facts!>!set(Integer.toString(iFactName));
        } else if (lOperation.equals("notequal") && lPropertyValue.getType() == lCompare.getType() && lPropertyValue.compareTo(lCompare) != 0) {
          String lFactType = <![owl:jeos:jeo:attribute:factType]!>;
          if (<!owl:jeos:jeo:attribute:factType!>!size() > 0) {
            addFact(Integer.toString(++iFactName), lLidPropertyValue.toString(), <![owl:jeos:jeo:attribute:factAttribute]!>, new PropertyValue(lFactType, <![owl:jeos:jeo:attribute:factValue]!>), lJeo);
          } else {
            addFact(Integer.toString(++iFactName), lLidPropertyValue.toString(), <![owl:jeos:jeo:attribute:factAttribute]!>, new PropertyValue(<![owl:jeos:jeo:attribute:factValue]!>), lJeo);
          }
          <!owl:jeos:facts!>!set(Integer.toString(iFactName));
        } else if (lOperation.equals("less") && lPropertyValue.getType() == lCompare.getType() && lPropertyValue.compareTo(lCompare) < 0) {
          String lFactType = <![owl:jeos:jeo:attribute:factType]!>;
          if (<!owl:jeos:jeo:attribute:factType!>!size() > 0) {
            addFact(Integer.toString(++iFactName), lLidPropertyValue.toString(), <![owl:jeos:jeo:attribute:factAttribute]!>, new PropertyValue(lFactType, <![owl:jeos:jeo:attribute:factValue]!>), lJeo);
          } else {
            addFact(Integer.toString(++iFactName), lLidPropertyValue.toString(), <![owl:jeos:jeo:attribute:factAttribute]!>, new PropertyValue(<![owl:jeos:jeo:attribute:factValue]!>), lJeo);
          }
          <!owl:jeos:facts!>!set(Integer.toString(iFactName));
        } else if (lOperation.equals("greater") && lPropertyValue.getType() == lCompare.getType() && lPropertyValue.compareTo(lCompare) > 0) {
          String lFactType = <![owl:jeos:jeo:attribute:factType]!>;
          if (<!owl:jeos:jeo:attribute:factType!>!size() > 0) {
            addFact(Integer.toString(++iFactName), lLidPropertyValue.toString(), <![owl:jeos:jeo:attribute:factAttribute]!>, new PropertyValue(lFactType, <![owl:jeos:jeo:attribute:factValue]!>), lJeo);
          } else {
            addFact(Integer.toString(++iFactName), lLidPropertyValue.toString(), <![owl:jeos:jeo:attribute:factAttribute]!>, new PropertyValue(<![owl:jeos:jeo:attribute:factValue]!>), lJeo);
          }
          <!owl:jeos:facts!>!set(Integer.toString(iFactName));
        } else if (lOperation.equals("every")) {
          String lFactType = <![owl:jeos:jeo:attribute:factType]!>;
          if (<!owl:jeos:jeo:attribute:factType!>!size() > 0) {
            addFact(Integer.toString(++iFactName), lLidPropertyValue.toString(), <![owl:jeos:jeo:attribute:factAttribute]!>, new PropertyValue(lFactType, <![owl:jeos:jeo:attribute:factValue]!>), lJeo);
          } else {
            addFact(Integer.toString(++iFactName), lLidPropertyValue.toString(), <![owl:jeos:jeo:attribute:factAttribute]!>, new PropertyValue(<![owl:jeos:jeo:attribute:factValue]!>), lJeo);
          }
          <!owl:jeos:facts!>!set(Integer.toString(iFactName));
        } else if (lOperation.equals("set")) {
          addFact(Integer.toString(++iFactName), lLidPropertyValue.toString(), <![owl:jeos:jeo:attribute:factAttribute]!>, lPropertyValue, lJeo);
          <!owl:jeos:facts!>!set(Integer.toString(iFactName));
        }

        if (<!owl:jeos:jeo:attribute!>!isFirst() && lIdx == 0) {
          addFact(Integer.toString(++iFactName), lLidPropertyValue.toString(), aJeosName + " isFirstItem", new PropertyValue(true), lJeo);
          <!owl:jeos:facts!>!set(Integer.toString(iFactName));
        } else {
          addFact(Integer.toString(++iFactName), lLidPropertyValue.toString(), aJeosName + " isFirstItem", new PropertyValue(false), lJeo);
          <!owl:jeos:facts!>!set(Integer.toString(iFactName));
        }
        if (<!owl:jeos:jeo:attribute!>!isLast() && lIdx == aArrayList.size() -1) {
          addFact(Integer.toString(++iFactName), lLidPropertyValue.toString(), aJeosName + " isLastItem", new PropertyValue(true), lJeo);
          <!owl:jeos:facts!>!set(Integer.toString(iFactName));
        } else {
          addFact(Integer.toString(++iFactName), lLidPropertyValue.toString(), aJeosName + " isLastItem", new PropertyValue(false), lJeo);
          <!owl:jeos:facts!>!set(Integer.toString(iFactName));
        }
      }
    }
  }
}

public void addFact(String aLid, String aAttribute, String aConstant) {
  addFact(Integer.toString(iFactName++), aLid, aAttribute, new PropertyValue(aConstant));
}

public void addFact(String aLid, String aAttribute, PropertyValue aConstant) {
  addFact(Integer.toString(iFactName++), aLid, aAttribute, aConstant);
}

public void addFact(String aId, String aLid, String aAttribute, String aConstant) {
  addFact(aId, aLid, aAttribute, new PropertyValue(aConstant));
}

public void addFact(String aId, String aLid, String aAttribute, PropertyValue aConstant) {
  removeFact(aId);
  <!owl:fact!>!set("");
  <!owl:fact:name!>!set(aId);
  <!owl:fact:id!>!set(aLid);
  <!owl:fact:attribute!>!set(aAttribute);
  <!owl:fact:value!>!set(aConstant.toString());
  <!owl:fact:propertyValue!>!set(aConstant);
//  System.out.println("******" + aConstant.getType() + " ** " + <!owl:fact:propertyValue!>!getPropertyValue().getType());
  iWsChange = true;
}

public void addFact(String aLid, String aAttribute, String aConstant, Jeo aJeo) {
  addFact(Integer.toString(iFactName++), aLid, aAttribute, new PropertyValue(aConstant), aJeo);
}

public void addFact(String aLid, String aAttribute, PropertyValue aConstant, Jeo aJeo) {
  addFact(Integer.toString(iFactName++), aLid, aAttribute, aConstant, aJeo);
}

public void addFact(String aId, String aLid, String aAttribute, String aConstant, Jeo aJeo) {
  addFact(aId, aLid, aAttribute, new PropertyValue(aConstant), aJeo);
}

public void addFact(String aId, String aLid, String aAttribute, PropertyValue aConstant, Jeo aJeo) {
  removeFact(aId);
  <!owl:fact!>!set("");
  <!owl:fact:name!>!set(aId);
  <!owl:fact:id!>!set(aLid);
  <!owl:fact:attribute!>!set(aAttribute);
  <!owl:fact:value!>!set(aConstant.toString());
  <!owl:fact:propertyValue!>!set(aConstant);
  <!owl:fact:jeo!>!set(aJeo);
//  System.out.println("******" + aConstant.getType() + " ** " + <!owl:fact:propertyValue!>!getPropertyValue().getType());
  iWsChange = true;
}

private void removeFact(String aFactName) {
  <!rete:fact!>!resetIterator();
  if (<!owl!>!scan("fact:name", aFactName)) {
    <!owl:fact!>!removeValue();
    iWsChange = true;
  } else {
  }
}

public void setWsChange(boolean aValue) {
  iWsChange = aValue;
}

public void executeRules() {
  executeRules(null);
}

private void executeRules(Object aCallback) {
%>>>>executeRules <![owl:title]!><!%"\r\n"!><%

  if (!iWsChange) return;
  iWsChange = false;

  getConditionAttributes();
  associateFacts();
  determineRules();
 
  <!$mic:rule!>!resetIterator();
  while (<!$mic:rule!>!next()) {
    %>Evaluate Rule: <![$mic:rule]!><!%"\r\n"!><%
    if (performProductions(aCallback)) {
      %>return true from performProductions<!%"\r\n"!><%
      if (<![owl:rule:breakOnRule]!>.equals("true")) break;
      
      if (<!owl:rule:fact!>!size() > 0) {       
        <!owl:rule:fact!>!resetIterator();
        while (<!owl:rule:fact!>!next()) {
          <!owl:rule:fact:attribute!>!resetIterator();
          while (<!owl:rule:fact:attribute!>!next()) {
            String lFactName = <![owl:rule:fact:name]!>;
            if (<!owl:rule:fact:name!>!size() == 0) lFactName = Integer.toString(iFactName++);
            if (<!owl:rule:fact:attribute:type!>!size() > 0) {
              addFact(lFactName, <![owl:rule:fact:lid]!>, <![owl:rule:fact:attribute:name]!>, new PropertyValue(<![owl:rule:fact:attribute:type]!>, <![owl:rule:fact:attribute:value]!>));
            } else {
              addFact(lFactName, <![owl:rule:fact:lid]!>, <![owl:rule:fact:attribute:name]!>, new PropertyValue(<![owl:rule:fact:attribute:value]!>));
            }
          }
        }
      }
     
      ArrayList lEnableArrayList = new ArrayList();
      ArrayList lDisableArrayList = new ArrayList();
      ArrayList lRemoveArrayList = new ArrayList();
      if (<!owl:rule:enable!>!size() > 0) {
        <!owl:rule:enable!>!resetIterator();
        while (<!owl:rule:enable!>!next()) {
          lEnableArrayList.add(<![owl:rule:enable:name]!>);
        }
      }
      if (<!owl:rule:disable!>!size() > 0) {
        <!owl:rule:disable!>!resetIterator();
        while (<!owl:rule:disable!>!next()) {
          lDisableArrayList.add(<![owl:rule:disable:name]!>);
        }
      }
      if (<!owl:rule:remove!>!size() > 0) {
        if (<!owl:rule:remove:rule!>!size() > 0) {
          <!owl:rule:remove:rule!>!resetIterator();
          while (<!owl:rule:remove:rule!>!next()) {
            lRemoveArrayList.add(<![owl:rule:remove:rule:name]!>);
          }
        }
        if (<!owl:rule:remove:fact!>!size() > 0) {
          <!owl:rule:remove:fact!>!resetIterator();
          while (<!owl:rule:remove:fact!>!next()) {
            <!owl:fact!>!resetIterator();
            if (<!owl!>!scan("fact:name", <![owl:rule:remove:fact:name]!>)) {
              <!owl:fact!>!removeValue();
            }
          }
        }
        if (<!owl:rule:remove:condition!>!size() > 0) {
          <!owl:rule:remove:condition!>!resetIterator();
          while (<!owl:rule:remove:condition!>!next()) {
            <!owl:condition!>!resetIterator();
            if (<!owl!>!scan("condition:name", <![owl:rule:remove:condition:name]!>)) {
              <!owl:condition!>!removeValue();
            }
          }
        }
      }
      for (int lListIdx=0; lListIdx < lEnableArrayList.size(); lListIdx++) {
        <!owl:rule!>!resetIterator();
        if (<!owl!>!scan("rule:name", (String) lEnableArrayList.get(lListIdx))) {
          <!owl:rule:disabled!>!remove();
        }
      }
      for (int lListIdx=0; lListIdx < lDisableArrayList.size(); lListIdx++) {
        <!owl:rule!>!resetIterator();
        if (<!owl!>!scan("rule:name", (String) lDisableArrayList.get(lListIdx))) {
          <!owl:rule:disabled!>!reset("true");
        }
      }
      for (int lListIdx=0; lListIdx < lRemoveArrayList.size(); lListIdx++) {
        <!owl:rule!>!resetIterator();
        if (<!owl!>!scan("rule:name", (String) lDisableArrayList.get(lListIdx))) {
          <!owl:rule!>!removeValue();
        }
      }

      if (iWsChange) {
        getConditionAttributes();
        associateFacts();
        determineRules();
        <!$mic:rule!>!resetIterator();
      }
    }
  }
}

private void getConditionAttributes() {
%>>>>getConditionAttributes<!%"\r\n"!><%

  <!$mic:conditionAttribute!>!remove();

  // Create list of unique condition attributes, associating conditions
  <!owl:condition!>!resetIterator();
  while (<!owl:condition!>!next()) {
    String lAttribute = <![owl:condition:attribute]!>;
    <!$mic:conditionAttribute:" + lAttribute + "!>!set(<![owl:condition:name]!>);
  }
}

private void associateFacts() {
%>>>>associateFacts<!%"\r\n"!><%

  <!$mic:conditionFact!>!remove();

  // Create list of unique fact attributes, associating facts
  <!owl:fact!>!resetIterator();
  while (<!owl:fact!>!next()) {
    String lAttribute = <![owl:fact:attribute]!>;
    // Match the fact to the condition (builds a condition / fact association list)
    <!$mic:conditionAttribute:" + lAttribute + "!>!resetIterator();
    while (<!$mic:conditionAttribute:" + lAttribute + "!>!next()) {
      String lCondition = <![$mic:conditionAttribute:" + lAttribute + "]!>;
      <!$mic:conditionFact:" + lCondition + "!>!set(<![owl:fact:name]!>);
    }
  }
}

private void determineRules() {
%>>>>determineRules<!%"\r\n"!><%
  
  <!$mic:rule!>!remove();
  <!$mic:production!>!remove();
    
  // Determine which rules to use, and number of potential productions in a rule
  <!owl:rule!>!resetIterator();
  while (<!owl:rule!>!next()) {

    if (<![owl:rule:disabled]!>.equals("true")) continue;
    String lProductionName = "r=(" + <![owl:rule:name]!> + ")";
    String lRuleName = <![owl:rule:name]!>;
    <!$mic:production:" + lProductionName + "!>!set("");
    boolean lUseRule = true;

    <!owl:rule:hasCondition!>!resetIterator();
    while (<!owl:rule:hasCondition!>!next()) {
      String lHasCondition = <![owl:rule:hasCondition:name]!>;
      if (<!$mic:conditionFact:" + lHasCondition + "!>!size() == 0) {
        lUseRule = false;
        break;
      }

      <!$mic:production:" + lProductionName + "!>!resetIterator();
      while (<!$mic:production:" + lProductionName + "!>!next()) {
        <!$mic:conditionFact:" + lHasCondition + "!>!resetIterator();
        while (<!$mic:conditionFact:" + lHasCondition + "!>!next()) {
          String lFact = <![$mic:conditionFact:" + lHasCondition + "]!>;
          <!$mic:production:" + lProductionName + " c=(" + lHasCondition + ")!>!set(<![$mic:production:" + lProductionName + "]!> + "f=(" + lFact + ") ");
          if (<![$mic:production:" + lProductionName + "]" + "f=(" + lFact + ") !>!size() == 0) {
            <![$mic:production:" + lProductionName + "]!>!resetIterator();
            while (<![$mic:production:" + lProductionName + "]!>!next()) {
              <![$mic:production:" + lProductionName + "]" + "f=(" + lFact + ") !>!set(<![[$mic:production:" + lProductionName + "]]!>);
            }
            <![$mic:production:" + lProductionName + "]" + "f=(" + lFact + ") !>!set(lFact);
          }
        }
      }
      lProductionName += " c=(" + lHasCondition + ")";
    }
   
    if (lUseRule) {
      if (!<![$mic:rule]!>.equals(<![owl:rule:name]!>)) {
        <!$mic:rule!>!set(<![owl:rule:name]!>);
      }
      <!$mic:rule:production!>!set(lProductionName);
    }
  }
}

private boolean performProductions(Object aCallback) {
%>>>>performProductions<!%"\r\n"!><%

  boolean lProductionPassed=false;  
  <!$mic:production:[$mic:rule:production]!>!resetIterator();
  while (<!$mic:production:[$mic:rule:production]!>!next()) {

    <!$mic:rule:symbol!>!remove();
    <!$mic:rule:symbolFact!>!remove();
    
    <!owl:rule!>!resetIterator();
    if (<!owl!>!scan("rule:name", <![$mic:rule]!>)) {
      <!owl:rule:hasCondition!>!resetIterator();
      <![$mic:production:[$mic:rule:production]]!>!resetIterator();
      boolean lPerformRule = true;
      boolean lRuleResult = true;

      while (lPerformRule) {
        lPerformRule = <!owl:rule:hasCondition!>!next();
        if (lPerformRule) {
          lPerformRule = <![$mic:production:[$mic:rule:production]]!>!next();
          if (lPerformRule) {
            <!owl:condition!>!resetIterator();
            <!owl!>!scan("condition:name", <![owl:rule:hasCondition:name]!>);
            <!owl:fact!>!resetIterator();
            if (<!owl!>!scan("fact:name", <![[$mic:production:[$mic:rule:production]]]!>) == false) {
              %><![[$mic:production:[$mic:rule:production]]]!> fact not found!<!%"\r\n"!><%
            }
            // Check for consistent symbol assignment (symbol to lid)
            String lLhs = <![owl:condition:lhs]!>;
            if (<!$mic:rule:symbol:" + lLhs + "!>!size() == 0) {
              <!$mic:rule:symbol:" + lLhs + "!>!set(<![owl:fact:id]!>);
            } else {
              if (!<![$mic:rule:symbol:" + lLhs + "]!>.equals(<![owl:fact:id]!>)) {
                lPerformRule = false;
                lRuleResult = false;
                break;
              }
            }
            // Check for reverse symbol assignment (lid to symbol)
            String lFact = <![owl:fact:id]!>;
            if (<!$mic:rule:symbolFact:" + lFact + "!>!size() == 0) {
              <!$mic:rule:symbolFact:" + lFact + "!>!set(<![owl:condition:lhs]!>);
            } else {
              if (!<![$mic:rule:symbolFact:" + lFact + "]!>.equals(<![owl:condition:lhs]!>)) {
                lPerformRule = false;
                lRuleResult = false;
                break;
              }
            }
            // Check for consistent symbol assignment (symbol to lid)
            if (<!owl:condition:rhs!>!size() > 0) {
              String lRhs = <![owl:condition:rhs]!>;
              if (<!$mic:rule:symbol:" + lRhs + "!>!size() == 0) {
                <!$mic:rule:symbol:" + lRhs + "!>!set(<![owl:fact:rid]!>);
              } else {
                if (!<![$mic:rule:symbol:" + lRhs + "]!>.equals(<![owl:fact:rid]!>)) {
                  lPerformRule = false;
                  lRuleResult = false;
                  break;
                }
              }
              // Check for reverse symbol assignment (rule to symbol)
              if (<!$mic:rule:symbolFact:" + lFact + "!>!size() == 0) {
                <!$mic:rule:symbolFact:" + lFact + "!>!set(<![owl:condition:rhs]!>);
              } else {
                if (!<![$mic:rule:symbolFact:" + lFact + "]!>.equals(<![owl:condition:rhs]!>)) {
                  lPerformRule = false;
                  lRuleResult = false;
                  break;
                }
              }
            } else {
              if (<!owl:fact:propertyValue!>!size() == 0) {
                String lPropertyType = <![owl:fact:type]!>;
                if (<!owl:fact:type!>!size() == 0) {
                  <!owl:fact:propertyValue!>!set(new PropertyValue(<![owl:fact:value]!>));
                } else {
                  <!owl:fact:propertyValue!>!set(new PropertyValue(lPropertyType, <![owl:fact:value]!>));
                }
              }
              if (<!owl:condition:propertyValue!>!size() == 0) {
                String lPropertyType = <![owl:condition:type]!>;
                if (<!owl:condition:type!>!size() == 0) {
                  <!owl:condition:propertyValue!>!set(new PropertyValue(<![owl:condition:value]!>));
                } else {
                  <!owl:condition:propertyValue!>!set(new PropertyValue(lPropertyType, <![owl:condition:value]!>));
                }
              }
              if (<!owl:fact:propertyValue!>!size() > 0) {
                if (<!owl:condition:propertyValue!>!size() > 0) {
                  PropertyValue lFactPropertyValue = <!owl:fact:propertyValue!>!getPropertyValue();
                  PropertyValue lConditionPropertyValue = <!owl:condition:propertyValue!>!getPropertyValue();

                  String lOperation = <![owl:condition:operation]!>.toLowerCase();
                  if (<!owl:condition:operation!>!size() == 0) lOperation = "equal";

                  if (lOperation.equals("equal") && (lFactPropertyValue.getValueType() != lConditionPropertyValue.getValueType() || lFactPropertyValue.compareTo(lConditionPropertyValue) == 0)) {
                  } else if (lOperation.equals("notequal") && (lFactPropertyValue.getValueType() != lConditionPropertyValue.getValueType() || lFactPropertyValue.compareTo(lConditionPropertyValue) != 0)) {
                  } else if (lOperation.equals("less") && (lFactPropertyValue.getValueType() != lConditionPropertyValue.getValueType() || lFactPropertyValue.compareTo(lConditionPropertyValue) < 0)) {
                  } else if (lOperation.equals("greater") && (lFactPropertyValue.getValueType() != lConditionPropertyValue.getValueType() || lFactPropertyValue.compareTo(lConditionPropertyValue) > 0)) {
                  } else {
                    lPerformRule = false;
                    lRuleResult = false;
                    break;
                  }
                } else {
                  lPerformRule = false;
                  lRuleResult = false;
                  break;
                }
              } else {
                lPerformRule = false;
                lRuleResult = false;
                break;
              }
            }              
          }
        }
      }

      if (lRuleResult) {

        ArrayList lJeoArrayList = new ArrayList(); 
        <![$mic:production:[$mic:rule:production]]!>!resetIterator();
        while (<![$mic:production:[$mic:rule:production]]!>!next()) {
          <!owl:fact!>!resetIterator();
          <!owl!>!scan("fact:name", <![[$mic:production:[$mic:rule:production]]]!>);
          if (<!owl:fact:jeo!>!size() > 0) {
            lJeoArrayList.add((Jeo) <!owl:fact:jeo!>!getValueObject());
          }
        }

        lProductionPassed = true;

        if (<![owl:rule:disable]!>.equals("true")) <!owl:rule:disabled!>!reset("true");

        <!owl:rule:action!>!resetIterator();
        while (<!owl:rule:action!>!next()) {
          if (<!owl:rule:action:name!>!size() == 0) {
          } else {
            %>Action: <![owl:rule:action:name]!><!%"\r\n"!><%
            MicScriptHelper lLoadObject = this;
            if (!<![owl:rule:action:name]!>.equals("?this")) {
              if (<!owl:rule:action:instance!>!size() > 0) {
                lLoadObject = loadScript(<![owl:rule:action:name]!>, <![owl:rule:action:instance]!>);
              } else {
                lLoadObject = loadScript(<![owl:rule:action:name]!>);
              }
            }

            if (<!owl:rule:action:parameter!>!size() == 0) {
              iScript.execMethod(lLoadObject, <![owl:rule:action:operation]!>);
              %>Operation0: <![owl:rule:action:operation]!><!%"\r\n"!><%
            } else if (<!owl:rule:action:parameter!>!size() > 0 && <!owl:rule:action:parameter2!>!size() == 0) {
              Object lArgs[] = new Object[<!owl:rule:action:parameter!>!size()];
              <!owl:rule:action:parameter!>!resetIterator();
              while (<!owl:rule:action:parameter!>!next()) {
                if (<![owl:rule:action:parameter]!>.equals("?script")) {
                  lArgs[<!owl:rule:action:parameter!>!getIterator() - 1] = iScript;
                } else if (<![owl:rule:action:parameter]!>.equals("?this")) {
                  lArgs[<!owl:rule:action:parameter!>!getIterator() - 1] = this;
                } else if (<![owl:rule:action:parameter]!>.equals("?callback")) {
                  lArgs[<!owl:rule:action:parameter!>!getIterator() - 1] = iJeoOwlEngine;
                } else if (<![owl:rule:action:parameter]!>.equals("?jeos")) {
                  lArgs[<!owl:rule:action:parameter!>!getIterator() - 1] = lJeoArrayList;
                } else if (<![owl:rule:action:parameter]!>.equals("?jeo")) {
                  lArgs[<!owl:rule:action:parameter!>!getIterator() - 1] = lJeoArrayList.get(0);
                } else {
                  lArgs[<!owl:rule:action:parameter!>!getIterator() - 1] = <![owl:rule:action:parameter]!>;
                }
              }
              %>Operation1: <![owl:rule:action:operation]!><!%"\r\n"!><%
              iScript.execMethod(lLoadObject, <![owl:rule:action:operation]!>, lArgs);
            } else {
              if (<![owl:rule:action:parameter]!>.equals("?script")) {
                %>Operation2: <![owl:rule:action:operation]!><!%"\r\n"!><%
                iScript.execMethod(lLoadObject, <![owl:rule:action:operation]!>, new Object[]{iScript, <![owl:rule:action:parameter2]!>});
              } else if (<![owl:rule:action:parameter]!>.equals("?this")) {
                %>Operation3: <![owl:rule:action:operation]!><!%"\r\n"!><%
                iScript.execMethod(lLoadObject, <![owl:rule:action:operation]!>, new Object[]{this, <![owl:rule:action:parameter2]!>});
              } else if (<![owl:rule:action:parameter]!>.equals("?callback")) {
                %>Operation4: <![owl:rule:action:operation]!><!%"\r\n"!><%
                iScript.execMethod(lLoadObject, <![owl:rule:action:operation]!>, new Object[]{iJeoOwlEngine, <![owl:rule:action:parameter2]!>});
              } else if (<![owl:rule:action:parameter]!>.equals("?jeos")) {
                %>Operation5: <![owl:rule:action:operation]!><!%"\r\n"!><%
                iScript.execMethod(lLoadObject, <![owl:rule:action:operation]!>, new Object[]{lJeoArrayList, <![owl:rule:action:parameter2]!>});
              } else if (<![owl:rule:action:parameter]!>.equals("?jeo")) {
                %>Operation6: <![owl:rule:action:operation]!><!%"\r\n"!><%
                iScript.execMethod(lLoadObject, <![owl:rule:action:operation]!>, new Object[]{lJeoArrayList.get(0), <![owl:rule:action:parameter2]!>});
              } else {
                %>Operation7: <![owl:rule:action:operation]!><!%"\r\n"!><%
                iScript.execMethod(lLoadObject, <![owl:rule:action:operation]!>, new Object[]{<![owl:rule:action:parameter]!>, <![owl:rule:action:parameter2]!>});
              }
            }
          }
        }
        if (aCallback != null && <!owl:rule:callback!>!size() > 0) iScript.execMethod(aCallback, <![owl:rule:callback]!>, new Object[]{<![owl:rule:name]!>});
        if (<![owl:rule:breakOnRule]!>.equals("true") || <![owl:rule:breakOnProduction]!>.equals("true")) return lProductionPassed;
      }
    }
  }
  return lProductionPassed;
}

public void setProcessRules(boolean aValue) {
  iProcessRules = aValue;
}

private boolean greaterThan(String aValue1, String aValue2) {
  if (aValue1.compareTo(aValue2) > 0) return true;
  return false;
}

private boolean lessThan(String aValue1, String aValue2) {
  if (aValue1.compareTo(aValue2) < 0) return true;
  return false;
}

private boolean equals(String aValue1, String aValue2) {
  if (aValue1.compareTo(aValue2) == 0) return true;
  return false;
}
