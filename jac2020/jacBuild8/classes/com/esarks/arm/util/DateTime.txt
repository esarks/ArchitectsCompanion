C:\GitHub\JAC2020\jac2020\jacBuild8\conf\micImport.script:1: package <#[$jac:script:package]#>;
C:\GitHub\JAC2020\jac2020\jacBuild8\conf\micImport.script:2: 
C:\GitHub\JAC2020\jac2020\jacBuild8\conf\micImport.script:3: import java.util.*;
C:\GitHub\JAC2020\jac2020\jacBuild8\conf\micImport.script:4: import java.lang.reflect.*;
C:\GitHub\JAC2020\jac2020\jacBuild8\conf\micImport.script:5: import java.io.*;
C:\GitHub\JAC2020\jac2020\jacBuild8\conf\micImport.script:6: import java.text.*;
C:\GitHub\JAC2020\jac2020\jacBuild8\conf\micImport.script:7: import java.sql.*;
C:\GitHub\JAC2020\jac2020\jacBuild8\conf\micImport.script:8: //import java.net.*;
C:\GitHub\JAC2020\jac2020\jacBuild8\conf\micImport.script:9: //import javax.net.ssl.*;
C:\GitHub\JAC2020\jac2020\jacBuild8\conf\micImport.script:10: //import java.security.*;
C:\GitHub\JAC2020\jac2020\jacBuild8\conf\micImport.script:11: import javax.servlet.*;
C:\GitHub\JAC2020\jac2020\jacBuild8\conf\micImport.script:12: import javax.servlet.http.*;
C:\GitHub\JAC2020\jac2020\jacBuild8\conf\micImport.script:13: //import java.awt.*;
C:\GitHub\JAC2020\jac2020\jacBuild8\conf\micImport.script:14: //import javax.swing.*;
C:\GitHub\JAC2020\jac2020\jacBuild8\conf\micImport.script:15: 
C:\GitHub\JAC2020\jac2020\jacBuild8\conf\micImport.script:16: import com.esarks.jac.*;
C:\GitHub\JAC2020\jac2020\jacBuild8\conf\micImport.script:17: import com.esarks.mic.*;
C:\GitHub\JAC2020\jac2020\jacBuild8\conf\micImport.script:18: 
C:\GitHub\JAC2020\jac2020\jacBuild8\conf\micImport.script:19: <#import#>
C:\GitHub\JAC2020\jac2020\jacBuild8\conf\micPrefix.script:1: public class <#[$jac:script]#> <#[$jac:script:extends]#> <#[$jac:script:implements]#> {
C:\GitHub\JAC2020\jac2020\jacBuild8\conf\micPrefix.script:2: 
C:\GitHub\JAC2020\jac2020\jacBuild8\conf\micPrefix.script:3: <#var#>
C:\GitHub\JAC2020\jac2020\jacBuild8\conf\micPrefix.script:4: 
C:\GitHub\JAC2020\jac2020\jacBuild8\conf\micPrefix.script:5:   protected <#[$jac:script]#>() {
C:\GitHub\JAC2020\jac2020\jacBuild8\conf\micPrefix.script:6:   }
C:\GitHub\JAC2020\jac2020\jacBuild8\conf\micPrefix.script:7: 
C:\GitHub\JAC2020\jac2020\jacBuild8\conf\micPrefix.script:8:   public <#[$jac:script]#>(Script aScript) {
C:\GitHub\JAC2020\jac2020\jacBuild8\conf\micPrefix.script:9: 
C:\GitHub\JAC2020\jac2020\jacBuild8\conf\micPrefix.script:10:     super(aScript);
C:\GitHub\JAC2020\jac2020\jacBuild8\conf\micPrefix.script:11: 
C:\GitHub\JAC2020\jac2020\jacBuild8\conf\micPrefix.script:12:   }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:1: import java.util.*
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:2: end
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:3: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:4: //$Section=definitions$Preserve=yes
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:5:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:6:      * Creates a date represented by the given year, month and day.
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:7:      *
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:8:      * @param year The year of the date to create
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:9:      * @param month The month of the date to create (1 = January, 12 = December)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:10:      * @param dayOfMonth The day of the month of the date to create.
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:11:      * @throws IllegalArgumentException if the year, month and dayOfMonth
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:12:      * combination are not valid in a Gregorian calendar.
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:13:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:14:     public DateTime(int year, int month, int dayOfMonth)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:15:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:16:         this(year, month, dayOfMonth, false);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:17:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:18: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:19:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:20:      * Creates a DateTime representing the date in the given timezone
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:21:      * at the given instant in time.
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:22:      * <p>
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:23:      * <b>Think carefully about what timezone to use!</b>  Often you will
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:24:      * want to use the timezone of the 'user' - which is not always represented
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:25:      * by <code>TimeZone.getDefault()</code>
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:26:      *
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:27:      * @param tzone The timezone to be considered
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:28:      * @param instantInTime The instant in time to be considered
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:29:      * @throws IllegalArgumentException if the instant in time is out of range
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:30:      *   in the given timezone
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:31:      * @see #isOutsideRange(TimeZone, Date)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:32:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:33:     public DateTime(TimeZone tzone, java.util.Date instantInTime)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:34:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:35:         GregorianCalendar cal = new GregorianCalendar(tzone);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:36:         cal.setTime(instantInTime);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:37:         init(cal.get(Calendar.YEAR), cal.get(Calendar.MONTH) + 1, cal.get(Calendar.DAY_OF_MONTH));
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:38:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:39: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:40:     public DateTime(java.util.Date instantInTime, Locale locale)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:41:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:42:         GregorianCalendar cal = new GregorianCalendar(locale);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:43:         cal.setTime(instantInTime);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:44:         init(cal.get(Calendar.YEAR), cal.get(Calendar.MONTH) + 1, cal.get(Calendar.DAY_OF_MONTH));
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:45:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:46: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:47:     public DateTime(java.util.Date instantInTime)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:48:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:49:         GregorianCalendar cal = new GregorianCalendar();
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:50:         cal.setTime(instantInTime);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:51:         init(cal.get(Calendar.YEAR), cal.get(Calendar.MONTH) + 1, cal.get(Calendar.DAY_OF_MONTH));
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:52:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:53: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:54:     public DateTime(long lMillisOffsetFromNOW)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:55:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:56:         GregorianCalendar cal = new GregorianCalendar();
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:57:         cal.setTimeInMillis((new java.util.Date()).getTime() + lMillisOffsetFromNOW);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:58:         init(cal.get(Calendar.YEAR), cal.get(Calendar.MONTH) + 1, cal.get(Calendar.DAY_OF_MONTH));
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:59:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:60: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:61:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:62:      *
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:63:      * @param year
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:64:      * @param month
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:65:      * @param dayOfMonth
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:66:      * @param lenient
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:67:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:68:     private DateTime(int year, int month, int dayOfMonth, boolean lenient)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:69:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:70:         if (!lenient)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:71:         {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:72:             checkValidYearMonthDay(year, month, dayOfMonth);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:73:         }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:74:         init(year, month, dayOfMonth);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:75:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:76: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:77:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:78:      * Creates a DateTime representing the current date in the given
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:79:      * timezone. Equivalent to <code>DateTime(tzone, new Date())</code>
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:80:      * @param tzone The timezone to be considered
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:81: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:82:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:83:     public DateTime(TimeZone tzone)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:84:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:85:         this(tzone, new java.util.Date());
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:86:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:87: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:88:     public static final long MILLIS_IN_DAY = 1000 * 60 * 60 * 24;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:89: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:90:     public static final long MILLIS_IN_HOUR = 1000 * 60 * 60;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:91: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:92:     public static final long MILLIS_IN_MINUTE = 1000 * 60;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:93: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:94:     /** The value returned by getDayOfWeek() representing Sunday */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:95:     public static final int SUNDAY = 1;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:96: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:97:     /** The value returned by getDayOfWeek() representing Monday */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:98:     public static final int MONDAY = 2;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:99: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:100:     /** The value returned by getDayOfWeek() representing Tuesday */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:101:     public static final int TUESDAY = 3;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:102: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:103:     /** The value returned by getDayOfWeek() representing Wednesday */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:104:     public static final int WEDNESDAY = 4;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:105: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:106:     /** The value returned by getDayOfWeek() representing Thursday */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:107:     public static final int THURSDAY = 5;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:108: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:109:     /** The value returned by getDayOfWeek() representing Friday */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:110:     public static final int FRIDAY = 6;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:111: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:112:     /** The value returned by getDayOfWeek() representing Saturday */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:113:     public static final int SATURDAY = 7;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:114: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:115:     /** The value returned by getMonth() representing January */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:116:     public static final int JANUARY = 1;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:117: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:118:     /** The value returned by getMonth() representing February */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:119:     public static final int FEBRUARY = 2;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:120: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:121:     /** The value returned by getMonth() representing March */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:122:     public static final int MARCH = 3;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:123: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:124:     /** The value returned by getMonth() representing April */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:125:     public static final int APRIL = 4;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:126: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:127:     /** The value returned by getMonth() representing May */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:128:     public static final int MAY = 5;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:129: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:130:     /** The value returned by getMonth() representing June */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:131:     public static final int JUNE = 6;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:132: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:133:     /** The value returned by getMonth() representing July */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:134:     public static final int JULY = 7;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:135: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:136:     /** The value returned by getMonth() representing August */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:137:     public static final int AUGUST = 8;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:138: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:139:     /** The value returned by getMonth() representing September */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:140:     public static final int SEPTEMBER = 9;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:141: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:142:     /** The value returned by getMonth() representing October */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:143:     public static final int OCTOBER = 10;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:144: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:145:     /** The value returned by getMonth() representing November */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:146:     public static final int NOVEMBER = 11;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:147: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:148:     /** The value returned by getMonth() representing December */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:149:     public static final int DECEMBER = 12;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:150: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:151:     /** Days since 1 Jan, 1 A.D., or -1 if not calculated yet */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:152:     private transient int daysSinceEpoch = -1;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:153: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:154:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:155:      * The calendar holding year, month and day values.
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:156:      * Other properties of this class aren't used
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:157:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:158:     private transient GregorianCalendar calendar;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:159: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:160:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:161:      * The number of days in the year up to (but not including) a month.
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:162:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:163:     private static final int[] cumulDaysToMonth =
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:164:         { 0, // Jan
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:165:                 31, // Feb
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:166:                 59, // Mar
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:167:                 90, // Apr
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:168:                 120, // May
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:169:                 151, // Jun
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:170:                 181, // Jul
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:171:                 212, // Aug
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:172:                 243, // Sep
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:173:                 273, // Oct
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:174:                 304, // Nov
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:175:                 334 // Dec
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:176:         };
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:177: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:178:     private static final int[] daysInMonth =
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:179:         { 31, // Jan
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:180:                 28, // Feb
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:181:                 31, // Mar
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:182:                 30, // Apr
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:183:                 31, // May
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:184:                 30, // Jun
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:185:                 31, // Jul
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:186:                 31, // Aug
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:187:                 30, // Sep
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:188:                 31, // Oct
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:189:                 30, // Nov
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:190:                 31, // Dec
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:191:         };
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:192: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:193:     public static final DateTime EARLIEST = new DateTime(1600, 1, 1);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:194: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:195:     public static final DateTime LATEST = new DateTime(2999, 12, 31);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:196: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:197:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:198:      * @param szDate
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:199:      * @return
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:200:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:201:     public static java.util.Date GetDate(String szDate)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:202:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:203:         return GetDate(szDate , new java.util.Date(0));
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:204:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:205: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:206:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:207:      * @param szDate
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:208:      * @param szFormat
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:209:      * @param dtDefaultDate
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:210:      * @return
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:211:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:212:     public static java.util.Date GetDate(String szDate, String szFormat, java.util.Date dtDefaultDate)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:213:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:214:         DateFormat dtFormat = new SimpleDateFormat(szFormat);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:215:         java.util.Date newDate = null;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:216:         try
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:217:         {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:218:              newDate = dtFormat.parse(szDate);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:219:         }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:220:         catch (ParseException e)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:221:         {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:222:              newDate = dtDefaultDate;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:223:         }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:224: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:225:         return newDate;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:226:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:227: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:228:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:229:      * @param szDate
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:230:      * @param szFormat
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:231:      * @param dtDefaultDate
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:232:      * @return
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:233:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:234:     public static DateTime GetDateTime(String szDate, String szFormat, java.util.Date dtDefaultDate)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:235:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:236:         java.util.Date tmpDate = GetDate(szDate,szFormat,dtDefaultDate);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:237: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:238:         DateTime retVal = null;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:239: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:240:         if (tmpDate != null)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:241:         {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:242:             retVal = new DateTime(tmpDate);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:243:         }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:244: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:245:         return retVal;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:246:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:247: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:248:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:249:      * @param szDate
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:250:      * @param dtDefaultDate
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:251:      * @return
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:252:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:253:     public static java.util.Date GetDate(String szDate, java.util.Date dtDefaultDate)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:254:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:255:         PropertyValue objDateProp = null;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:256: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:257:         try
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:258:         {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:259:             objDateProp = new PropertyValue("date:yyyyMMdd", szDate);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:260:             java.util.Date tmpDate = objDateProp.getValueDate();
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:261:             return tmpDate;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:262:         }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:263:         catch (Exception e)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:264:         {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:265:             return dtDefaultDate;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:266:         }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:267:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:268: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:269:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:270:      * @param szDate
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:271:      * @return
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:272:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:273:     public static DateTime GetDateTime(String szDate)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:274:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:275:         return GetDateTime(szDate , new DateTime(0));
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:276:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:277: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:278:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:279:      * @param szDate
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:280:      * @param dtDefaultDate
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:281:      * @return
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:282:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:283:     public static DateTime GetDateTime(String szDate , DateTime dtDefaultDate)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:284:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:285:         PropertyValue objDateProp = null;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:286: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:287:         try
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:288:         {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:289:             objDateProp = new PropertyValue("date:yyyyMMdd", szDate);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:290:             java.util.Date tmpDate = objDateProp.getValueDate();
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:291:             return new DateTime(tmpDate);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:292:         }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:293:         catch (Exception e)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:294:         {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:295:             return dtDefaultDate;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:296:         }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:297:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:298: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:299:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:300:      * Compares if date is inbetween two dates,including those dates
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:301:      * @param testDate
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:302:      * @param intervalBegin
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:303:      * @param intervalEnd
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:304:      * @return True/False
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:305:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:306:     public static boolean IsDateBetween(String testDate, java.util.Date intervalBegin, java.util.Date intervalEnd) throws Exception
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:307:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:308:         return IsDateBetween(GetDate(testDate), intervalBegin, intervalEnd);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:309:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:310: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:311:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:312:      * @param testDate
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:313:      * @param intervalBegin
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:314:      * @param intervalEnd
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:315:      * @return
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:316:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:317:     public static boolean IsDateBetween(java.util.Date testDate, java.util.Date intervalBegin, java.util.Date intervalEnd)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:318:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:319:         return ((testDate.compareTo(intervalBegin) >= 0) && (testDate.compareTo(intervalEnd) <= 0));
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:320:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:321: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:322:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:323:      * @param testDate
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:324:      * @param intervalBegin
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:325:      * @param intervalLengthDays
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:326:      * @param bUseWholeDays
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:327:      * @return
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:328:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:329:     public static boolean IsDateBetween(java.util.Date testDate, java.util.Date intervalBegin, int intervalLengthDays, boolean bUseWholeDays)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:330:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:331:         java.util.Date intervalEnd = AddDays(intervalBegin, intervalLengthDays, bUseWholeDays);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:332: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:333:         return ((testDate.compareTo(intervalBegin) >= 0) && (testDate.compareTo(intervalEnd) <= 0));
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:334:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:335: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:336:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:337:      * @param testDate
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:338:      * @param intervalBegin
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:339:      * @param intervalLengthDays
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:340:      * @param bUseWholeDays
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:341:      * @return
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:342:      * @throws Exception
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:343:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:344:     public static boolean IsDateBetween(String testDate, java.util.Date intervalBegin, int intervalLengthDays, boolean bUseWholeDays) throws Exception
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:345:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:346:         return IsDateBetween(GetDate(testDate), intervalBegin, intervalLengthDays, bUseWholeDays);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:347:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:348: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:349:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:350:      * @param testDate
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:351:      * @param intervalBegin
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:352:      * @param intervalEnd
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:353:      * @return
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:354:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:355:     public static boolean IsDateBetween(String testDate, DateTime intervalBegin, DateTime intervalEnd)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:356:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:357:         return IsDateBetween(GetDateTime(testDate), intervalBegin, intervalEnd);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:358:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:359: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:360:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:361:      * @param testDate
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:362:      * @param intervalBegin
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:363:      * @param intervalEnd
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:364:      * @return
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:365:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:366:     public static boolean IsDateBetween(DateTime testDate,  DateTime intervalBegin,  DateTime intervalEnd)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:367:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:368:         return ((testDate.compareTo(intervalBegin) >= 0) && (testDate.compareTo(intervalEnd) <= 0));
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:369:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:370: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:371:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:372:      * @param testDate
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:373:      * @param intervalBegin
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:374:      * @param intervalLengthDays
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:375:      * @return
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:376:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:377:     public static boolean IsDateBetween(DateTime testDate, DateTime intervalBegin, int intervalLengthDays)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:378:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:379:         DateTime intervalEnd = intervalBegin.addDays(intervalLengthDays);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:380: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:381:         return ((testDate.compareTo(intervalBegin) >= 0) && (testDate.compareTo(intervalEnd) <= 0));
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:382:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:383: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:384:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:385:      * @param testDate
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:386:      * @param intervalBegin
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:387:      * @param intervalLengthDays
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:388:      * @return
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:389:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:390:     public static boolean IsDateBetween(String testDate,  DateTime intervalBegin, int intervalLengthDays)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:391:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:392:         return IsDateBetween(GetDateTime(testDate), intervalBegin, intervalLengthDays);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:393:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:394: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:395:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:396:      * @param startDate
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:397:      * @param iDaysToAdd
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:398:      * @param bUseWholeDays
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:399:      * @return
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:400:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:401:     public static java.util.Date AddDays(java.util.Date startDate, int iDaysToAdd, boolean bUseWholeDays)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:402:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:403:         Calendar lCalendar = GregorianCalendar.getInstance();
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:404: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:405:         if (bUseWholeDays)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:406:         {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:407:             lCalendar.set(startDate.getYear() + 1900, startDate.getMonth(), startDate.getDate(), 0, 0, 0);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:408:         }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:409:         else
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:410:         {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:411:             lCalendar.setTime(startDate);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:412:         }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:413: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:414:         lCalendar.add(Calendar.DATE, iDaysToAdd);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:415: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:416:         return lCalendar.getTime();
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:417:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:418: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:419:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:420:      * Returns true if the given instant in time is before EARLIEST or after LATEST in the
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:421:      * given timezone.
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:422:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:423:     public static boolean isOutsideRange(TimeZone tzone, java.util.Date instantInTime)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:424:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:425:         GregorianCalendar cal = new GregorianCalendar(tzone);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:426:         cal.setTime(instantInTime);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:427:         return yearOutOfRange(cal.get(Calendar.YEAR));
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:428:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:429: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:430:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:431:      * @param year
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:432:      * @param month
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:433:      * @param dayOfMonth
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:434:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:435:     private void init(int year, int month, int dayOfMonth)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:436:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:437:         calendar = new GregorianCalendar(year, month - 1, dayOfMonth);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:438:         if (yearOutOfRange(getYear()))
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:439:         {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:440:             throw new IllegalArgumentException("Date year out of range: " + year);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:441:         }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:442:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:443: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:444:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:445:      * @param year
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:446:      * @return
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:447:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:448:     private static boolean yearOutOfRange(int year)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:449:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:450:         return (year < 1600) || (year >= 3000);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:451:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:452: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:453:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:454:      * Throws an exception if the input isn't a valid day in the Gregorian
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:455:      * Calendar
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:456:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:457:     private void checkValidYearMonthDay(int year, int month, int dayOfMonth)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:458:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:459:         if ((dayOfMonth == 29) && (month == 2) && isLeapYear(year))
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:460:         {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:461:             return;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:462:         }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:463:         if ((month <= 0) || (month > 12))
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:464:         {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:465:             throw new IllegalArgumentException("Invalid month: " + month);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:466:         }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:467:         if ((dayOfMonth <= 0) || (dayOfMonth > daysInMonth[month - 1]))
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:468:         {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:469:             throw new IllegalArgumentException("Year/month/day combination " + " is invalid: " + year + "/" + month + "/" + dayOfMonth);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:470:         }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:471:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:472: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:473:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:474:      * The day of the month
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:475:      * @return The day of the month (in range 1 to 31)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:476:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:477:     public synchronized int getDayOfMonth()
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:478:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:479:         return calendar.get(Calendar.DAY_OF_MONTH);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:480:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:481: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:482:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:483:      * The day of the week for this date
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:484:      * @return Day of week in range 1 (Sunday) to 7 (Saturday)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:485:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:486:     public synchronized int getDayOfWeek()
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:487:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:488:         return calendar.get(Calendar.DAY_OF_WEEK);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:489:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:490: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:491:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:492:      * The month of this date
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:493:      * @return Month in range 1 to 12
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:494:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:495:     public synchronized int getMonth()
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:496:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:497:         return calendar.get(Calendar.MONTH) + 1;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:498:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:499: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:500:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:501:      * The year of this date
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:502:      * @return The year
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:503:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:504:     public synchronized int getYear()
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:505:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:506:         return calendar.get(Calendar.YEAR);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:507:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:508: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:509:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:510:      * Returns a new date which is this date offset by numDays.
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:511:      * @param numDays the number of days to be added to this date
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:512:      * (can be negative)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:513:      * @return A new date offset by numDays
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:514:      * @throws IllegalArgumentException if the resulting day would be before
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:515:      * EARLIEST or after LATEST.  That is,
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:516:      * if numDays &lt; this.daysUntil(EARLIEST)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:517:      * or numDays &gt; this.daysUntil(LATEST)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:518:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:519:     public DateTime addDays(int numDays)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:520:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:521:         return new DateTime(getYear(), getMonth(), getDayOfMonth() + numDays, true);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:522:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:523: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:524:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:525:      * Returns the number of days until the given date
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:526:      * @param otherDay The date to compare to
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:527:      * @return The number of days until otherDay (can be negative)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:528:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:529:     public int daysUntil(DateTime otherDay)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:530:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:531:         return otherDay.getDaysSinceEpoch() - this.getDaysSinceEpoch();
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:532:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:533: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:534:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:535:      * Returns the number of days until the given date
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:536:      * @param otherDay The date to compare to
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:537:      * @return The number of days until otherDay (can be negative)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:538:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:539:     public int daysUntil(java.util.Date otherDay)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:540:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:541:         return (new DateTime(otherDay)).getDaysSinceEpoch() - this.getDaysSinceEpoch();
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:542:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:543: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:544:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:545:      * Returns the number of month changes until the given day.  Note that
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:546:      * this means there is just one 'month' between 1 November
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:547:      * and 31 December.
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:548:      *
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:549:      * @param otherDay The date to compare to
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:550:      * @return The number of month changes until the given day
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:551:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:552:     public int monthsUntil(DateTime otherDay)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:553:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:554:         return (otherDay.getMonth() - this.getMonth()) + (12 * (otherDay.getYear() - this.getYear()));
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:555:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:556: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:557:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:558:      * Days since epoch (1 Jan, 1 A.D.)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:559:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:560:     private synchronized int getDaysSinceEpoch()
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:561:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:562:         if (daysSinceEpoch == -1)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:563:         {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:564:             int year = getYear();
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:565:             int month = getMonth();
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:566:             int daysThisYear = cumulDaysToMonth[month - 1] + getDayOfMonth() - 1;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:567:             if ((month > 2) && isLeapYear(year))
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:568:             {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:569:                 daysThisYear++;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:570:             }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:571: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:572:             daysSinceEpoch = daysToYear(year) + daysThisYear;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:573:         }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:574:         return daysSinceEpoch;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:575:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:576: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:577:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:578:      * Number of days up to, but not including, the given year since epoch.
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:579:      * @param year
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:580:      * @return
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:581:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:582:     static int daysToYear(int year)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:583:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:584:         return (365 * year) + numLeapsToYear(year);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:585:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:586: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:587:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:588:      * Returns the number of leap years from the epoch until (but not including)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:589:      * the given year. The epoch begins on 1 Jan, 1AD
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:590:      *
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:591:      * @param year
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:592:      * @return The number of leap years
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:593:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:594:     static int numLeapsToYear(int year)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:595:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:596:         int num4y = (year - 1) / 4;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:597:         int num100y = (year - 1) / 100;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:598:         int num400y = (year - 1) / 400;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:599:         int numLeaps = num4y - num100y + num400y;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:600:         return numLeaps;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:601:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:602: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:603:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:604:      * Returns true if the year is a leap year in the Gregorian calendar
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:605:      * @param year The year to consider
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:606:      * @return True if <code>year</code> is a leap year
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:607:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:608:     public static boolean isLeapYear(int year)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:609:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:610:         return (year % 400 == 0) || ((year % 100 != 0) && (year % 4 == 0));
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:611:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:612: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:613:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:614:      * If the given object is a DateTime:
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:615:      * <ol>
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:616:      * <li>returns less than 0 if this date is before the given date
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:617:      * <li>returns 0 if this date is equal to the given date
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:618:      * <li>returns more than 0 if this date is after the given date
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:619:      * </ol>
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:620:      * @param other the date to compare this one to
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:621:      * @throws ClassCastException if <code>other</code> is not an instance of
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:622:      * DateTime
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:623:      * @see java.lang.Comparable#compareTo(java.lang.Object)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:624:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:625:     public int compareTo(Object other)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:626:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:627:         return this.getDaysSinceEpoch() - ((DateTime) other).getDaysSinceEpoch();
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:628:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:629: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:630:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:631:      * Returns true if this date is before the given date
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:632:      * @param other The date to consider
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:633:      * @return true if this date is before the given date
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:634:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:635:     public boolean isBefore(DateTime other)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:636:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:637:         return compareTo(other) < 0;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:638:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:639: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:640:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:641:      * Returns true if this date is after the given date
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:642:      * @param other The date to consider
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:643:      * @return true if this date is after the given date
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:644:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:645:     public boolean isAfter(DateTime other)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:646:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:647:         return compareTo(other) > 0;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:648:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:649: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:650:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:651:      * Returns true if the given object is a DateTime representing the
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:652:      * same date as this object
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:653:      * @param other The date to test against
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:654:      * @return true if this is the same date as <code>other</code>
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:655:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:656:     public boolean equals(Object other)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:657:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:658:         if (other instanceof DateTime)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:659:         {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:660:             return (this.compareTo(other) == 0);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:661:         }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:662:         return false;
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:663:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:664: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:665:     /* (non-Javadoc)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:666:      * @see java.lang.Object#hashCode()
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:667:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:668:     public int hashCode()
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:669:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:670:         return (375 * getYear()) + (35 * getMonth()) + getDayOfMonth();
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:671:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:672: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:673:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:674:      * Returns a string form of this date in the form "2004-9-23"
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:675:      * @return A string form of this date
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:676:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:677:     public String toString()
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:678:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:679:         return new StringBuffer().append(getYear()).append("-").append(getMonth()).append("-").append(getDayOfMonth()).toString();
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:680:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:681: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:682:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:683:      * @param out
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:684:      * @throws IOException
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:685:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:686:     private void writeObject(java.io.ObjectOutputStream out) throws IOException
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:687:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:688:         out.writeInt(getYear());
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:689:         out.writeInt(getMonth());
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:690:         out.writeInt(getDayOfMonth());
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:691:         out.writeInt(daysSinceEpoch);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:692:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:693: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:694:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:695:      * @param in
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:696:      * @throws IOException
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:697:      * @throws ClassNotFoundException
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:698:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:699:     private void readObject(java.io.ObjectInputStream in) throws IOException, ClassNotFoundException
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:700:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:701:         init(in.readInt(), in.readInt(), in.readInt());
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:702:         daysSinceEpoch = in.readInt();
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:703:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:704: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:705:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:706:      * Returns the instant in time when this day begins in the given timezone.
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:707:      * @param timezone The timezone to consider
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:708:      * @return the instant in time when this day begins
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:709:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:710:     public java.util.Date toDate(TimeZone timezone)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:711:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:712:         return toDate(timezone, 0, 0, 0);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:713:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:714: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:715:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:716:      * @return
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:717:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:718:     public java.util.Date toDate()
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:719:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:720:         return toDate(0, 0, 0);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:721:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:722: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:723:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:724:      * @param locale
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:725:      * @return
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:726:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:727:     public java.util.Date toDate(Locale locale)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:728:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:729:         return toDate(locale, 0, 0, 0);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:730:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:731: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:732:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:733:      * Returns the instant in time when the given time of day is reached in
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:734:      * the given timezone.  If the time occurs twice on this date (as
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:735:      * may happen when coming out of daylight savings time) the second
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:736:      * occurrence will be returned.
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:737:      *
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:738:      * @param timezone The timezone to for which the date applies
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:739:      * @param hour The hour of the day in range 0 - 23
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:740:      * @param min The minute of the day in range 0 - 59
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:741:      * @param sec The second of the day in range 0 - 60 (60 is for leap-seconds)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:742:      * @return The instant in time when the given time of day is reached in
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:743:      * the given timezone
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:744:      * @throws IllegalArgumentException if the bounds of the above
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:745:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:746:     public java.util.Date toDate(TimeZone timezone, int hour, int min, int sec)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:747:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:748:         checkHourMinSec(hour, min, sec);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:749:         GregorianCalendar cal = new GregorianCalendar(timezone);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:750:         cal.clear();
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:751:         cal.set(getYear(), getMonth() - 1, getDayOfMonth(), hour, min, sec);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:752:         return cal.getTime();
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:753:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:754: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:755:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:756:      * @param hour
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:757:      * @param min
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:758:      * @param sec
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:759:      * @return
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:760:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:761:     public java.util.Date toDate(int hour, int min, int sec)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:762:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:763:         checkHourMinSec(hour, min, sec);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:764:         GregorianCalendar cal = new GregorianCalendar();
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:765:         cal.clear();
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:766:         cal.set(getYear(), getMonth() - 1, getDayOfMonth(), hour, min, sec);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:767:         return cal.getTime();
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:768:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:769: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:770:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:771:      * @param locale
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:772:      * @param hour
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:773:      * @param min
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:774:      * @param sec
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:775:      * @return
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:776:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:777:     public java.util.Date toDate(Locale locale, int hour, int min, int sec)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:778:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:779:         checkHourMinSec(hour, min, sec);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:780:         GregorianCalendar cal = new GregorianCalendar(locale);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:781:         cal.clear();
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:782:         cal.set(getYear(), getMonth() - 1, getDayOfMonth(), hour, min, sec);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:783:         return cal.getTime();
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:784:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:785: 
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:786:     /**
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:787:      * @param hour
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:788:      * @param min
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:789:      * @param sec
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:790:      */
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:791:     private void checkHourMinSec(int hour, int min, int sec)
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:792:     {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:793:         if ((hour < 0) || (hour >= 24))
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:794:         {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:795:             throw new IllegalArgumentException("Hour out of range: " + hour);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:796:         }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:797:         if ((min < 0) || (min >= 60))
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:798:         {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:799:             throw new IllegalArgumentException("Minute out of range: " + min);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:800:         }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:801:         // Leap seconds mean some minutes are 61 seconds long!
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:802:         if ((sec < 0) || (sec >= 61))
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:803:         {
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:804:             throw new IllegalArgumentException("Second out of range: " + hour);
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:805:         }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:806:     }
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:807: //$Section=definitions$Preserve=no
C:\GitHub\JAC2020\jac2020\jacBuild8\source\scripts\com\esarks\arm\util\DateTime.script:808: 
C:\GitHub\JAC2020\jac2020\jacBuild8\conf\micPostfix.script:1: }
